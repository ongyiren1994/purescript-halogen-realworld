(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb, mod5) => function __require() {
    return mod5 || (0, cb[__getOwnPropNames(cb)[0]])((mod5 = { exports: {} }).exports, mod5), mod5.exports;
  };
  var __copyProps = (to2, from4, except2, desc) => {
    if (from4 && typeof from4 === "object" || typeof from4 === "function") {
      for (let key2 of __getOwnPropNames(from4))
        if (!__hasOwnProp.call(to2, key2) && key2 !== except2)
          __defProp(to2, key2, { get: () => from4[key2], enumerable: !(desc = __getOwnPropDesc(from4, key2)) || desc.enumerable });
    }
    return to2;
  };
  var __toESM = (mod5, isNodeMode, target6) => (target6 = mod5 != null ? __create(__getProtoOf(mod5)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod5 || !mod5.__esModule ? __defProp(target6, "default", { value: mod5, enumerable: true }) : target6,
    mod5
  ));

  // node_modules/decimal.js/decimal.js
  var require_decimal = __commonJS({
    "node_modules/decimal.js/decimal.js"(exports, module) {
      (function(globalScope) {
        "use strict";
        var EXP_LIMIT = 9e15, MAX_DIGITS = 1e9, NUMERALS = "0123456789abcdef", LN10 = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058", PI = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789", DEFAULTS = {
          // These values must be integers within the stated ranges (inclusive).
          // Most of these values can be changed at run-time using the `Decimal.config` method.
          // The maximum number of significant digits of the result of a calculation or base conversion.
          // E.g. `Decimal.config({ precision: 20 });`
          precision: 20,
          // 1 to MAX_DIGITS
          // The rounding mode used when rounding to `precision`.
          //
          // ROUND_UP         0 Away from zero.
          // ROUND_DOWN       1 Towards zero.
          // ROUND_CEIL       2 Towards +Infinity.
          // ROUND_FLOOR      3 Towards -Infinity.
          // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
          // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
          // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
          // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
          // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
          //
          // E.g.
          // `Decimal.rounding = 4;`
          // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
          rounding: 4,
          // 0 to 8
          // The modulo mode used when calculating the modulus: a mod n.
          // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
          // The remainder (r) is calculated as: r = a - n * q.
          //
          // UP         0 The remainder is positive if the dividend is negative, else is negative.
          // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
          // FLOOR      3 The remainder has the same sign as the divisor (Python %).
          // HALF_EVEN  6 The IEEE 754 remainder function.
          // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
          //
          // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
          // division (9) are commonly used for the modulus operation. The other rounding modes can also
          // be used, but they may not give useful results.
          modulo: 1,
          // 0 to 9
          // The exponent value at and beneath which `toString` returns exponential notation.
          // JavaScript numbers: -7
          toExpNeg: -7,
          // 0 to -EXP_LIMIT
          // The exponent value at and above which `toString` returns exponential notation.
          // JavaScript numbers: 21
          toExpPos: 21,
          // 0 to EXP_LIMIT
          // The minimum exponent value, beneath which underflow to zero occurs.
          // JavaScript numbers: -324  (5e-324)
          minE: -EXP_LIMIT,
          // -1 to -EXP_LIMIT
          // The maximum exponent value, above which overflow to Infinity occurs.
          // JavaScript numbers: 308  (1.7976931348623157e+308)
          maxE: EXP_LIMIT,
          // 1 to EXP_LIMIT
          // Whether to use cryptographically-secure random number generation, if available.
          crypto: false
          // true/false
        }, Decimal2, inexact, noConflict, quadrant, external = true, decimalError = "[DecimalError] ", invalidArgument = decimalError + "Invalid argument: ", precisionLimitExceeded = decimalError + "Precision limit exceeded", cryptoUnavailable = decimalError + "crypto unavailable", tag = "[object Decimal]", mathfloor = Math.floor, mathpow = Math.pow, isBinary = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i, isHex = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i, isOctal = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i, isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, BASE = 1e7, LOG_BASE = 7, MAX_SAFE_INTEGER = 9007199254740991, LN10_PRECISION = LN10.length - 1, PI_PRECISION = PI.length - 1, P = { toStringTag: tag };
        P.absoluteValue = P.abs = function() {
          var x = new this.constructor(this);
          if (x.s < 0)
            x.s = 1;
          return finalise(x);
        };
        P.ceil = function() {
          return finalise(new this.constructor(this), this.e + 1, 2);
        };
        P.clampedTo = P.clamp = function(min7, max8) {
          var k, x = this, Ctor = x.constructor;
          min7 = new Ctor(min7);
          max8 = new Ctor(max8);
          if (!min7.s || !max8.s)
            return new Ctor(NaN);
          if (min7.gt(max8))
            throw Error(invalidArgument + max8);
          k = x.cmp(min7);
          return k < 0 ? min7 : x.cmp(max8) > 0 ? max8 : new Ctor(x);
        };
        P.comparedTo = P.cmp = function(y) {
          var i2, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;
          if (!xd || !yd) {
            return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
          }
          if (!xd[0] || !yd[0])
            return xd[0] ? xs : yd[0] ? -ys : 0;
          if (xs !== ys)
            return xs;
          if (x.e !== y.e)
            return x.e > y.e ^ xs < 0 ? 1 : -1;
          xdL = xd.length;
          ydL = yd.length;
          for (i2 = 0, j = xdL < ydL ? xdL : ydL; i2 < j; ++i2) {
            if (xd[i2] !== yd[i2])
              return xd[i2] > yd[i2] ^ xs < 0 ? 1 : -1;
          }
          return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
        };
        P.cosine = P.cos = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.d)
            return new Ctor(NaN);
          if (!x.d[0])
            return new Ctor(1);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
          Ctor.rounding = 1;
          x = cosine(Ctor, toLessThanHalfPi(Ctor, x));
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);
        };
        P.cubeRoot = P.cbrt = function() {
          var e2, m, n, r, rep, s, sd, t, t3, t3plusx, x = this, Ctor = x.constructor;
          if (!x.isFinite() || x.isZero())
            return new Ctor(x);
          external = false;
          s = x.s * mathpow(x.s * x, 1 / 3);
          if (!s || Math.abs(s) == 1 / 0) {
            n = digitsToString(x.d);
            e2 = x.e;
            if (s = (e2 - n.length + 1) % 3)
              n += s == 1 || s == -2 ? "0" : "00";
            s = mathpow(n, 1 / 3);
            e2 = mathfloor((e2 + 1) / 3) - (e2 % 3 == (e2 < 0 ? -1 : 2));
            if (s == 1 / 0) {
              n = "5e" + e2;
            } else {
              n = s.toExponential();
              n = n.slice(0, n.indexOf("e") + 1) + e2;
            }
            r = new Ctor(n);
            r.s = x.s;
          } else {
            r = new Ctor(s.toString());
          }
          sd = (e2 = Ctor.precision) + 3;
          for (; ; ) {
            t = r;
            t3 = t.times(t).times(t);
            t3plusx = t3.plus(x);
            r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);
            if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
              n = n.slice(sd - 3, sd + 1);
              if (n == "9999" || !rep && n == "4999") {
                if (!rep) {
                  finalise(t, e2 + 1, 0);
                  if (t.times(t).times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }
                sd += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
                  finalise(r, e2 + 1, 1);
                  m = !r.times(r).times(r).eq(x);
                }
                break;
              }
            }
          }
          external = true;
          return finalise(r, e2, Ctor.rounding, m);
        };
        P.decimalPlaces = P.dp = function() {
          var w, d = this.d, n = NaN;
          if (d) {
            w = d.length - 1;
            n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;
            w = d[w];
            if (w)
              for (; w % 10 == 0; w /= 10)
                n--;
            if (n < 0)
              n = 0;
          }
          return n;
        };
        P.dividedBy = P.div = function(y) {
          return divide(this, new this.constructor(y));
        };
        P.dividedToIntegerBy = P.divToInt = function(y) {
          var x = this, Ctor = x.constructor;
          return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
        };
        P.equals = P.eq = function(y) {
          return this.cmp(y) === 0;
        };
        P.floor = function() {
          return finalise(new this.constructor(this), this.e + 1, 3);
        };
        P.greaterThan = P.gt = function(y) {
          return this.cmp(y) > 0;
        };
        P.greaterThanOrEqualTo = P.gte = function(y) {
          var k = this.cmp(y);
          return k == 1 || k === 0;
        };
        P.hyperbolicCosine = P.cosh = function() {
          var k, n, pr, rm, len, x = this, Ctor = x.constructor, one2 = new Ctor(1);
          if (!x.isFinite())
            return new Ctor(x.s ? 1 / 0 : NaN);
          if (x.isZero())
            return one2;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
          Ctor.rounding = 1;
          len = x.d.length;
          if (len < 32) {
            k = Math.ceil(len / 3);
            n = (1 / tinyPow(4, k)).toString();
          } else {
            k = 16;
            n = "2.3283064365386962890625e-10";
          }
          x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);
          var cosh2_x, i2 = k, d8 = new Ctor(8);
          for (; i2--; ) {
            cosh2_x = x.times(x);
            x = one2.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
          }
          return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);
        };
        P.hyperbolicSine = P.sinh = function() {
          var k, pr, rm, len, x = this, Ctor = x.constructor;
          if (!x.isFinite() || x.isZero())
            return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
          Ctor.rounding = 1;
          len = x.d.length;
          if (len < 3) {
            x = taylorSeries(Ctor, 2, x, x, true);
          } else {
            k = 1.4 * Math.sqrt(len);
            k = k > 16 ? 16 : k | 0;
            x = x.times(1 / tinyPow(5, k));
            x = taylorSeries(Ctor, 2, x, x, true);
            var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
            for (; k--; ) {
              sinh2_x = x.times(x);
              x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
            }
          }
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise(x, pr, rm, true);
        };
        P.hyperbolicTangent = P.tanh = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite())
            return new Ctor(x.s);
          if (x.isZero())
            return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + 7;
          Ctor.rounding = 1;
          return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
        };
        P.inverseCosine = P.acos = function() {
          var halfPi, x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;
          if (k !== -1) {
            return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);
          }
          if (x.isZero())
            return getPi(Ctor, pr + 4, rm).times(0.5);
          Ctor.precision = pr + 6;
          Ctor.rounding = 1;
          x = x.asin();
          halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return halfPi.minus(x);
        };
        P.inverseHyperbolicCosine = P.acosh = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (x.lte(1))
            return new Ctor(x.eq(1) ? 0 : NaN);
          if (!x.isFinite())
            return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
          Ctor.rounding = 1;
          external = false;
          x = x.times(x).minus(1).sqrt().plus(x);
          external = true;
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.ln();
        };
        P.inverseHyperbolicSine = P.asinh = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite() || x.isZero())
            return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
          Ctor.rounding = 1;
          external = false;
          x = x.times(x).plus(1).sqrt().plus(x);
          external = true;
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.ln();
        };
        P.inverseHyperbolicTangent = P.atanh = function() {
          var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;
          if (!x.isFinite())
            return new Ctor(NaN);
          if (x.e >= 0)
            return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          xsd = x.sd();
          if (Math.max(xsd, pr) < 2 * -x.e - 1)
            return finalise(new Ctor(x), pr, rm, true);
          Ctor.precision = wpr = xsd - x.e;
          x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);
          Ctor.precision = pr + 4;
          Ctor.rounding = 1;
          x = x.ln();
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.times(0.5);
        };
        P.inverseSine = P.asin = function() {
          var halfPi, k, pr, rm, x = this, Ctor = x.constructor;
          if (x.isZero())
            return new Ctor(x);
          k = x.abs().cmp(1);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (k !== -1) {
            if (k === 0) {
              halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
              halfPi.s = x.s;
              return halfPi;
            }
            return new Ctor(NaN);
          }
          Ctor.precision = pr + 6;
          Ctor.rounding = 1;
          x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.times(2);
        };
        P.inverseTangent = P.atan = function() {
          var i2, j, k, n, px, t, r, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;
          if (!x.isFinite()) {
            if (!x.s)
              return new Ctor(NaN);
            if (pr + 4 <= PI_PRECISION) {
              r = getPi(Ctor, pr + 4, rm).times(0.5);
              r.s = x.s;
              return r;
            }
          } else if (x.isZero()) {
            return new Ctor(x);
          } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {
            r = getPi(Ctor, pr + 4, rm).times(0.25);
            r.s = x.s;
            return r;
          }
          Ctor.precision = wpr = pr + 10;
          Ctor.rounding = 1;
          k = Math.min(28, wpr / LOG_BASE + 2 | 0);
          for (i2 = k; i2; --i2)
            x = x.div(x.times(x).plus(1).sqrt().plus(1));
          external = false;
          j = Math.ceil(wpr / LOG_BASE);
          n = 1;
          x2 = x.times(x);
          r = new Ctor(x);
          px = x;
          for (; i2 !== -1; ) {
            px = px.times(x2);
            t = r.minus(px.div(n += 2));
            px = px.times(x2);
            r = t.plus(px.div(n += 2));
            if (r.d[j] !== void 0)
              for (i2 = j; r.d[i2] === t.d[i2] && i2--; )
                ;
          }
          if (k)
            r = r.times(2 << k - 1);
          external = true;
          return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);
        };
        P.isFinite = function() {
          return !!this.d;
        };
        P.isInteger = P.isInt = function() {
          return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;
        };
        P.isNaN = function() {
          return !this.s;
        };
        P.isNegative = P.isNeg = function() {
          return this.s < 0;
        };
        P.isPositive = P.isPos = function() {
          return this.s > 0;
        };
        P.isZero = function() {
          return !!this.d && this.d[0] === 0;
        };
        P.lessThan = P.lt = function(y) {
          return this.cmp(y) < 0;
        };
        P.lessThanOrEqualTo = P.lte = function(y) {
          return this.cmp(y) < 1;
        };
        P.logarithm = P.log = function(base2) {
          var isBase10, d, denominator, k, inf, num, sd, r, arg = this, Ctor = arg.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard8 = 5;
          if (base2 == null) {
            base2 = new Ctor(10);
            isBase10 = true;
          } else {
            base2 = new Ctor(base2);
            d = base2.d;
            if (base2.s < 0 || !d || !d[0] || base2.eq(1))
              return new Ctor(NaN);
            isBase10 = base2.eq(10);
          }
          d = arg.d;
          if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {
            return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);
          }
          if (isBase10) {
            if (d.length > 1) {
              inf = true;
            } else {
              for (k = d[0]; k % 10 === 0; )
                k /= 10;
              inf = k !== 1;
            }
          }
          external = false;
          sd = pr + guard8;
          num = naturalLogarithm(arg, sd);
          denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base2, sd);
          r = divide(num, denominator, sd, 1);
          if (checkRoundingDigits(r.d, k = pr, rm)) {
            do {
              sd += 10;
              num = naturalLogarithm(arg, sd);
              denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base2, sd);
              r = divide(num, denominator, sd, 1);
              if (!inf) {
                if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {
                  r = finalise(r, pr + 1, 0);
                }
                break;
              }
            } while (checkRoundingDigits(r.d, k += 10, rm));
          }
          external = true;
          return finalise(r, pr, rm);
        };
        P.minus = P.sub = function(y) {
          var d, e2, i2, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;
          y = new Ctor(y);
          if (!x.d || !y.d) {
            if (!x.s || !y.s)
              y = new Ctor(NaN);
            else if (x.d)
              y.s = -y.s;
            else
              y = new Ctor(y.d || x.s !== y.s ? x : NaN);
            return y;
          }
          if (x.s != y.s) {
            y.s = -y.s;
            return x.plus(y);
          }
          xd = x.d;
          yd = y.d;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (!xd[0] || !yd[0]) {
            if (yd[0])
              y.s = -y.s;
            else if (xd[0])
              y = new Ctor(x);
            else
              return new Ctor(rm === 3 ? -0 : 0);
            return external ? finalise(y, pr, rm) : y;
          }
          e2 = mathfloor(y.e / LOG_BASE);
          xe = mathfloor(x.e / LOG_BASE);
          xd = xd.slice();
          k = xe - e2;
          if (k) {
            xLTy = k < 0;
            if (xLTy) {
              d = xd;
              k = -k;
              len = yd.length;
            } else {
              d = yd;
              e2 = xe;
              len = xd.length;
            }
            i2 = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
            if (k > i2) {
              k = i2;
              d.length = 1;
            }
            d.reverse();
            for (i2 = k; i2--; )
              d.push(0);
            d.reverse();
          } else {
            i2 = xd.length;
            len = yd.length;
            xLTy = i2 < len;
            if (xLTy)
              len = i2;
            for (i2 = 0; i2 < len; i2++) {
              if (xd[i2] != yd[i2]) {
                xLTy = xd[i2] < yd[i2];
                break;
              }
            }
            k = 0;
          }
          if (xLTy) {
            d = xd;
            xd = yd;
            yd = d;
            y.s = -y.s;
          }
          len = xd.length;
          for (i2 = yd.length - len; i2 > 0; --i2)
            xd[len++] = 0;
          for (i2 = yd.length; i2 > k; ) {
            if (xd[--i2] < yd[i2]) {
              for (j = i2; j && xd[--j] === 0; )
                xd[j] = BASE - 1;
              --xd[j];
              xd[i2] += BASE;
            }
            xd[i2] -= yd[i2];
          }
          for (; xd[--len] === 0; )
            xd.pop();
          for (; xd[0] === 0; xd.shift())
            --e2;
          if (!xd[0])
            return new Ctor(rm === 3 ? -0 : 0);
          y.d = xd;
          y.e = getBase10Exponent(xd, e2);
          return external ? finalise(y, pr, rm) : y;
        };
        P.modulo = P.mod = function(y) {
          var q2, x = this, Ctor = x.constructor;
          y = new Ctor(y);
          if (!x.d || !y.s || y.d && !y.d[0])
            return new Ctor(NaN);
          if (!y.d || x.d && !x.d[0]) {
            return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);
          }
          external = false;
          if (Ctor.modulo == 9) {
            q2 = divide(x, y.abs(), 0, 3, 1);
            q2.s *= y.s;
          } else {
            q2 = divide(x, y, 0, Ctor.modulo, 1);
          }
          q2 = q2.times(y);
          external = true;
          return x.minus(q2);
        };
        P.naturalExponential = P.exp = function() {
          return naturalExponential(this);
        };
        P.naturalLogarithm = P.ln = function() {
          return naturalLogarithm(this);
        };
        P.negated = P.neg = function() {
          var x = new this.constructor(this);
          x.s = -x.s;
          return finalise(x);
        };
        P.plus = P.add = function(y) {
          var carry, d, e2, i2, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;
          y = new Ctor(y);
          if (!x.d || !y.d) {
            if (!x.s || !y.s)
              y = new Ctor(NaN);
            else if (!x.d)
              y = new Ctor(y.d || x.s === y.s ? x : NaN);
            return y;
          }
          if (x.s != y.s) {
            y.s = -y.s;
            return x.minus(y);
          }
          xd = x.d;
          yd = y.d;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (!xd[0] || !yd[0]) {
            if (!yd[0])
              y = new Ctor(x);
            return external ? finalise(y, pr, rm) : y;
          }
          k = mathfloor(x.e / LOG_BASE);
          e2 = mathfloor(y.e / LOG_BASE);
          xd = xd.slice();
          i2 = k - e2;
          if (i2) {
            if (i2 < 0) {
              d = xd;
              i2 = -i2;
              len = yd.length;
            } else {
              d = yd;
              e2 = k;
              len = xd.length;
            }
            k = Math.ceil(pr / LOG_BASE);
            len = k > len ? k + 1 : len + 1;
            if (i2 > len) {
              i2 = len;
              d.length = 1;
            }
            d.reverse();
            for (; i2--; )
              d.push(0);
            d.reverse();
          }
          len = xd.length;
          i2 = yd.length;
          if (len - i2 < 0) {
            i2 = len;
            d = yd;
            yd = xd;
            xd = d;
          }
          for (carry = 0; i2; ) {
            carry = (xd[--i2] = xd[i2] + yd[i2] + carry) / BASE | 0;
            xd[i2] %= BASE;
          }
          if (carry) {
            xd.unshift(carry);
            ++e2;
          }
          for (len = xd.length; xd[--len] == 0; )
            xd.pop();
          y.d = xd;
          y.e = getBase10Exponent(xd, e2);
          return external ? finalise(y, pr, rm) : y;
        };
        P.precision = P.sd = function(z) {
          var k, x = this;
          if (z !== void 0 && z !== !!z && z !== 1 && z !== 0)
            throw Error(invalidArgument + z);
          if (x.d) {
            k = getPrecision(x.d);
            if (z && x.e + 1 > k)
              k = x.e + 1;
          } else {
            k = NaN;
          }
          return k;
        };
        P.round = function() {
          var x = this, Ctor = x.constructor;
          return finalise(new Ctor(x), x.e + 1, Ctor.rounding);
        };
        P.sine = P.sin = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite())
            return new Ctor(NaN);
          if (x.isZero())
            return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
          Ctor.rounding = 1;
          x = sine(Ctor, toLessThanHalfPi(Ctor, x));
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);
        };
        P.squareRoot = P.sqrt = function() {
          var m, n, sd, r, rep, t, x = this, d = x.d, e2 = x.e, s = x.s, Ctor = x.constructor;
          if (s !== 1 || !d || !d[0]) {
            return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);
          }
          external = false;
          s = Math.sqrt(+x);
          if (s == 0 || s == 1 / 0) {
            n = digitsToString(d);
            if ((n.length + e2) % 2 == 0)
              n += "0";
            s = Math.sqrt(n);
            e2 = mathfloor((e2 + 1) / 2) - (e2 < 0 || e2 % 2);
            if (s == 1 / 0) {
              n = "5e" + e2;
            } else {
              n = s.toExponential();
              n = n.slice(0, n.indexOf("e") + 1) + e2;
            }
            r = new Ctor(n);
          } else {
            r = new Ctor(s.toString());
          }
          sd = (e2 = Ctor.precision) + 3;
          for (; ; ) {
            t = r;
            r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);
            if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
              n = n.slice(sd - 3, sd + 1);
              if (n == "9999" || !rep && n == "4999") {
                if (!rep) {
                  finalise(t, e2 + 1, 0);
                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }
                sd += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
                  finalise(r, e2 + 1, 1);
                  m = !r.times(r).eq(x);
                }
                break;
              }
            }
          }
          external = true;
          return finalise(r, e2, Ctor.rounding, m);
        };
        P.tangent = P.tan = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite())
            return new Ctor(NaN);
          if (x.isZero())
            return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + 10;
          Ctor.rounding = 1;
          x = x.sin();
          x.s = 1;
          x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);
        };
        P.times = P.mul = function(y) {
          var carry, e2, i2, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
          y.s *= x.s;
          if (!xd || !xd[0] || !yd || !yd[0]) {
            return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);
          }
          e2 = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);
          xdL = xd.length;
          ydL = yd.length;
          if (xdL < ydL) {
            r = xd;
            xd = yd;
            yd = r;
            rL = xdL;
            xdL = ydL;
            ydL = rL;
          }
          r = [];
          rL = xdL + ydL;
          for (i2 = rL; i2--; )
            r.push(0);
          for (i2 = ydL; --i2 >= 0; ) {
            carry = 0;
            for (k = xdL + i2; k > i2; ) {
              t = r[k] + yd[i2] * xd[k - i2 - 1] + carry;
              r[k--] = t % BASE | 0;
              carry = t / BASE | 0;
            }
            r[k] = (r[k] + carry) % BASE | 0;
          }
          for (; !r[--rL]; )
            r.pop();
          if (carry)
            ++e2;
          else
            r.shift();
          y.d = r;
          y.e = getBase10Exponent(r, e2);
          return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;
        };
        P.toBinary = function(sd, rm) {
          return toStringBinary(this, 2, sd, rm);
        };
        P.toDecimalPlaces = P.toDP = function(dp, rm) {
          var x = this, Ctor = x.constructor;
          x = new Ctor(x);
          if (dp === void 0)
            return x;
          checkInt32(dp, 0, MAX_DIGITS);
          if (rm === void 0)
            rm = Ctor.rounding;
          else
            checkInt32(rm, 0, 8);
          return finalise(x, dp + x.e + 1, rm);
        };
        P.toExponential = function(dp, rm) {
          var str, x = this, Ctor = x.constructor;
          if (dp === void 0) {
            str = finiteToString(x, true);
          } else {
            checkInt32(dp, 0, MAX_DIGITS);
            if (rm === void 0)
              rm = Ctor.rounding;
            else
              checkInt32(rm, 0, 8);
            x = finalise(new Ctor(x), dp + 1, rm);
            str = finiteToString(x, true, dp + 1);
          }
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P.toFixed = function(dp, rm) {
          var str, y, x = this, Ctor = x.constructor;
          if (dp === void 0) {
            str = finiteToString(x);
          } else {
            checkInt32(dp, 0, MAX_DIGITS);
            if (rm === void 0)
              rm = Ctor.rounding;
            else
              checkInt32(rm, 0, 8);
            y = finalise(new Ctor(x), dp + x.e + 1, rm);
            str = finiteToString(y, false, dp + y.e + 1);
          }
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P.toFraction = function(maxD) {
          var d, d0, d1, d2, e2, k, n, n0, n1, pr, q2, r, x = this, xd = x.d, Ctor = x.constructor;
          if (!xd)
            return new Ctor(x);
          n1 = d0 = new Ctor(1);
          d1 = n0 = new Ctor(0);
          d = new Ctor(d1);
          e2 = d.e = getPrecision(xd) - x.e - 1;
          k = e2 % LOG_BASE;
          d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);
          if (maxD == null) {
            maxD = e2 > 0 ? d : n1;
          } else {
            n = new Ctor(maxD);
            if (!n.isInt() || n.lt(n1))
              throw Error(invalidArgument + n);
            maxD = n.gt(d) ? e2 > 0 ? d : n1 : n;
          }
          external = false;
          n = new Ctor(digitsToString(xd));
          pr = Ctor.precision;
          Ctor.precision = e2 = xd.length * LOG_BASE * 2;
          for (; ; ) {
            q2 = divide(n, d, 0, 1, 1);
            d2 = d0.plus(q2.times(d1));
            if (d2.cmp(maxD) == 1)
              break;
            d0 = d1;
            d1 = d2;
            d2 = n1;
            n1 = n0.plus(q2.times(d2));
            n0 = d2;
            d2 = d;
            d = n.minus(q2.times(d2));
            n = d2;
          }
          d2 = divide(maxD.minus(d0), d1, 0, 1, 1);
          n0 = n0.plus(d2.times(n1));
          d0 = d0.plus(d2.times(d1));
          n0.s = n1.s = x.s;
          r = divide(n1, d1, e2, 1).minus(x).abs().cmp(divide(n0, d0, e2, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
          Ctor.precision = pr;
          external = true;
          return r;
        };
        P.toHexadecimal = P.toHex = function(sd, rm) {
          return toStringBinary(this, 16, sd, rm);
        };
        P.toNearest = function(y, rm) {
          var x = this, Ctor = x.constructor;
          x = new Ctor(x);
          if (y == null) {
            if (!x.d)
              return x;
            y = new Ctor(1);
            rm = Ctor.rounding;
          } else {
            y = new Ctor(y);
            if (rm === void 0) {
              rm = Ctor.rounding;
            } else {
              checkInt32(rm, 0, 8);
            }
            if (!x.d)
              return y.s ? x : y;
            if (!y.d) {
              if (y.s)
                y.s = x.s;
              return y;
            }
          }
          if (y.d[0]) {
            external = false;
            x = divide(x, y, 0, rm, 1).times(y);
            external = true;
            finalise(x);
          } else {
            y.s = x.s;
            x = y;
          }
          return x;
        };
        P.toNumber = function() {
          return +this;
        };
        P.toOctal = function(sd, rm) {
          return toStringBinary(this, 8, sd, rm);
        };
        P.toPower = P.pow = function(y) {
          var e2, k, pr, r, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));
          if (!x.d || !y.d || !x.d[0] || !y.d[0])
            return new Ctor(mathpow(+x, yn));
          x = new Ctor(x);
          if (x.eq(1))
            return x;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (y.eq(1))
            return finalise(x, pr, rm);
          e2 = mathfloor(y.e / LOG_BASE);
          if (e2 >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
            r = intPow(Ctor, x, k, pr);
            return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);
          }
          s = x.s;
          if (s < 0) {
            if (e2 < y.d.length - 1)
              return new Ctor(NaN);
            if ((y.d[e2] & 1) == 0)
              s = 1;
            if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {
              x.s = s;
              return x;
            }
          }
          k = mathpow(+x, yn);
          e2 = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log("0." + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + "").e;
          if (e2 > Ctor.maxE + 1 || e2 < Ctor.minE - 1)
            return new Ctor(e2 > 0 ? s / 0 : 0);
          external = false;
          Ctor.rounding = x.s = 1;
          k = Math.min(12, (e2 + "").length);
          r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);
          if (r.d) {
            r = finalise(r, pr + 5, 1);
            if (checkRoundingDigits(r.d, pr, rm)) {
              e2 = pr + 10;
              r = finalise(naturalExponential(y.times(naturalLogarithm(x, e2 + k)), e2), e2 + 5, 1);
              if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
                r = finalise(r, pr + 1, 0);
              }
            }
          }
          r.s = s;
          external = true;
          Ctor.rounding = rm;
          return finalise(r, pr, rm);
        };
        P.toPrecision = function(sd, rm) {
          var str, x = this, Ctor = x.constructor;
          if (sd === void 0) {
            str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
          } else {
            checkInt32(sd, 1, MAX_DIGITS);
            if (rm === void 0)
              rm = Ctor.rounding;
            else
              checkInt32(rm, 0, 8);
            x = finalise(new Ctor(x), sd, rm);
            str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
          }
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P.toSignificantDigits = P.toSD = function(sd, rm) {
          var x = this, Ctor = x.constructor;
          if (sd === void 0) {
            sd = Ctor.precision;
            rm = Ctor.rounding;
          } else {
            checkInt32(sd, 1, MAX_DIGITS);
            if (rm === void 0)
              rm = Ctor.rounding;
            else
              checkInt32(rm, 0, 8);
          }
          return finalise(new Ctor(x), sd, rm);
        };
        P.toString = function() {
          var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P.truncated = P.trunc = function() {
          return finalise(new this.constructor(this), this.e + 1, 1);
        };
        P.valueOf = P.toJSON = function() {
          var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
          return x.isNeg() ? "-" + str : str;
        };
        function digitsToString(d) {
          var i2, k, ws, indexOfLastWord = d.length - 1, str = "", w = d[0];
          if (indexOfLastWord > 0) {
            str += w;
            for (i2 = 1; i2 < indexOfLastWord; i2++) {
              ws = d[i2] + "";
              k = LOG_BASE - ws.length;
              if (k)
                str += getZeroString(k);
              str += ws;
            }
            w = d[i2];
            ws = w + "";
            k = LOG_BASE - ws.length;
            if (k)
              str += getZeroString(k);
          } else if (w === 0) {
            return "0";
          }
          for (; w % 10 === 0; )
            w /= 10;
          return str + w;
        }
        function checkInt32(i2, min7, max8) {
          if (i2 !== ~~i2 || i2 < min7 || i2 > max8) {
            throw Error(invalidArgument + i2);
          }
        }
        function checkRoundingDigits(d, i2, rm, repeating) {
          var di, k, r, rd;
          for (k = d[0]; k >= 10; k /= 10)
            --i2;
          if (--i2 < 0) {
            i2 += LOG_BASE;
            di = 0;
          } else {
            di = Math.ceil((i2 + 1) / LOG_BASE);
            i2 %= LOG_BASE;
          }
          k = mathpow(10, LOG_BASE - i2);
          rd = d[di] % k | 0;
          if (repeating == null) {
            if (i2 < 3) {
              if (i2 == 0)
                rd = rd / 100 | 0;
              else if (i2 == 1)
                rd = rd / 10 | 0;
              r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;
            } else {
              r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i2 - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;
            }
          } else {
            if (i2 < 4) {
              if (i2 == 0)
                rd = rd / 1e3 | 0;
              else if (i2 == 1)
                rd = rd / 100 | 0;
              else if (i2 == 2)
                rd = rd / 10 | 0;
              r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
            } else {
              r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i2 - 3) - 1;
            }
          }
          return r;
        }
        function convertBase(str, baseIn, baseOut) {
          var j, arr = [0], arrL, i2 = 0, strL = str.length;
          for (; i2 < strL; ) {
            for (arrL = arr.length; arrL--; )
              arr[arrL] *= baseIn;
            arr[0] += NUMERALS.indexOf(str.charAt(i2++));
            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] === void 0)
                  arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }
          return arr.reverse();
        }
        function cosine(Ctor, x) {
          var k, len, y;
          if (x.isZero())
            return x;
          len = x.d.length;
          if (len < 32) {
            k = Math.ceil(len / 3);
            y = (1 / tinyPow(4, k)).toString();
          } else {
            k = 16;
            y = "2.3283064365386962890625e-10";
          }
          Ctor.precision += k;
          x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));
          for (var i2 = k; i2--; ) {
            var cos2x = x.times(x);
            x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
          }
          Ctor.precision -= k;
          return x;
        }
        var divide = function() {
          function multiplyInteger(x, k, base2) {
            var temp, carry = 0, i2 = x.length;
            for (x = x.slice(); i2--; ) {
              temp = x[i2] * k + carry;
              x[i2] = temp % base2 | 0;
              carry = temp / base2 | 0;
            }
            if (carry)
              x.unshift(carry);
            return x;
          }
          function compare4(a2, b2, aL, bL) {
            var i2, r;
            if (aL != bL) {
              r = aL > bL ? 1 : -1;
            } else {
              for (i2 = r = 0; i2 < aL; i2++) {
                if (a2[i2] != b2[i2]) {
                  r = a2[i2] > b2[i2] ? 1 : -1;
                  break;
                }
              }
            }
            return r;
          }
          function subtract(a2, b2, aL, base2) {
            var i2 = 0;
            for (; aL--; ) {
              a2[aL] -= i2;
              i2 = a2[aL] < b2[aL] ? 1 : 0;
              a2[aL] = i2 * base2 + a2[aL] - b2[aL];
            }
            for (; !a2[0] && a2.length > 1; )
              a2.shift();
          }
          return function(x, y, pr, rm, dp, base2) {
            var cmp, e2, i2, k, logBase, more, prod, prodL, q2, qd, rem2, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign3 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
            if (!xd || !xd[0] || !yd || !yd[0]) {
              return new Ctor(
                // Return NaN if either NaN, or both Infinity or 0.
                !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : (
                  // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.
                  xd && xd[0] == 0 || !yd ? sign3 * 0 : sign3 / 0
                )
              );
            }
            if (base2) {
              logBase = 1;
              e2 = x.e - y.e;
            } else {
              base2 = BASE;
              logBase = LOG_BASE;
              e2 = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);
            }
            yL = yd.length;
            xL = xd.length;
            q2 = new Ctor(sign3);
            qd = q2.d = [];
            for (i2 = 0; yd[i2] == (xd[i2] || 0); i2++)
              ;
            if (yd[i2] > (xd[i2] || 0))
              e2--;
            if (pr == null) {
              sd = pr = Ctor.precision;
              rm = Ctor.rounding;
            } else if (dp) {
              sd = pr + (x.e - y.e) + 1;
            } else {
              sd = pr;
            }
            if (sd < 0) {
              qd.push(1);
              more = true;
            } else {
              sd = sd / logBase + 2 | 0;
              i2 = 0;
              if (yL == 1) {
                k = 0;
                yd = yd[0];
                sd++;
                for (; (i2 < xL || k) && sd--; i2++) {
                  t = k * base2 + (xd[i2] || 0);
                  qd[i2] = t / yd | 0;
                  k = t % yd | 0;
                }
                more = k || i2 < xL;
              } else {
                k = base2 / (yd[0] + 1) | 0;
                if (k > 1) {
                  yd = multiplyInteger(yd, k, base2);
                  xd = multiplyInteger(xd, k, base2);
                  yL = yd.length;
                  xL = xd.length;
                }
                xi = yL;
                rem2 = xd.slice(0, yL);
                remL = rem2.length;
                for (; remL < yL; )
                  rem2[remL++] = 0;
                yz = yd.slice();
                yz.unshift(0);
                yd0 = yd[0];
                if (yd[1] >= base2 / 2)
                  ++yd0;
                do {
                  k = 0;
                  cmp = compare4(yd, rem2, yL, remL);
                  if (cmp < 0) {
                    rem0 = rem2[0];
                    if (yL != remL)
                      rem0 = rem0 * base2 + (rem2[1] || 0);
                    k = rem0 / yd0 | 0;
                    if (k > 1) {
                      if (k >= base2)
                        k = base2 - 1;
                      prod = multiplyInteger(yd, k, base2);
                      prodL = prod.length;
                      remL = rem2.length;
                      cmp = compare4(prod, rem2, prodL, remL);
                      if (cmp == 1) {
                        k--;
                        subtract(prod, yL < prodL ? yz : yd, prodL, base2);
                      }
                    } else {
                      if (k == 0)
                        cmp = k = 1;
                      prod = yd.slice();
                    }
                    prodL = prod.length;
                    if (prodL < remL)
                      prod.unshift(0);
                    subtract(rem2, prod, remL, base2);
                    if (cmp == -1) {
                      remL = rem2.length;
                      cmp = compare4(yd, rem2, yL, remL);
                      if (cmp < 1) {
                        k++;
                        subtract(rem2, yL < remL ? yz : yd, remL, base2);
                      }
                    }
                    remL = rem2.length;
                  } else if (cmp === 0) {
                    k++;
                    rem2 = [0];
                  }
                  qd[i2++] = k;
                  if (cmp && rem2[0]) {
                    rem2[remL++] = xd[xi] || 0;
                  } else {
                    rem2 = [xd[xi]];
                    remL = 1;
                  }
                } while ((xi++ < xL || rem2[0] !== void 0) && sd--);
                more = rem2[0] !== void 0;
              }
              if (!qd[0])
                qd.shift();
            }
            if (logBase == 1) {
              q2.e = e2;
              inexact = more;
            } else {
              for (i2 = 1, k = qd[0]; k >= 10; k /= 10)
                i2++;
              q2.e = i2 + e2 * logBase - 1;
              finalise(q2, dp ? pr + q2.e + 1 : pr, rm, more);
            }
            return q2;
          };
        }();
        function finalise(x, sd, rm, isTruncated) {
          var digits, i2, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;
          out:
            if (sd != null) {
              xd = x.d;
              if (!xd)
                return x;
              for (digits = 1, k = xd[0]; k >= 10; k /= 10)
                digits++;
              i2 = sd - digits;
              if (i2 < 0) {
                i2 += LOG_BASE;
                j = sd;
                w = xd[xdi = 0];
                rd = w / mathpow(10, digits - j - 1) % 10 | 0;
              } else {
                xdi = Math.ceil((i2 + 1) / LOG_BASE);
                k = xd.length;
                if (xdi >= k) {
                  if (isTruncated) {
                    for (; k++ <= xdi; )
                      xd.push(0);
                    w = rd = 0;
                    digits = 1;
                    i2 %= LOG_BASE;
                    j = i2 - LOG_BASE + 1;
                  } else {
                    break out;
                  }
                } else {
                  w = k = xd[xdi];
                  for (digits = 1; k >= 10; k /= 10)
                    digits++;
                  i2 %= LOG_BASE;
                  j = i2 - LOG_BASE + digits;
                  rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;
                }
              }
              isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));
              roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
              (i2 > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
              if (sd < 1 || !xd[0]) {
                xd.length = 0;
                if (roundUp) {
                  sd -= x.e + 1;
                  xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
                  x.e = -sd || 0;
                } else {
                  xd[0] = x.e = 0;
                }
                return x;
              }
              if (i2 == 0) {
                xd.length = xdi;
                k = 1;
                xdi--;
              } else {
                xd.length = xdi + 1;
                k = mathpow(10, LOG_BASE - i2);
                xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;
              }
              if (roundUp) {
                for (; ; ) {
                  if (xdi == 0) {
                    for (i2 = 1, j = xd[0]; j >= 10; j /= 10)
                      i2++;
                    j = xd[0] += k;
                    for (k = 1; j >= 10; j /= 10)
                      k++;
                    if (i2 != k) {
                      x.e++;
                      if (xd[0] == BASE)
                        xd[0] = 1;
                    }
                    break;
                  } else {
                    xd[xdi] += k;
                    if (xd[xdi] != BASE)
                      break;
                    xd[xdi--] = 0;
                    k = 1;
                  }
                }
              }
              for (i2 = xd.length; xd[--i2] === 0; )
                xd.pop();
            }
          if (external) {
            if (x.e > Ctor.maxE) {
              x.d = null;
              x.e = NaN;
            } else if (x.e < Ctor.minE) {
              x.e = 0;
              x.d = [0];
            }
          }
          return x;
        }
        function finiteToString(x, isExp, sd) {
          if (!x.isFinite())
            return nonFiniteToString(x);
          var k, e2 = x.e, str = digitsToString(x.d), len = str.length;
          if (isExp) {
            if (sd && (k = sd - len) > 0) {
              str = str.charAt(0) + "." + str.slice(1) + getZeroString(k);
            } else if (len > 1) {
              str = str.charAt(0) + "." + str.slice(1);
            }
            str = str + (x.e < 0 ? "e" : "e+") + x.e;
          } else if (e2 < 0) {
            str = "0." + getZeroString(-e2 - 1) + str;
            if (sd && (k = sd - len) > 0)
              str += getZeroString(k);
          } else if (e2 >= len) {
            str += getZeroString(e2 + 1 - len);
            if (sd && (k = sd - e2 - 1) > 0)
              str = str + "." + getZeroString(k);
          } else {
            if ((k = e2 + 1) < len)
              str = str.slice(0, k) + "." + str.slice(k);
            if (sd && (k = sd - len) > 0) {
              if (e2 + 1 === len)
                str += ".";
              str += getZeroString(k);
            }
          }
          return str;
        }
        function getBase10Exponent(digits, e2) {
          var w = digits[0];
          for (e2 *= LOG_BASE; w >= 10; w /= 10)
            e2++;
          return e2;
        }
        function getLn10(Ctor, sd, pr) {
          if (sd > LN10_PRECISION) {
            external = true;
            if (pr)
              Ctor.precision = pr;
            throw Error(precisionLimitExceeded);
          }
          return finalise(new Ctor(LN10), sd, 1, true);
        }
        function getPi(Ctor, sd, rm) {
          if (sd > PI_PRECISION)
            throw Error(precisionLimitExceeded);
          return finalise(new Ctor(PI), sd, rm, true);
        }
        function getPrecision(digits) {
          var w = digits.length - 1, len = w * LOG_BASE + 1;
          w = digits[w];
          if (w) {
            for (; w % 10 == 0; w /= 10)
              len--;
            for (w = digits[0]; w >= 10; w /= 10)
              len++;
          }
          return len;
        }
        function getZeroString(k) {
          var zs = "";
          for (; k--; )
            zs += "0";
          return zs;
        }
        function intPow(Ctor, x, n, pr) {
          var isTruncated, r = new Ctor(1), k = Math.ceil(pr / LOG_BASE + 4);
          external = false;
          for (; ; ) {
            if (n % 2) {
              r = r.times(x);
              if (truncate(r.d, k))
                isTruncated = true;
            }
            n = mathfloor(n / 2);
            if (n === 0) {
              n = r.d.length - 1;
              if (isTruncated && r.d[n] === 0)
                ++r.d[n];
              break;
            }
            x = x.times(x);
            truncate(x.d, k);
          }
          external = true;
          return r;
        }
        function isOdd(n) {
          return n.d[n.d.length - 1] & 1;
        }
        function maxOrMin(Ctor, args, ltgt) {
          var y, x = new Ctor(args[0]), i2 = 0;
          for (; ++i2 < args.length; ) {
            y = new Ctor(args[i2]);
            if (!y.s) {
              x = y;
              break;
            } else if (x[ltgt](y)) {
              x = y;
            }
          }
          return x;
        }
        function naturalExponential(x, sd) {
          var denominator, guard8, j, pow5, sum4, t, wpr, rep = 0, i2 = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
          if (!x.d || !x.d[0] || x.e > 17) {
            return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);
          }
          if (sd == null) {
            external = false;
            wpr = pr;
          } else {
            wpr = sd;
          }
          t = new Ctor(0.03125);
          while (x.e > -2) {
            x = x.times(t);
            k += 5;
          }
          guard8 = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
          wpr += guard8;
          denominator = pow5 = sum4 = new Ctor(1);
          Ctor.precision = wpr;
          for (; ; ) {
            pow5 = finalise(pow5.times(x), wpr, 1);
            denominator = denominator.times(++i2);
            t = sum4.plus(divide(pow5, denominator, wpr, 1));
            if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum4.d).slice(0, wpr)) {
              j = k;
              while (j--)
                sum4 = finalise(sum4.times(sum4), wpr, 1);
              if (sd == null) {
                if (rep < 3 && checkRoundingDigits(sum4.d, wpr - guard8, rm, rep)) {
                  Ctor.precision = wpr += 10;
                  denominator = pow5 = t = new Ctor(1);
                  i2 = 0;
                  rep++;
                } else {
                  return finalise(sum4, Ctor.precision = pr, rm, external = true);
                }
              } else {
                Ctor.precision = pr;
                return sum4;
              }
            }
            sum4 = t;
          }
        }
        function naturalLogarithm(y, sd) {
          var c, c0, denominator, e2, numerator, rep, sum4, t, wpr, x1, x2, n = 1, guard8 = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
          if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
            return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
          }
          if (sd == null) {
            external = false;
            wpr = pr;
          } else {
            wpr = sd;
          }
          Ctor.precision = wpr += guard8;
          c = digitsToString(xd);
          c0 = c.charAt(0);
          if (Math.abs(e2 = x.e) < 15e14) {
            while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
              x = x.times(y);
              c = digitsToString(x.d);
              c0 = c.charAt(0);
              n++;
            }
            e2 = x.e;
            if (c0 > 1) {
              x = new Ctor("0." + c);
              e2++;
            } else {
              x = new Ctor(c0 + "." + c.slice(1));
            }
          } else {
            t = getLn10(Ctor, wpr + 2, pr).times(e2 + "");
            x = naturalLogarithm(new Ctor(c0 + "." + c.slice(1)), wpr - guard8).plus(t);
            Ctor.precision = pr;
            return sd == null ? finalise(x, pr, rm, external = true) : x;
          }
          x1 = x;
          sum4 = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);
          x2 = finalise(x.times(x), wpr, 1);
          denominator = 3;
          for (; ; ) {
            numerator = finalise(numerator.times(x2), wpr, 1);
            t = sum4.plus(divide(numerator, new Ctor(denominator), wpr, 1));
            if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum4.d).slice(0, wpr)) {
              sum4 = sum4.times(2);
              if (e2 !== 0)
                sum4 = sum4.plus(getLn10(Ctor, wpr + 2, pr).times(e2 + ""));
              sum4 = divide(sum4, new Ctor(n), wpr, 1);
              if (sd == null) {
                if (checkRoundingDigits(sum4.d, wpr - guard8, rm, rep)) {
                  Ctor.precision = wpr += guard8;
                  t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);
                  x2 = finalise(x.times(x), wpr, 1);
                  denominator = rep = 1;
                } else {
                  return finalise(sum4, Ctor.precision = pr, rm, external = true);
                }
              } else {
                Ctor.precision = pr;
                return sum4;
              }
            }
            sum4 = t;
            denominator += 2;
          }
        }
        function nonFiniteToString(x) {
          return String(x.s * x.s / 0);
        }
        function parseDecimal(x, str) {
          var e2, i2, len;
          if ((e2 = str.indexOf(".")) > -1)
            str = str.replace(".", "");
          if ((i2 = str.search(/e/i)) > 0) {
            if (e2 < 0)
              e2 = i2;
            e2 += +str.slice(i2 + 1);
            str = str.substring(0, i2);
          } else if (e2 < 0) {
            e2 = str.length;
          }
          for (i2 = 0; str.charCodeAt(i2) === 48; i2++)
            ;
          for (len = str.length; str.charCodeAt(len - 1) === 48; --len)
            ;
          str = str.slice(i2, len);
          if (str) {
            len -= i2;
            x.e = e2 = e2 - i2 - 1;
            x.d = [];
            i2 = (e2 + 1) % LOG_BASE;
            if (e2 < 0)
              i2 += LOG_BASE;
            if (i2 < len) {
              if (i2)
                x.d.push(+str.slice(0, i2));
              for (len -= LOG_BASE; i2 < len; )
                x.d.push(+str.slice(i2, i2 += LOG_BASE));
              str = str.slice(i2);
              i2 = LOG_BASE - str.length;
            } else {
              i2 -= len;
            }
            for (; i2--; )
              str += "0";
            x.d.push(+str);
            if (external) {
              if (x.e > x.constructor.maxE) {
                x.d = null;
                x.e = NaN;
              } else if (x.e < x.constructor.minE) {
                x.e = 0;
                x.d = [0];
              }
            }
          } else {
            x.e = 0;
            x.d = [0];
          }
          return x;
        }
        function parseOther(x, str) {
          var base2, Ctor, divisor, i2, isFloat, len, p2, xd, xe;
          if (str.indexOf("_") > -1) {
            str = str.replace(/(\d)_(?=\d)/g, "$1");
            if (isDecimal.test(str))
              return parseDecimal(x, str);
          } else if (str === "Infinity" || str === "NaN") {
            if (!+str)
              x.s = NaN;
            x.e = NaN;
            x.d = null;
            return x;
          }
          if (isHex.test(str)) {
            base2 = 16;
            str = str.toLowerCase();
          } else if (isBinary.test(str)) {
            base2 = 2;
          } else if (isOctal.test(str)) {
            base2 = 8;
          } else {
            throw Error(invalidArgument + str);
          }
          i2 = str.search(/p/i);
          if (i2 > 0) {
            p2 = +str.slice(i2 + 1);
            str = str.substring(2, i2);
          } else {
            str = str.slice(2);
          }
          i2 = str.indexOf(".");
          isFloat = i2 >= 0;
          Ctor = x.constructor;
          if (isFloat) {
            str = str.replace(".", "");
            len = str.length;
            i2 = len - i2;
            divisor = intPow(Ctor, new Ctor(base2), i2, i2 * 2);
          }
          xd = convertBase(str, base2, BASE);
          xe = xd.length - 1;
          for (i2 = xe; xd[i2] === 0; --i2)
            xd.pop();
          if (i2 < 0)
            return new Ctor(x.s * 0);
          x.e = getBase10Exponent(xd, xe);
          x.d = xd;
          external = false;
          if (isFloat)
            x = divide(x, divisor, len * 4);
          if (p2)
            x = x.times(Math.abs(p2) < 54 ? mathpow(2, p2) : Decimal2.pow(2, p2));
          external = true;
          return x;
        }
        function sine(Ctor, x) {
          var k, len = x.d.length;
          if (len < 3) {
            return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);
          }
          k = 1.4 * Math.sqrt(len);
          k = k > 16 ? 16 : k | 0;
          x = x.times(1 / tinyPow(5, k));
          x = taylorSeries(Ctor, 2, x, x);
          var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
          for (; k--; ) {
            sin2_x = x.times(x);
            x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
          }
          return x;
        }
        function taylorSeries(Ctor, n, x, y, isHyperbolic) {
          var j, t, u2, x2, i2 = 1, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE);
          external = false;
          x2 = x.times(x);
          u2 = new Ctor(y);
          for (; ; ) {
            t = divide(u2.times(x2), new Ctor(n++ * n++), pr, 1);
            u2 = isHyperbolic ? y.plus(t) : y.minus(t);
            y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);
            t = u2.plus(y);
            if (t.d[k] !== void 0) {
              for (j = k; t.d[j] === u2.d[j] && j--; )
                ;
              if (j == -1)
                break;
            }
            j = u2;
            u2 = y;
            y = t;
            t = j;
            i2++;
          }
          external = true;
          t.d.length = k + 1;
          return t;
        }
        function tinyPow(b2, e2) {
          var n = b2;
          while (--e2)
            n *= b2;
          return n;
        }
        function toLessThanHalfPi(Ctor, x) {
          var t, isNeg = x.s < 0, pi2 = getPi(Ctor, Ctor.precision, 1), halfPi = pi2.times(0.5);
          x = x.abs();
          if (x.lte(halfPi)) {
            quadrant = isNeg ? 4 : 1;
            return x;
          }
          t = x.divToInt(pi2);
          if (t.isZero()) {
            quadrant = isNeg ? 3 : 2;
          } else {
            x = x.minus(t.times(pi2));
            if (x.lte(halfPi)) {
              quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;
              return x;
            }
            quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;
          }
          return x.minus(pi2).abs();
        }
        function toStringBinary(x, baseOut, sd, rm) {
          var base2, e2, i2, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;
          if (isExp) {
            checkInt32(sd, 1, MAX_DIGITS);
            if (rm === void 0)
              rm = Ctor.rounding;
            else
              checkInt32(rm, 0, 8);
          } else {
            sd = Ctor.precision;
            rm = Ctor.rounding;
          }
          if (!x.isFinite()) {
            str = nonFiniteToString(x);
          } else {
            str = finiteToString(x);
            i2 = str.indexOf(".");
            if (isExp) {
              base2 = 2;
              if (baseOut == 16) {
                sd = sd * 4 - 3;
              } else if (baseOut == 8) {
                sd = sd * 3 - 2;
              }
            } else {
              base2 = baseOut;
            }
            if (i2 >= 0) {
              str = str.replace(".", "");
              y = new Ctor(1);
              y.e = str.length - i2;
              y.d = convertBase(finiteToString(y), 10, base2);
              y.e = y.d.length;
            }
            xd = convertBase(str, 10, base2);
            e2 = len = xd.length;
            for (; xd[--len] == 0; )
              xd.pop();
            if (!xd[0]) {
              str = isExp ? "0p+0" : "0";
            } else {
              if (i2 < 0) {
                e2--;
              } else {
                x = new Ctor(x);
                x.d = xd;
                x.e = e2;
                x = divide(x, y, sd, rm, 0, base2);
                xd = x.d;
                e2 = x.e;
                roundUp = inexact;
              }
              i2 = xd[sd];
              k = base2 / 2;
              roundUp = roundUp || xd[sd + 1] !== void 0;
              roundUp = rm < 4 ? (i2 !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i2 > k || i2 === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));
              xd.length = sd;
              if (roundUp) {
                for (; ++xd[--sd] > base2 - 1; ) {
                  xd[sd] = 0;
                  if (!sd) {
                    ++e2;
                    xd.unshift(1);
                  }
                }
              }
              for (len = xd.length; !xd[len - 1]; --len)
                ;
              for (i2 = 0, str = ""; i2 < len; i2++)
                str += NUMERALS.charAt(xd[i2]);
              if (isExp) {
                if (len > 1) {
                  if (baseOut == 16 || baseOut == 8) {
                    i2 = baseOut == 16 ? 4 : 3;
                    for (--len; len % i2; len++)
                      str += "0";
                    xd = convertBase(str, base2, baseOut);
                    for (len = xd.length; !xd[len - 1]; --len)
                      ;
                    for (i2 = 1, str = "1."; i2 < len; i2++)
                      str += NUMERALS.charAt(xd[i2]);
                  } else {
                    str = str.charAt(0) + "." + str.slice(1);
                  }
                }
                str = str + (e2 < 0 ? "p" : "p+") + e2;
              } else if (e2 < 0) {
                for (; ++e2; )
                  str = "0" + str;
                str = "0." + str;
              } else {
                if (++e2 > len)
                  for (e2 -= len; e2--; )
                    str += "0";
                else if (e2 < len)
                  str = str.slice(0, e2) + "." + str.slice(e2);
              }
            }
            str = (baseOut == 16 ? "0x" : baseOut == 2 ? "0b" : baseOut == 8 ? "0o" : "") + str;
          }
          return x.s < 0 ? "-" + str : str;
        }
        function truncate(arr, len) {
          if (arr.length > len) {
            arr.length = len;
            return true;
          }
        }
        function abs5(x) {
          return new this(x).abs();
        }
        function acos3(x) {
          return new this(x).acos();
        }
        function acosh2(x) {
          return new this(x).acosh();
        }
        function add2(x, y) {
          return new this(x).plus(y);
        }
        function asin3(x) {
          return new this(x).asin();
        }
        function asinh2(x) {
          return new this(x).asinh();
        }
        function atan4(x) {
          return new this(x).atan();
        }
        function atanh2(x) {
          return new this(x).atanh();
        }
        function atan23(y, x) {
          y = new this(y);
          x = new this(x);
          var r, pr = this.precision, rm = this.rounding, wpr = pr + 4;
          if (!y.s || !x.s) {
            r = new this(NaN);
          } else if (!y.d && !x.d) {
            r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
            r.s = y.s;
          } else if (!x.d || y.isZero()) {
            r = x.s < 0 ? getPi(this, pr, rm) : new this(0);
            r.s = y.s;
          } else if (!y.d || x.isZero()) {
            r = getPi(this, wpr, 1).times(0.5);
            r.s = y.s;
          } else if (x.s < 0) {
            this.precision = wpr;
            this.rounding = 1;
            r = this.atan(divide(y, x, wpr, 1));
            x = getPi(this, wpr, 1);
            this.precision = pr;
            this.rounding = rm;
            r = y.s < 0 ? r.minus(x) : r.plus(x);
          } else {
            r = this.atan(divide(y, x, wpr, 1));
          }
          return r;
        }
        function cbrt(x) {
          return new this(x).cbrt();
        }
        function ceil3(x) {
          return finalise(x = new this(x), x.e + 1, 2);
        }
        function clamp2(x, min7, max8) {
          return new this(x).clamp(min7, max8);
        }
        function config(obj) {
          if (!obj || typeof obj !== "object")
            throw Error(decimalError + "Object expected");
          var i2, p2, v, useDefaults = obj.defaults === true, ps = [
            "precision",
            1,
            MAX_DIGITS,
            "rounding",
            0,
            8,
            "toExpNeg",
            -EXP_LIMIT,
            0,
            "toExpPos",
            0,
            EXP_LIMIT,
            "maxE",
            0,
            EXP_LIMIT,
            "minE",
            -EXP_LIMIT,
            0,
            "modulo",
            0,
            9
          ];
          for (i2 = 0; i2 < ps.length; i2 += 3) {
            if (p2 = ps[i2], useDefaults)
              this[p2] = DEFAULTS[p2];
            if ((v = obj[p2]) !== void 0) {
              if (mathfloor(v) === v && v >= ps[i2 + 1] && v <= ps[i2 + 2])
                this[p2] = v;
              else
                throw Error(invalidArgument + p2 + ": " + v);
            }
          }
          if (p2 = "crypto", useDefaults)
            this[p2] = DEFAULTS[p2];
          if ((v = obj[p2]) !== void 0) {
            if (v === true || v === false || v === 0 || v === 1) {
              if (v) {
                if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                  this[p2] = true;
                } else {
                  throw Error(cryptoUnavailable);
                }
              } else {
                this[p2] = false;
              }
            } else {
              throw Error(invalidArgument + p2 + ": " + v);
            }
          }
          return this;
        }
        function cos3(x) {
          return new this(x).cos();
        }
        function cosh2(x) {
          return new this(x).cosh();
        }
        function clone2(obj) {
          var i2, p2, ps;
          function Decimal3(v) {
            var e2, i3, t, x = this;
            if (!(x instanceof Decimal3))
              return new Decimal3(v);
            x.constructor = Decimal3;
            if (isDecimalInstance(v)) {
              x.s = v.s;
              if (external) {
                if (!v.d || v.e > Decimal3.maxE) {
                  x.e = NaN;
                  x.d = null;
                } else if (v.e < Decimal3.minE) {
                  x.e = 0;
                  x.d = [0];
                } else {
                  x.e = v.e;
                  x.d = v.d.slice();
                }
              } else {
                x.e = v.e;
                x.d = v.d ? v.d.slice() : v.d;
              }
              return;
            }
            t = typeof v;
            if (t === "number") {
              if (v === 0) {
                x.s = 1 / v < 0 ? -1 : 1;
                x.e = 0;
                x.d = [0];
                return;
              }
              if (v < 0) {
                v = -v;
                x.s = -1;
              } else {
                x.s = 1;
              }
              if (v === ~~v && v < 1e7) {
                for (e2 = 0, i3 = v; i3 >= 10; i3 /= 10)
                  e2++;
                if (external) {
                  if (e2 > Decimal3.maxE) {
                    x.e = NaN;
                    x.d = null;
                  } else if (e2 < Decimal3.minE) {
                    x.e = 0;
                    x.d = [0];
                  } else {
                    x.e = e2;
                    x.d = [v];
                  }
                } else {
                  x.e = e2;
                  x.d = [v];
                }
                return;
              } else if (v * 0 !== 0) {
                if (!v)
                  x.s = NaN;
                x.e = NaN;
                x.d = null;
                return;
              }
              return parseDecimal(x, v.toString());
            } else if (t !== "string") {
              throw Error(invalidArgument + v);
            }
            if ((i3 = v.charCodeAt(0)) === 45) {
              v = v.slice(1);
              x.s = -1;
            } else {
              if (i3 === 43)
                v = v.slice(1);
              x.s = 1;
            }
            return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);
          }
          Decimal3.prototype = P;
          Decimal3.ROUND_UP = 0;
          Decimal3.ROUND_DOWN = 1;
          Decimal3.ROUND_CEIL = 2;
          Decimal3.ROUND_FLOOR = 3;
          Decimal3.ROUND_HALF_UP = 4;
          Decimal3.ROUND_HALF_DOWN = 5;
          Decimal3.ROUND_HALF_EVEN = 6;
          Decimal3.ROUND_HALF_CEIL = 7;
          Decimal3.ROUND_HALF_FLOOR = 8;
          Decimal3.EUCLID = 9;
          Decimal3.config = Decimal3.set = config;
          Decimal3.clone = clone2;
          Decimal3.isDecimal = isDecimalInstance;
          Decimal3.abs = abs5;
          Decimal3.acos = acos3;
          Decimal3.acosh = acosh2;
          Decimal3.add = add2;
          Decimal3.asin = asin3;
          Decimal3.asinh = asinh2;
          Decimal3.atan = atan4;
          Decimal3.atanh = atanh2;
          Decimal3.atan2 = atan23;
          Decimal3.cbrt = cbrt;
          Decimal3.ceil = ceil3;
          Decimal3.clamp = clamp2;
          Decimal3.cos = cos3;
          Decimal3.cosh = cosh2;
          Decimal3.div = div5;
          Decimal3.exp = exp3;
          Decimal3.floor = floor4;
          Decimal3.hypot = hypot;
          Decimal3.ln = ln2;
          Decimal3.log = log4;
          Decimal3.log10 = log102;
          Decimal3.log2 = log23;
          Decimal3.max = max7;
          Decimal3.min = min6;
          Decimal3.mod = mod5;
          Decimal3.mul = mul2;
          Decimal3.pow = pow4;
          Decimal3.random = random;
          Decimal3.round = round3;
          Decimal3.sign = sign2;
          Decimal3.sin = sin3;
          Decimal3.sinh = sinh2;
          Decimal3.sqrt = sqrt3;
          Decimal3.sub = sub3;
          Decimal3.sum = sum3;
          Decimal3.tan = tan3;
          Decimal3.tanh = tanh2;
          Decimal3.trunc = trunc2;
          if (obj === void 0)
            obj = {};
          if (obj) {
            if (obj.defaults !== true) {
              ps = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"];
              for (i2 = 0; i2 < ps.length; )
                if (!obj.hasOwnProperty(p2 = ps[i2++]))
                  obj[p2] = this[p2];
            }
          }
          Decimal3.config(obj);
          return Decimal3;
        }
        function div5(x, y) {
          return new this(x).div(y);
        }
        function exp3(x) {
          return new this(x).exp();
        }
        function floor4(x) {
          return finalise(x = new this(x), x.e + 1, 3);
        }
        function hypot() {
          var i2, n, t = new this(0);
          external = false;
          for (i2 = 0; i2 < arguments.length; ) {
            n = new this(arguments[i2++]);
            if (!n.d) {
              if (n.s) {
                external = true;
                return new this(1 / 0);
              }
              t = n;
            } else if (t.d) {
              t = t.plus(n.times(n));
            }
          }
          external = true;
          return t.sqrt();
        }
        function isDecimalInstance(obj) {
          return obj instanceof Decimal2 || obj && obj.toStringTag === tag || false;
        }
        function ln2(x) {
          return new this(x).ln();
        }
        function log4(x, y) {
          return new this(x).log(y);
        }
        function log23(x) {
          return new this(x).log(2);
        }
        function log102(x) {
          return new this(x).log(10);
        }
        function max7() {
          return maxOrMin(this, arguments, "lt");
        }
        function min6() {
          return maxOrMin(this, arguments, "gt");
        }
        function mod5(x, y) {
          return new this(x).mod(y);
        }
        function mul2(x, y) {
          return new this(x).mul(y);
        }
        function pow4(x, y) {
          return new this(x).pow(y);
        }
        function random(sd) {
          var d, e2, k, n, i2 = 0, r = new this(1), rd = [];
          if (sd === void 0)
            sd = this.precision;
          else
            checkInt32(sd, 1, MAX_DIGITS);
          k = Math.ceil(sd / LOG_BASE);
          if (!this.crypto) {
            for (; i2 < k; )
              rd[i2++] = Math.random() * 1e7 | 0;
          } else if (crypto.getRandomValues) {
            d = crypto.getRandomValues(new Uint32Array(k));
            for (; i2 < k; ) {
              n = d[i2];
              if (n >= 429e7) {
                d[i2] = crypto.getRandomValues(new Uint32Array(1))[0];
              } else {
                rd[i2++] = n % 1e7;
              }
            }
          } else if (crypto.randomBytes) {
            d = crypto.randomBytes(k *= 4);
            for (; i2 < k; ) {
              n = d[i2] + (d[i2 + 1] << 8) + (d[i2 + 2] << 16) + ((d[i2 + 3] & 127) << 24);
              if (n >= 214e7) {
                crypto.randomBytes(4).copy(d, i2);
              } else {
                rd.push(n % 1e7);
                i2 += 4;
              }
            }
            i2 = k / 4;
          } else {
            throw Error(cryptoUnavailable);
          }
          k = rd[--i2];
          sd %= LOG_BASE;
          if (k && sd) {
            n = mathpow(10, LOG_BASE - sd);
            rd[i2] = (k / n | 0) * n;
          }
          for (; rd[i2] === 0; i2--)
            rd.pop();
          if (i2 < 0) {
            e2 = 0;
            rd = [0];
          } else {
            e2 = -1;
            for (; rd[0] === 0; e2 -= LOG_BASE)
              rd.shift();
            for (k = 1, n = rd[0]; n >= 10; n /= 10)
              k++;
            if (k < LOG_BASE)
              e2 -= LOG_BASE - k;
          }
          r.e = e2;
          r.d = rd;
          return r;
        }
        function round3(x) {
          return finalise(x = new this(x), x.e + 1, this.rounding);
        }
        function sign2(x) {
          x = new this(x);
          return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;
        }
        function sin3(x) {
          return new this(x).sin();
        }
        function sinh2(x) {
          return new this(x).sinh();
        }
        function sqrt3(x) {
          return new this(x).sqrt();
        }
        function sub3(x, y) {
          return new this(x).sub(y);
        }
        function sum3() {
          var i2 = 0, args = arguments, x = new this(args[i2]);
          external = false;
          for (; x.s && ++i2 < args.length; )
            x = x.plus(args[i2]);
          external = true;
          return finalise(x, this.precision, this.rounding);
        }
        function tan3(x) {
          return new this(x).tan();
        }
        function tanh2(x) {
          return new this(x).tanh();
        }
        function trunc2(x) {
          return finalise(x = new this(x), x.e + 1, 1);
        }
        Decimal2 = clone2(DEFAULTS);
        Decimal2.prototype.constructor = Decimal2;
        Decimal2["default"] = Decimal2.Decimal = Decimal2;
        LN10 = new Decimal2(LN10);
        PI = new Decimal2(PI);
        if (typeof define == "function" && define.amd) {
          define(function() {
            return Decimal2;
          });
        } else if (typeof module != "undefined" && module.exports) {
          if (typeof Symbol == "function" && typeof Symbol.iterator == "symbol") {
            P[Symbol["for"]("nodejs.util.inspect.custom")] = P.toString;
            P[Symbol.toStringTag] = "Decimal";
          }
          module.exports = Decimal2;
        } else {
          if (!globalScope) {
            globalScope = typeof self != "undefined" && self && self.self == self ? self : window;
          }
          noConflict = globalScope.Decimal;
          Decimal2.noConflict = function() {
            globalScope.Decimal = noConflict;
            return Decimal2;
          };
          globalScope.Decimal = Decimal2;
        }
      })(exports);
    }
  });

  // output/Affjax/foreign.js
  function _ajax(platformSpecificDriver, timeoutErrorMessageIdent, requestFailedMessageIdent, mkHeader, options3) {
    return function(errback, callback) {
      var xhr = platformSpecificDriver.newXHR();
      var fixedUrl = platformSpecificDriver.fixupUrl(options3.url, xhr);
      xhr.open(options3.method || "GET", fixedUrl, true, options3.username, options3.password);
      if (options3.headers) {
        try {
          for (var i2 = 0, header3; (header3 = options3.headers[i2]) != null; i2++) {
            xhr.setRequestHeader(header3.field, header3.value);
          }
        } catch (e2) {
          errback(e2);
        }
      }
      var onerror = function(msgIdent) {
        return function() {
          errback(new Error(msgIdent));
        };
      };
      xhr.onerror = onerror(requestFailedMessageIdent);
      xhr.ontimeout = onerror(timeoutErrorMessageIdent);
      xhr.onload = function() {
        callback({
          status: xhr.status,
          statusText: xhr.statusText,
          headers: xhr.getAllResponseHeaders().split("\r\n").filter(function(header4) {
            return header4.length > 0;
          }).map(function(header4) {
            var i3 = header4.indexOf(":");
            return mkHeader(header4.substring(0, i3))(header4.substring(i3 + 2));
          }),
          body: xhr.response
        });
      };
      xhr.responseType = options3.responseType;
      xhr.withCredentials = options3.withCredentials;
      xhr.timeout = options3.timeout;
      xhr.send(options3.content);
      return function(error4, cancelErrback, cancelCallback) {
        try {
          xhr.abort();
        } catch (e2) {
          return cancelErrback(e2);
        }
        return cancelCallback();
      };
    };
  }

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g) {
        return function(x) {
          return f(g(x));
        };
      };
    }
  };
  var compose = function(dict) {
    return dict.compose;
  };
  var composeFlipped = function(dictSemigroupoid) {
    var compose12 = compose(dictSemigroupoid);
    return function(f) {
      return function(g) {
        return compose12(g)(f);
      };
    };
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x) {
      return x;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var on = function(f) {
    return function(g) {
      return function(x) {
        return function(y) {
          return f(g(x))(g(y));
        };
      };
    };
  };
  var flip = function(f) {
    return function(b2) {
      return function(a2) {
        return f(a2)(b2);
      };
    };
  };
  var $$const = function(a2) {
    return function(v) {
      return a2;
    };
  };
  var applyFlipped = function(x) {
    return function(f) {
      return f(x);
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  }();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map121 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map121(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map121 = map(dictFunctor);
    return function(f) {
      return function(x) {
        return map121($$const(x))(f);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map121 = map(dictFunctor);
    return function(x) {
      return map121($$const(x));
    };
  };
  var functorFn = {
    map: /* @__PURE__ */ compose(semigroupoidFn)
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0)
        return ys;
      if (ys.length === 0)
        return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Data.Void/index.js
  var absurd = function(a2) {
    var spin = function($copy_v) {
      var $tco_result;
      function $tco_loop(v) {
        $copy_v = v;
        return;
      }
      ;
      while (true) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return spin(a2);
  };

  // output/Record.Unsafe/foreign.js
  var unsafeHas = function(label5) {
    return function(rec) {
      return {}.hasOwnProperty.call(rec, label5);
    };
  };
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };
  var unsafeSet = function(label5) {
    return function(value18) {
      return function(rec) {
        var copy2 = {};
        for (var key2 in rec) {
          if ({}.hasOwnProperty.call(rec, key2)) {
            copy2[key2] = rec[key2];
          }
        }
        copy2[label5] = value18;
        return copy2;
      };
    };
  };
  var unsafeDelete = function(label5) {
    return function(rec) {
      var copy2 = {};
      for (var key2 in rec) {
        if (key2 !== label5 && {}.hasOwnProperty.call(rec, key2)) {
          copy2[key2] = rec[key2];
        }
      }
      return copy2;
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupRecordNil = {
    appendRecord: function(v) {
      return function(v1) {
        return function(v2) {
          return {};
        };
      };
    }
  };
  var semigroupArray = {
    append: concatArray
  };
  var appendRecord = function(dict) {
    return dict.appendRecord;
  };
  var semigroupRecord = function() {
    return function(dictSemigroupRecord) {
      return {
        append: appendRecord(dictSemigroupRecord)($$Proxy.value)
      };
    };
  };
  var append = function(dict) {
    return dict.append;
  };
  var semigroupFn = function(dictSemigroup) {
    var append13 = append(dictSemigroup);
    return {
      append: function(f) {
        return function(g) {
          return function(x) {
            return append13(f(x))(g(x));
          };
        };
      }
    };
  };
  var semigroupRecordCons = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(dictSemigroupRecord) {
        var appendRecord1 = appendRecord(dictSemigroupRecord);
        return function(dictSemigroup) {
          var append13 = append(dictSemigroup);
          return {
            appendRecord: function(v) {
              return function(ra) {
                return function(rb) {
                  var tail3 = appendRecord1($$Proxy.value)(ra)(rb);
                  var key2 = reflectSymbol2($$Proxy.value);
                  var insert13 = unsafeSet(key2);
                  var get13 = unsafeGet(key2);
                  return insert13(append13(get13(ra))(get13(rb)))(tail3);
                };
              };
            }
          };
        };
      };
    };
  };

  // output/Control.Alt/index.js
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var applyFn = {
    apply: function(f) {
      return function(g) {
        return function(x) {
          return f(x)(g(x));
        };
      };
    },
    Functor0: function() {
      return functorFn;
    }
  };
  var apply = function(dict) {
    return dict.apply;
  };
  var applyFirst = function(dictApply) {
    var apply12 = apply(dictApply);
    var map58 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply12(map58($$const)(a2))(b2);
      };
    };
  };
  var applySecond = function(dictApply) {
    var apply12 = apply(dictApply);
    var map58 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply12(map58($$const(identity2))(a2))(b2);
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure115 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (!v) {
          return v1;
        }
        ;
        if (v) {
          return pure115(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure115 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1;
        }
        ;
        if (!v) {
          return pure115(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply7 = apply(dictApplicative.Apply0());
    var pure115 = pure(dictApplicative);
    return function(f) {
      return function(a2) {
        return apply7(pure115(f))(a2);
      };
    };
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq11) {
      return function(gt) {
        return function(x) {
          return function(y) {
            return x < y ? lt : x === y ? eq11 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r2) {
      return r1 === r2;
    };
  };
  var eqBooleanImpl = refEq;
  var eqIntImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;
  var eqArrayImpl = function(f) {
    return function(xs) {
      return function(ys) {
        if (xs.length !== ys.length)
          return false;
        for (var i2 = 0; i2 < xs.length; i2++) {
          if (!f(xs[i2])(ys[i2]))
            return false;
        }
        return true;
      };
    };
  };

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqRowNil = {
    eqRecord: function(v) {
      return function(v1) {
        return function(v2) {
          return true;
        };
      };
    }
  };
  var eqRecord = function(dict) {
    return dict.eqRecord;
  };
  var eqRec = function() {
    return function(dictEqRecord) {
      return {
        eq: eqRecord(dictEqRecord)($$Proxy.value)
      };
    };
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eqBoolean = {
    eq: eqBooleanImpl
  };
  var eq = function(dict) {
    return dict.eq;
  };
  var eq2 = /* @__PURE__ */ eq(eqBoolean);
  var eqArray = function(dictEq) {
    return {
      eq: eqArrayImpl(eq(dictEq))
    };
  };
  var eqRowCons = function(dictEqRecord) {
    var eqRecord1 = eqRecord(dictEqRecord);
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        return function(dictEq) {
          var eq32 = eq(dictEq);
          return {
            eqRecord: function(v) {
              return function(ra) {
                return function(rb) {
                  var tail3 = eqRecord1($$Proxy.value)(ra)(rb);
                  var key2 = reflectSymbol2($$Proxy.value);
                  var get13 = unsafeGet(key2);
                  return eq32(get13(ra))(get13(rb)) && tail3;
                };
              };
            }
          };
        };
      };
    };
  };
  var notEq = function(dictEq) {
    var eq32 = eq(dictEq);
    return function(x) {
      return function(y) {
        return eq2(eq32(x)(y))(false);
      };
    };
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  }();
  var GT = /* @__PURE__ */ function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  }();
  var EQ = /* @__PURE__ */ function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  }();

  // output/Data.Ring/foreign.js
  var intSub = function(x) {
    return function(y) {
      return x - y | 0;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x) {
    return function(y) {
      return x + y | 0;
    };
  };
  var intMul = function(x) {
    return function(y) {
      return x * y | 0;
    };
  };

  // output/Data.Semiring/index.js
  var zero = function(dict) {
    return dict.zero;
  };
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };
  var one = function(dict) {
    return dict.one;
  };
  var add = function(dict) {
    return dict.add;
  };

  // output/Data.Ring/index.js
  var sub = function(dict) {
    return dict.sub;
  };
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };
  var negate = function(dictRing) {
    var sub1 = sub(dictRing);
    var zero2 = zero(dictRing.Semiring0());
    return function(a2) {
      return sub1(zero2)(a2);
    };
  };

  // output/Data.Ord/index.js
  var ordUnit = {
    compare: function(v) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  }();
  var ordInt = /* @__PURE__ */ function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  }();
  var ordChar = /* @__PURE__ */ function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  }();
  var compare = function(dict) {
    return dict.compare;
  };
  var greaterThanOrEq = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare32(a1)(a2);
        if (v instanceof LT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var lessThan = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare32(a1)(a2);
        if (v instanceof LT) {
          return true;
        }
        ;
        return false;
      };
    };
  };
  var lessThanOrEq = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(a1) {
      return function(a2) {
        var v = compare32(a1)(a2);
        if (v instanceof GT) {
          return false;
        }
        ;
        return true;
      };
    };
  };
  var abs = function(dictOrd) {
    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);
    return function(dictRing) {
      var zero2 = zero(dictRing.Semiring0());
      var negate1 = negate(dictRing);
      return function(x) {
        var $99 = greaterThanOrEq1(x)(zero2);
        if ($99) {
          return x;
        }
        ;
        return negate1(x);
      };
    };
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showCharImpl = function(c) {
    var code3 = c.charCodeAt(0);
    if (code3 < 32 || code3 === 127) {
      switch (c) {
        case "\x07":
          return "'\\a'";
        case "\b":
          return "'\\b'";
        case "\f":
          return "'\\f'";
        case "\n":
          return "'\\n'";
        case "\r":
          return "'\\r'";
        case "	":
          return "'\\t'";
        case "\v":
          return "'\\v'";
      }
      return "'\\" + code3.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };
  var showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c, i2) {
        switch (c) {
          case '"':
          case "\\":
            return "\\" + c;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i2 + 1;
        var empty9 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty9;
      }
    ) + '"';
  };
  var showArrayImpl = function(f) {
    return function(xs) {
      var ss = [];
      for (var i2 = 0, l = xs.length; i2 < l; i2++) {
        ss[i2] = f(xs[i2]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var showChar = {
    show: showCharImpl
  };
  var show = function(dict) {
    return dict.show;
  };
  var showArray = function(dictShow) {
    return {
      show: showArrayImpl(show(dictShow))
    };
  };

  // output/Data.Generic.Rep/index.js
  var Inl = /* @__PURE__ */ function() {
    function Inl2(value0) {
      this.value0 = value0;
    }
    ;
    Inl2.create = function(value0) {
      return new Inl2(value0);
    };
    return Inl2;
  }();
  var Inr = /* @__PURE__ */ function() {
    function Inr2(value0) {
      this.value0 = value0;
    }
    ;
    Inr2.create = function(value0) {
      return new Inr2(value0);
    };
    return Inr2;
  }();
  var Product = /* @__PURE__ */ function() {
    function Product3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Product3.create = function(value0) {
      return function(value1) {
        return new Product3(value0, value1);
      };
    };
    return Product3;
  }();
  var NoArguments = /* @__PURE__ */ function() {
    function NoArguments2() {
    }
    ;
    NoArguments2.value = new NoArguments2();
    return NoArguments2;
  }();
  var Constructor = function(x) {
    return x;
  };
  var Argument = function(x) {
    return x;
  };
  var to = function(dict) {
    return dict.to;
  };
  var from = function(dict) {
    return dict.from;
  };

  // output/Data.Maybe/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  }();
  var Just = /* @__PURE__ */ function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  }();
  var maybe = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v;
        }
        ;
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a2) {
    return maybe(a2)(identity3);
  };
  var fromJust = function() {
    return function(v) {
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
    };
  };
  var eqMaybe = function(dictEq) {
    var eq11 = eq(dictEq);
    return {
      eq: function(x) {
        return function(y) {
          if (x instanceof Nothing && y instanceof Nothing) {
            return true;
          }
          ;
          if (x instanceof Just && y instanceof Just) {
            return eq11(x.value0)(y.value0);
          }
          ;
          return false;
        };
      }
    };
  };
  var applyMaybe = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return map2(v.value0)(v1);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v1(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  }();
  var altMaybe = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Nothing) {
          return v1;
        }
        ;
        return v;
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var plusMaybe = /* @__PURE__ */ function() {
    return {
      empty: Nothing.value,
      Alt0: function() {
        return altMaybe;
      }
    };
  }();
  var alternativeMaybe = {
    Applicative0: function() {
      return applicativeMaybe;
    },
    Plus1: function() {
      return plusMaybe;
    }
  };

  // output/Data.MediaType.Common/index.js
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";

  // output/Affjax.RequestBody/index.js
  var ArrayView = /* @__PURE__ */ function() {
    function ArrayView2(value0) {
      this.value0 = value0;
    }
    ;
    ArrayView2.create = function(value0) {
      return new ArrayView2(value0);
    };
    return ArrayView2;
  }();
  var Blob = /* @__PURE__ */ function() {
    function Blob3(value0) {
      this.value0 = value0;
    }
    ;
    Blob3.create = function(value0) {
      return new Blob3(value0);
    };
    return Blob3;
  }();
  var Document = /* @__PURE__ */ function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  }();
  var $$String = /* @__PURE__ */ function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  }();
  var FormData = /* @__PURE__ */ function() {
    function FormData2(value0) {
      this.value0 = value0;
    }
    ;
    FormData2.create = function(value0) {
      return new FormData2(value0);
    };
    return FormData2;
  }();
  var FormURLEncoded = /* @__PURE__ */ function() {
    function FormURLEncoded2(value0) {
      this.value0 = value0;
    }
    ;
    FormURLEncoded2.create = function(value0) {
      return new FormURLEncoded2(value0);
    };
    return FormURLEncoded2;
  }();
  var Json = /* @__PURE__ */ function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  }();
  var toMediaType = function(v) {
    if (v instanceof FormURLEncoded) {
      return new Just(applicationFormURLEncoded);
    }
    ;
    if (v instanceof Json) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };
  var json = /* @__PURE__ */ function() {
    return Json.create;
  }();

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x) {
    return x;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var wrap = function() {
    return coerce2;
  };
  var unwrap = function() {
    return coerce2;
  };
  var unwrap1 = /* @__PURE__ */ unwrap();
  var under = function() {
    return function() {
      return function(v) {
        return coerce2;
      };
    };
  };
  var un = function() {
    return function(v) {
      return unwrap1;
    };
  };
  var over = function() {
    return function() {
      return function(v) {
        return coerce2;
      };
    };
  };
  var alaF = function() {
    return function() {
      return function() {
        return function() {
          return function(v) {
            return coerce2;
          };
        };
      };
    };
  };

  // output/Affjax.RequestHeader/index.js
  var unwrap2 = /* @__PURE__ */ unwrap();
  var Accept = /* @__PURE__ */ function() {
    function Accept2(value0) {
      this.value0 = value0;
    }
    ;
    Accept2.create = function(value0) {
      return new Accept2(value0);
    };
    return Accept2;
  }();
  var ContentType = /* @__PURE__ */ function() {
    function ContentType2(value0) {
      this.value0 = value0;
    }
    ;
    ContentType2.create = function(value0) {
      return new ContentType2(value0);
    };
    return ContentType2;
  }();
  var RequestHeader = /* @__PURE__ */ function() {
    function RequestHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RequestHeader2.create = function(value0) {
      return function(value1) {
        return new RequestHeader2(value0, value1);
      };
    };
    return RequestHeader2;
  }();
  var value = function(v) {
    if (v instanceof Accept) {
      return unwrap2(v.value0);
    }
    ;
    if (v instanceof ContentType) {
      return unwrap2(v.value0);
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value1;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
  };
  var name = function(v) {
    if (v instanceof Accept) {
      return "Accept";
    }
    ;
    if (v instanceof ContentType) {
      return "Content-Type";
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
  };

  // output/Affjax.ResponseFormat/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var $$ArrayBuffer = /* @__PURE__ */ function() {
    function $$ArrayBuffer2(value0) {
      this.value0 = value0;
    }
    ;
    $$ArrayBuffer2.create = function(value0) {
      return new $$ArrayBuffer2(value0);
    };
    return $$ArrayBuffer2;
  }();
  var Blob2 = /* @__PURE__ */ function() {
    function Blob3(value0) {
      this.value0 = value0;
    }
    ;
    Blob3.create = function(value0) {
      return new Blob3(value0);
    };
    return Blob3;
  }();
  var Document2 = /* @__PURE__ */ function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  }();
  var Json2 = /* @__PURE__ */ function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  }();
  var $$String2 = /* @__PURE__ */ function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  }();
  var Ignore = /* @__PURE__ */ function() {
    function Ignore2(value0) {
      this.value0 = value0;
    }
    ;
    Ignore2.create = function(value0) {
      return new Ignore2(value0);
    };
    return Ignore2;
  }();
  var toResponseType = function(v) {
    if (v instanceof $$ArrayBuffer) {
      return "arraybuffer";
    }
    ;
    if (v instanceof Blob2) {
      return "blob";
    }
    ;
    if (v instanceof Document2) {
      return "document";
    }
    ;
    if (v instanceof Json2) {
      return "text";
    }
    ;
    if (v instanceof $$String2) {
      return "text";
    }
    ;
    if (v instanceof Ignore) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at Affjax.ResponseFormat (line 44, column 3 - line 50, column 19): " + [v.constructor.name]);
  };
  var toMediaType2 = function(v) {
    if (v instanceof Json2) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };
  var json2 = /* @__PURE__ */ function() {
    return new Json2(identity4);
  }();

  // output/Affjax.ResponseHeader/index.js
  var ResponseHeader = /* @__PURE__ */ function() {
    function ResponseHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseHeader2.create = function(value0) {
      return function(value1) {
        return new ResponseHeader2(value0, value1);
      };
    };
    return ResponseHeader2;
  }();

  // output/Control.Bind/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var discard = function(dict) {
    return dict.discard;
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped17 = bindFlipped(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bindFlipped17(f)(g(a2));
        };
      };
    };
  };
  var composeKleisli = function(dictBind) {
    var bind114 = bind(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bind114(f(a2))(g);
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };
  var join = function(dictBind) {
    var bind114 = bind(dictBind);
    return function(m) {
      return bind114(m)(identity5);
    };
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  }();
  var Right = /* @__PURE__ */ function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  }();
  var note = function(a2) {
    return maybe(new Left(a2))(Right.create);
  };
  var functorEither = {
    map: function(f) {
      return function(m) {
        if (m instanceof Left) {
          return new Left(m.value0);
        }
        ;
        if (m instanceof Right) {
          return new Right(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var either = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var hush = /* @__PURE__ */ function() {
    return either($$const(Nothing.value))(Just.create);
  }();
  var applyEither = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof Right) {
          return map3(v.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };
  var bindEither = {
    bind: /* @__PURE__ */ either(function(e2) {
      return function(v) {
        return new Left(e2);
      };
    })(function(a2) {
      return function(f) {
        return f(a2);
      };
    }),
    Apply0: function() {
      return applyEither;
    }
  };
  var applicativeEither = /* @__PURE__ */ function() {
    return {
      pure: Right.create,
      Apply0: function() {
        return applyEither;
      }
    };
  }();

  // output/Effect/foreign.js
  var pureE = function(a2) {
    return function() {
      return a2;
    };
  };
  var bindE = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind30 = bind(dictMonad.Bind1());
    var unless4 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m) {
        return bind30(mb)(function(b2) {
          return unless4(b2)(m);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind30 = bind(dictMonad.Bind1());
    var pure30 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a2) {
        return bind30(f)(function(f$prime) {
          return bind30(a2)(function(a$prime) {
            return pure30(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x) {
    return Math.min(Math.abs(x), 2147483647);
  };
  var intDiv = function(x) {
    return function(y) {
      if (y === 0)
        return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };
  var intMod = function(x) {
    return function(y) {
      if (y === 0)
        return 0;
      var yy = Math.abs(y);
      return (x % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Monoid/index.js
  var semigroupRecord2 = /* @__PURE__ */ semigroupRecord();
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var monoidRecordNil = {
    memptyRecord: function(v) {
      return {};
    },
    SemigroupRecord0: function() {
      return semigroupRecordNil;
    }
  };
  var monoidArray = {
    mempty: [],
    Semigroup0: function() {
      return semigroupArray;
    }
  };
  var memptyRecord = function(dict) {
    return dict.memptyRecord;
  };
  var monoidRecord = function() {
    return function(dictMonoidRecord) {
      var semigroupRecord1 = semigroupRecord2(dictMonoidRecord.SemigroupRecord0());
      return {
        mempty: memptyRecord(dictMonoidRecord)($$Proxy.value),
        Semigroup0: function() {
          return semigroupRecord1;
        }
      };
    };
  };
  var mempty = function(dict) {
    return dict.mempty;
  };
  var monoidFn = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var semigroupFn2 = semigroupFn(dictMonoid.Semigroup0());
    return {
      mempty: function(v) {
        return mempty1;
      },
      Semigroup0: function() {
        return semigroupFn2;
      }
    };
  };
  var monoidRecordCons = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    var semigroupRecordCons2 = semigroupRecordCons(dictIsSymbol)();
    return function(dictMonoid) {
      var mempty1 = mempty(dictMonoid);
      var Semigroup0 = dictMonoid.Semigroup0();
      return function() {
        return function(dictMonoidRecord) {
          var memptyRecord1 = memptyRecord(dictMonoidRecord);
          var semigroupRecordCons1 = semigroupRecordCons2(dictMonoidRecord.SemigroupRecord0())(Semigroup0);
          return {
            memptyRecord: function(v) {
              var tail3 = memptyRecord1($$Proxy.value);
              var key2 = reflectSymbol2($$Proxy.value);
              var insert13 = unsafeSet(key2);
              return insert13(mempty1)(tail3);
            },
            SemigroupRecord0: function() {
              return semigroupRecordCons1;
            }
          };
        };
      };
    };
  };
  var guard = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1;
        }
        ;
        if (!v) {
          return mempty1;
        }
        ;
        throw new Error("Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);
  var applyEffect = /* @__PURE__ */ $lazy_applyEffect(23);

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function message(e2) {
    return e2.message;
  }
  function throwException(e2) {
    return function() {
      throw e2;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map58 = map(Monad0.Bind1().Apply0().Functor0());
    var pure30 = pure(Monad0.Applicative0());
    return function(a2) {
      return catchError1(map58(Right.create)(a2))(function($52) {
        return pure30(Left.create($52));
      });
    };
  };

  // output/Control.Monad.Reader.Class/index.js
  var ask = function(dict) {
    return dict.ask;
  };

  // output/Data.Identity/index.js
  var Identity = function(x) {
    return x;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m) {
        return f(m);
      };
    }
  };
  var applyIdentity = {
    apply: function(v) {
      return function(v1) {
        return v(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v) {
      return function(f) {
        return f(v);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read = function(ref3) {
    return function() {
      return ref3.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref3) {
      return function() {
        var t = f(ref3.value);
        ref3.value = t.state;
        return t.value;
      };
    };
  };
  var write = function(val) {
    return function(ref3) {
      return function() {
        ref3.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_ = function(f) {
    return function(s) {
      return $$void2(modify(f)(s));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  }();
  var Done = /* @__PURE__ */ function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  }();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var tailRec = function(f) {
    var go2 = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v instanceof Loop) {
          $copy_v = f(v.value0);
          return;
        }
        ;
        if (v instanceof Done) {
          $tco_done = true;
          return v.value0;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return function($85) {
      return go2(f($85));
    };
  };
  var monadRecIdentity = {
    tailRecM: function(f) {
      var runIdentity = function(v) {
        return v;
      };
      var $86 = tailRec(function($88) {
        return runIdentity(f($88));
      });
      return function($87) {
        return Identity($86($87));
      };
    },
    Monad0: function() {
      return monadIdentity;
    }
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a2) {
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [v.constructor.name]);
        };
        return function __do3() {
          var r = bindFlipped2($$new)(f(a2))();
          (function() {
            while (!function __do4() {
              var v = read(r)();
              if (v instanceof Loop) {
                var e2 = f(v.value0)();
                write(e2)(r)();
                return false;
              }
              ;
              if (v instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [v.constructor.name]);
            }()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read(r))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };

  // output/Control.Lazy/index.js
  var defer = function(dict) {
    return dict.defer;
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a2) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a2))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
      ff: function(v) {
        return ff1;
      },
      tt: function(v) {
        return tt1;
      },
      implies: function(f) {
        return function(g) {
          return function(a2) {
            return implies1(f(a2))(g(a2));
          };
        };
      },
      conj: function(f) {
        return function(g) {
          return function(a2) {
            return conj1(f(a2))(g(a2));
          };
        };
      },
      disj: function(f) {
        return function(g) {
          return function(a2) {
            return disj1(f(a2))(g(a2));
          };
        };
      },
      not: function(f) {
        return function(a2) {
          return not1(f(a2));
        };
      }
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  }();
  var uncurry = function(f) {
    return function(v) {
      return f(v.value0)(v.value1);
    };
  };
  var snd = function(v) {
    return v.value1;
  };
  var functorTuple = {
    map: function(f) {
      return function(m) {
        return new Tuple(m.value0, f(m.value1));
      };
    }
  };
  var fst = function(v) {
    return v.value0;
  };
  var eqTuple = function(dictEq) {
    var eq11 = eq(dictEq);
    return function(dictEq1) {
      var eq15 = eq(dictEq1);
      return {
        eq: function(x) {
          return function(y) {
            return eq11(x.value0)(y.value0) && eq15(x.value1)(y.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare4 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare12 = compare(dictOrd1);
      var eqTuple2 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x) {
          return function(y) {
            var v = compare4(x.value0)(y.value0);
            if (v instanceof LT) {
              return LT.value;
            }
            ;
            if (v instanceof GT) {
              return GT.value;
            }
            ;
            return compare12(x.value1)(y.value1);
          };
        },
        Eq0: function() {
          return eqTuple2;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var modify_2 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(unit, f(s));
      });
    };
  };
  var modify2 = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        var s$prime = f(s);
        return new Tuple(s$prime, s$prime);
      });
    };
  };
  var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(f(s), s);
      });
    };
  };
  var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
      return new Tuple(s, s);
    });
  };

  // output/Control.Monad.Trans.Class/index.js
  var lift = function(dict) {
    return dict.lift;
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x) {
    return x;
  };
  var runExceptT = function(v) {
    return v;
  };
  var mapExceptT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map121 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map121(map5(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind30 = bind(dictMonad.Bind1());
    var pure30 = pure(dictMonad.Applicative0());
    return {
      bind: function(v) {
        return function(k) {
          return bind30(v)(either(function($187) {
            return pure30(Left.create($187));
          })(function(a2) {
            var v1 = k(a2);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: function() {
        var $188 = pure(dictMonad.Applicative0());
        return function($189) {
          return ExceptT($188(Right.create($189)));
        };
      }(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: function() {
        var $198 = pure(dictMonad.Applicative0());
        return function($199) {
          return ExceptT($198(Left.create($199)));
        };
      }(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var altExceptT = function(dictSemigroup) {
    var append13 = append(dictSemigroup);
    return function(dictMonad) {
      var Bind1 = dictMonad.Bind1();
      var bind30 = bind(Bind1);
      var pure30 = pure(dictMonad.Applicative0());
      var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
      return {
        alt: function(v) {
          return function(v1) {
            return bind30(v)(function(rm) {
              if (rm instanceof Right) {
                return pure30(new Right(rm.value0));
              }
              ;
              if (rm instanceof Left) {
                return bind30(v1)(function(rn) {
                  if (rn instanceof Right) {
                    return pure30(new Right(rn.value0));
                  }
                  ;
                  if (rn instanceof Left) {
                    return pure30(new Left(append13(rm.value0)(rn.value0)));
                  }
                  ;
                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
                });
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
            });
          };
        },
        Functor0: function() {
          return functorExceptT1;
        }
      };
    };
  };

  // output/Control.Monad.Except/index.js
  var unwrap3 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap3(runExceptT($3));
  };

  // output/Data.Argonaut.Core/foreign.js
  function id(x) {
    return x;
  }
  var jsonNull = null;
  function stringify(j) {
    return JSON.stringify(j);
  }
  function _caseJson(isNull3, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null)
      return isNull3();
    else if (typeof j === "boolean")
      return isBool(j);
    else if (typeof j === "number")
      return isNum(j);
    else if (typeof j === "string")
      return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else
      return isObj(j);
  }

  // output/Foreign.Object/foreign.js
  function _copyST(m) {
    return function() {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  }
  var empty = {};
  function runST(f) {
    return f();
  }
  function _fmapObject(m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  }
  function _foldM(bind30) {
    return function(f) {
      return function(mz) {
        return function(m) {
          var acc = mz;
          function g(k2) {
            return function(z) {
              return f(z)(k2)(m[k2]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind30(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  }
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
  var keys = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a2) {
      return function() {
        return f(a2());
      };
    };
  };
  var foreach = function(as3) {
    return function(f) {
      return function() {
        for (var i2 = 0, l = as3.length; i2 < l; i2++) {
          f(as3[i2])();
        }
      };
    };
  };

  // output/Control.Monad.ST.Internal/index.js
  var functorST = {
    map: map_
  };

  // output/Data.Array/foreign.js
  var range = function(start2) {
    return function(end3) {
      var step4 = start2 > end3 ? -1 : 1;
      var result = new Array(step4 * (end3 - start2) + 1);
      var i2 = start2, n = 0;
      while (i2 !== end3) {
        result[n++] = i2;
        i2 += step4;
      }
      result[n] = i2;
      return result;
    };
  };
  var replicateFill = function(count) {
    return function(value18) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value18);
    };
  };
  var replicatePolyfill = function(count) {
    return function(value18) {
      var result = [];
      var n = 0;
      for (var i2 = 0; i2 < count; i2++) {
        result[n++] = value18;
      }
      return result;
    };
  };
  var replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = function() {
    function Cons3(head6, tail3) {
      this.head = head6;
      this.tail = tail3;
    }
    var emptyList = {};
    function curryCons(head6) {
      return function(tail3) {
        return new Cons3(head6, tail3);
      };
    }
    function listToArray(list2) {
      var result = [];
      var count = 0;
      var xs = list2;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr5) {
      return function(xs) {
        return listToArray(foldr5(curryCons)(emptyList)(xs));
      };
    };
  }();
  var length = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty9) {
    return function(next) {
      return function(xs) {
        return xs.length === 0 ? empty9({}) : next(xs[0])(xs.slice(1));
      };
    };
  };
  var indexImpl = function(just) {
    return function(nothing) {
      return function(xs) {
        return function(i2) {
          return i2 < 0 || i2 >= xs.length ? nothing : just(xs[i2]);
        };
      };
    };
  };
  var findIndexImpl = function(just) {
    return function(nothing) {
      return function(f) {
        return function(xs) {
          for (var i2 = 0, l = xs.length; i2 < l; i2++) {
            if (f(xs[i2]))
              return just(i2);
          }
          return nothing;
        };
      };
    };
  };
  var _deleteAt = function(just) {
    return function(nothing) {
      return function(i2) {
        return function(l) {
          if (i2 < 0 || i2 >= l.length)
            return nothing;
          var l1 = l.slice();
          l1.splice(i2, 1);
          return just(l1);
        };
      };
    };
  };
  var _updateAt = function(just) {
    return function(nothing) {
      return function(i2) {
        return function(a2) {
          return function(l) {
            if (i2 < 0 || i2 >= l.length)
              return nothing;
            var l1 = l.slice();
            l1[i2] = a2;
            return just(l1);
          };
        };
      };
    };
  };
  var filter = function(f) {
    return function(xs) {
      return xs.filter(f);
    };
  };
  var sortByImpl = function() {
    function mergeFromTo(compare4, fromOrdering, xs1, xs2, from4, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x;
      var y;
      var c;
      mid = from4 + (to2 - from4 >> 1);
      if (mid - from4 > 1)
        mergeFromTo(compare4, fromOrdering, xs2, xs1, from4, mid);
      if (to2 - mid > 1)
        mergeFromTo(compare4, fromOrdering, xs2, xs1, mid, to2);
      i2 = from4;
      j = mid;
      k = from4;
      while (i2 < mid && j < to2) {
        x = xs2[i2];
        y = xs2[j];
        c = fromOrdering(compare4(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        } else {
          xs1[k++] = x;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare4) {
      return function(fromOrdering) {
        return function(xs) {
          var out;
          if (xs.length < 2)
            return xs;
          out = xs.slice(0);
          mergeFromTo(compare4, fromOrdering, out, xs.slice(0), 0, xs.length);
          return out;
        };
      };
    };
  }();
  var slice = function(s) {
    return function(e2) {
      return function(l) {
        return l.slice(s, e2);
      };
    };
  };
  var zipWith = function(f) {
    return function(xs) {
      return function(ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i2 = 0; i2 < l; i2++) {
          result[i2] = f(xs[i2])(ys[i2]);
        }
        return result;
      };
    };
  };
  var unsafeIndexImpl = function(xs) {
    return function(n) {
      return xs[n];
    };
  };

  // output/Data.Array.ST/foreign.js
  var pushAll = function(as3) {
    return function(xs) {
      return function() {
        return xs.push.apply(xs, as3);
      };
    };
  };
  var unsafeFreeze = function(xs) {
    return function() {
      return xs;
    };
  };
  function copyImpl(xs) {
    return function() {
      return xs.slice();
    };
  }
  var thaw = copyImpl;
  var sortByImpl2 = function() {
    function mergeFromTo(compare4, fromOrdering, xs1, xs2, from4, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x;
      var y;
      var c;
      mid = from4 + (to2 - from4 >> 1);
      if (mid - from4 > 1)
        mergeFromTo(compare4, fromOrdering, xs2, xs1, from4, mid);
      if (to2 - mid > 1)
        mergeFromTo(compare4, fromOrdering, xs2, xs1, mid, to2);
      i2 = from4;
      j = mid;
      k = from4;
      while (i2 < mid && j < to2) {
        x = xs2[i2];
        y = xs2[j];
        c = fromOrdering(compare4(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        } else {
          xs1[k++] = x;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare4) {
      return function(fromOrdering) {
        return function(xs) {
          return function() {
            if (xs.length < 2)
              return xs;
            mergeFromTo(compare4, fromOrdering, xs, xs.slice(0), 0, xs.length);
            return xs;
          };
        };
      };
    };
  }();

  // output/Data.Array.ST/index.js
  var withArray = function(f) {
    return function(xs) {
      return function __do3() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = function(a2) {
    return pushAll([a2]);
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init4) {
      return function(xs) {
        var acc = init4;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init4) {
      return function(xs) {
        var acc = init4;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Control.Plus/index.js
  var empty2 = function(dict) {
    return dict.empty;
  };

  // output/Data.Bifunctor/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var bimap = function(dict) {
    return dict.bimap;
  };
  var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
      return bimap1(f)(identity6);
    };
  };
  var rmap = function(dictBifunctor) {
    return bimap(dictBifunctor)(identity6);
  };
  var bifunctorTuple = {
    bimap: function(f) {
      return function(g) {
        return function(v) {
          return new Tuple(f(v.value0), g(v.value1));
        };
      };
    }
  };
  var bifunctorEither = {
    bimap: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return new Left(v(v2.value0));
          }
          ;
          if (v2 instanceof Right) {
            return new Right(v1(v2.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    }
  };

  // output/Data.Maybe.First/index.js
  var First = function(x) {
    return x;
  };
  var semigroupFirst = {
    append: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v;
        }
        ;
        return v1;
      };
    }
  };
  var monoidFirst = /* @__PURE__ */ function() {
    return {
      mempty: Nothing.value,
      Semigroup0: function() {
        return semigroupFirst;
      }
    };
  }();

  // output/Data.Monoid.Disj/index.js
  var Disj = function(x) {
    return x;
  };
  var semigroupDisj = function(dictHeytingAlgebra) {
    var disj2 = disj(dictHeytingAlgebra);
    return {
      append: function(v) {
        return function(v1) {
          return disj2(v)(v1);
        };
      }
    };
  };
  var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
      mempty: ff(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupDisj1;
      }
    };
  };

  // output/Data.Foldable/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var unwrap4 = /* @__PURE__ */ unwrap();
  var alaF2 = /* @__PURE__ */ alaF()()()();
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond2 = applySecond(dictApplicative.Apply0());
    var pure30 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond2(f($454));
        })(pure30(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_14(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var indexl = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(idx) {
      var go2 = function(cursor) {
        return function(a2) {
          if (cursor.elem instanceof Just) {
            return cursor;
          }
          ;
          var $296 = cursor.pos === idx;
          if ($296) {
            return {
              elem: new Just(a2),
              pos: cursor.pos
            };
          }
          ;
          return {
            pos: cursor.pos + 1 | 0,
            elem: cursor.elem
          };
        };
      };
      var $455 = foldl22(go2)({
        elem: Nothing.value,
        pos: 0
      });
      return function($456) {
        return function(v) {
          return v.elem;
        }($455($456));
      };
    };
  };
  var length2 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      var add1 = add(dictSemiring);
      var one2 = one(dictSemiring);
      return foldl22(function(c) {
        return function(v) {
          return add1(one2)(c);
        };
      })(zero(dictSemiring));
    };
  };
  var foldableMaybe = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty7 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty7;
          }
          ;
          if (v1 instanceof Just) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldableEither = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty7 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Left) {
            return mempty7;
          }
          ;
          if (v1 instanceof Right) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append13 = append(dictMonoid.Semigroup0());
      var mempty7 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x) {
          return function(acc) {
            return append13(f(x))(acc);
          };
        })(mempty7);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var lookup = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable)(monoidFirst);
    return function(dictEq) {
      var eq22 = eq(dictEq);
      return function(a2) {
        var $460 = foldMap22(function(v) {
          var $444 = eq22(a2)(v.value0);
          if ($444) {
            return new Just(v.value1);
          }
          ;
          return Nothing.value;
        });
        return function($461) {
          return unwrap4($460($461));
        };
      };
    };
  };
  var fold = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictMonoid) {
      return foldMap22(dictMonoid)(identity7);
    };
  };
  var any = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Disj)(foldMap22(monoidDisj(dictHeytingAlgebra)));
    };
  };
  var elem = function(dictFoldable) {
    var any1 = any(dictFoldable)(heytingAlgebraBoolean);
    return function(dictEq) {
      var $462 = eq(dictEq);
      return function($463) {
        return any1($462($463));
      };
    };
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = function() {
    function array1(a2) {
      return [a2];
    }
    function array2(a2) {
      return function(b2) {
        return [a2, b2];
      };
    }
    function array3(a2) {
      return function(b2) {
        return function(c) {
          return [a2, b2, c];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply7) {
      return function(map58) {
        return function(pure30) {
          return function(f) {
            return function(array4) {
              function go2(bot, top4) {
                switch (top4 - bot) {
                  case 0:
                    return pure30([]);
                  case 1:
                    return map58(array1)(f(array4[bot]));
                  case 2:
                    return apply7(map58(array2)(f(array4[bot])))(f(array4[bot + 1]));
                  case 3:
                    return apply7(apply7(map58(array3)(f(array4[bot])))(f(array4[bot + 1])))(f(array4[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top4 - bot) / 4) * 2;
                    return apply7(map58(concat2)(go2(bot, pivot)))(go2(pivot, top4));
                }
              }
              return go2(0, array4.length);
            };
          };
        };
      };
    };
  }();

  // output/Data.Const/index.js
  var Const = function(x) {
    return x;
  };
  var functorConst = {
    map: function(f) {
      return function(m) {
        return m;
      };
    }
  };
  var applyConst = function(dictSemigroup) {
    var append13 = append(dictSemigroup);
    return {
      apply: function(v) {
        return function(v1) {
          return append13(v)(v1);
        };
      },
      Functor0: function() {
        return functorConst;
      }
    };
  };
  var applicativeConst = function(dictMonoid) {
    var mempty7 = mempty(dictMonoid);
    var applyConst1 = applyConst(dictMonoid.Semigroup0());
    return {
      pure: function(v) {
        return mempty7;
      },
      Apply0: function() {
        return applyConst1;
      }
    };
  };

  // output/Data.Traversable/index.js
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity8);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };

  // output/Data.Unfoldable/foreign.js
  var unfoldrArrayImpl = function(isNothing2) {
    return function(fromJust12) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value18 = b2;
              while (true) {
                var maybe3 = f(value18);
                if (isNothing2(maybe3))
                  return result;
                var tuple2 = fromJust12(maybe3);
                result.push(fst2(tuple2));
                value18 = snd2(tuple2);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/foreign.js
  var unfoldr1ArrayImpl = function(isNothing2) {
    return function(fromJust12) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value18 = b2;
              while (true) {
                var tuple2 = f(value18);
                result.push(fst2(tuple2));
                var maybe3 = snd2(tuple2);
                if (isNothing2(maybe3))
                  return result;
                value18 = fromJust12(maybe3);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var unfoldr1 = function(dict) {
    return dict.unfoldr1;
  };
  var unfoldable1Array = {
    unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
  };
  var replicate1 = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
      return function(v) {
        var step4 = function(i2) {
          if (i2 <= 0) {
            return new Tuple(v, Nothing.value);
          }
          ;
          if (otherwise) {
            return new Tuple(v, new Just(i2 - 1 | 0));
          }
          ;
          throw new Error("Failed pattern match at Data.Unfoldable1 (line 68, column 5 - line 68, column 39): " + [i2.constructor.name]);
        };
        return unfoldr11(step4)(n - 1 | 0);
      };
    };
  };
  var singleton = function(dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
  };

  // output/Data.Unfoldable/index.js
  var fromJust3 = /* @__PURE__ */ fromJust();
  var unfoldr = function(dict) {
    return dict.unfoldr;
  };
  var unfoldableArray = {
    unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
    Unfoldable10: function() {
      return unfoldable1Array;
    }
  };

  // output/Data.Array/index.js
  var fromJust4 = /* @__PURE__ */ fromJust();
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var updateAt = /* @__PURE__ */ function() {
    return _updateAt(Just.create)(Nothing.value);
  }();
  var unsafeIndex = function() {
    return unsafeIndexImpl;
  };
  var uncons = /* @__PURE__ */ function() {
    return unconsImpl($$const(Nothing.value))(function(x) {
      return function(xs) {
        return new Just({
          head: x,
          tail: xs
        });
      };
    });
  }();
  var tail = /* @__PURE__ */ function() {
    return unconsImpl($$const(Nothing.value))(function(v) {
      return function(xs) {
        return new Just(xs);
      };
    });
  }();
  var snoc = function(xs) {
    return function(x) {
      return withArray(push(x))(xs)();
    };
  };
  var singleton2 = function(a2) {
    return [a2];
  };
  var $$null = function(xs) {
    return length(xs) === 0;
  };
  var mapWithIndex = function(f) {
    return function(xs) {
      return zipWith(f)(range(0)(length(xs) - 1 | 0))(xs);
    };
  };
  var init = function(xs) {
    if ($$null(xs)) {
      return Nothing.value;
    }
    ;
    if (otherwise) {
      return new Just(slice(0)(length(xs) - 1 | 0)(xs));
    }
    ;
    throw new Error("Failed pattern match at Data.Array (line 338, column 1 - line 338, column 45): " + [xs.constructor.name]);
  };
  var index = /* @__PURE__ */ function() {
    return indexImpl(Just.create)(Nothing.value);
  }();
  var last = function(xs) {
    return index(xs)(length(xs) - 1 | 0);
  };
  var head = function(xs) {
    return index(xs)(0);
  };
  var fromFoldable = function(dictFoldable) {
    return fromFoldableImpl(foldr(dictFoldable));
  };
  var foldr2 = /* @__PURE__ */ foldr(foldableArray);
  var findIndex = /* @__PURE__ */ function() {
    return findIndexImpl(Just.create)(Nothing.value);
  }();
  var elemIndex = function(dictEq) {
    var eq22 = eq(dictEq);
    return function(x) {
      return findIndex(function(v) {
        return eq22(v)(x);
      });
    };
  };
  var notElem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a2) {
      return function(arr) {
        return isNothing(elemIndex1(a2)(arr));
      };
    };
  };
  var drop = function(n) {
    return function(xs) {
      var $169 = n < 1;
      if ($169) {
        return xs;
      }
      ;
      return slice(n)(length(xs))(xs);
    };
  };
  var deleteAt = /* @__PURE__ */ function() {
    return _deleteAt(Just.create)(Nothing.value);
  }();
  var deleteBy = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2.length === 0) {
          return [];
        }
        ;
        return maybe(v2)(function(i2) {
          return fromJust4(deleteAt(i2)(v2));
        })(findIndex(v(v1))(v2));
      };
    };
  };
  var cons2 = function(x) {
    return function(xs) {
      return append2([x])(xs);
    };
  };
  var some = function(dictAlternative) {
    var apply12 = apply(dictAlternative.Applicative0().Apply0());
    var map310 = map(dictAlternative.Plus1().Alt0().Functor0());
    return function(dictLazy) {
      var defer5 = defer(dictLazy);
      return function(v) {
        return apply12(map310(cons2)(v))(defer5(function(v1) {
          return many(dictAlternative)(dictLazy)(v);
        }));
      };
    };
  };
  var many = function(dictAlternative) {
    var alt11 = alt(dictAlternative.Plus1().Alt0());
    var pure115 = pure(dictAlternative.Applicative0());
    return function(dictLazy) {
      return function(v) {
        return alt11(some(dictAlternative)(dictLazy)(v))(pure115([]));
      };
    };
  };

  // output/Data.Function.Uncurried/foreign.js
  var mkFn5 = function(fn) {
    return function(a2, b2, c, d, e2) {
      return fn(a2)(b2)(c)(d)(e2);
    };
  };
  var runFn3 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return fn(a2, b2, c);
        };
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return function(d) {
            return fn(a2, b2, c, d);
          };
        };
      };
    };
  };

  // output/Data.FoldableWithIndex/index.js
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
  };
  var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
  };

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };
  function poke2(k) {
    return function(v) {
      return function(m) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  var deleteImpl = function(k) {
    return function(m) {
      return function() {
        delete m[k];
        return m;
      };
    };
  };

  // output/Foreign.Object/index.js
  var $$void3 = /* @__PURE__ */ $$void(functorST);
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorMaybe);
  var thawST = _copyST;
  var mutate = function(f) {
    return function(m) {
      return runST(function __do3() {
        var s = thawST(m)();
        f(s)();
        return s;
      });
    };
  };
  var lookup2 = /* @__PURE__ */ function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  }();
  var insert = function(k) {
    return function(v) {
      return mutate(poke2(k)(v));
    };
  };
  var functorObject = {
    map: function(f) {
      return function(m) {
        return _fmapObject(m, f);
      };
    }
  };
  var fromFoldable2 = function(dictFoldable) {
    var fromFoldable1 = fromFoldable(dictFoldable);
    return function(l) {
      return runST(function __do3() {
        var s = newImpl();
        foreach(fromFoldable1(l))(function(v) {
          return $$void3(poke2(v.value0)(v.value1)(s));
        })();
        return s;
      });
    };
  };
  var fold2 = /* @__PURE__ */ _foldM(applyFlipped);
  var $$delete = function(k) {
    return mutate(deleteImpl(k));
  };
  var pop = function(k) {
    return function(m) {
      return mapFlipped2(lookup2(k)(m))(function(a2) {
        return new Tuple(a2, $$delete(k)(m));
      });
    };
  };

  // output/Data.Argonaut.Core/index.js
  var verbJsonType = function(def) {
    return function(f) {
      return function(g) {
        return g(def)(f);
      };
    };
  };
  var toJsonType = /* @__PURE__ */ function() {
    return verbJsonType(Nothing.value)(Just.create);
  }();
  var jsonEmptyObject = /* @__PURE__ */ id(empty);
  var isJsonType = /* @__PURE__ */ verbJsonType(false)(/* @__PURE__ */ $$const(true));
  var caseJsonString = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), f, $$const(d), $$const(d), j);
      };
    };
  };
  var toString = /* @__PURE__ */ toJsonType(caseJsonString);
  var caseJsonObject = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), $$const(d), f, j);
      };
    };
  };
  var toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
  var caseJsonNumber = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), f, $$const(d), $$const(d), $$const(d), j);
      };
    };
  };
  var toNumber = /* @__PURE__ */ toJsonType(caseJsonNumber);
  var caseJsonNull = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson(f, $$const(d), $$const(d), $$const(d), $$const(d), $$const(d), j);
      };
    };
  };
  var isNull = /* @__PURE__ */ isJsonType(caseJsonNull);
  var caseJsonBoolean = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), f, $$const(d), $$const(d), $$const(d), $$const(d), j);
      };
    };
  };
  var toBoolean = /* @__PURE__ */ toJsonType(caseJsonBoolean);
  var caseJsonArray = function(d) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), f, $$const(d), j);
      };
    };
  };
  var toArray = /* @__PURE__ */ toJsonType(caseJsonArray);

  // output/Data.Argonaut.Parser/foreign.js
  function _jsonParser(fail4, succ2, s) {
    try {
      return succ2(JSON.parse(s));
    } catch (e2) {
      return fail4(e2.message);
    }
  }

  // output/Data.Argonaut.Parser/index.js
  var jsonParser = function(j) {
    return _jsonParser(Left.create, Right.create, j);
  };

  // output/Data.String.Common/foreign.js
  var replaceAll = function(s1) {
    return function(s2) {
      return function(s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
      };
    };
  };
  var split = function(sep) {
    return function(s) {
      return s.split(sep);
    };
  };
  var toLower = function(s) {
    return s.toLowerCase();
  };
  var joinWith = function(s) {
    return function(xs) {
      return xs.join(s);
    };
  };

  // output/Data.String.Common/index.js
  var $$null2 = function(s) {
    return s === "";
  };

  // output/JSURI/foreign.js
  function toRFC3896(input3) {
    return input3.replace(/[!'()*]/g, function(c) {
      return "%" + c.charCodeAt(0).toString(16);
    });
  }
  var _encodeURIComponent = function encode(fail4, succeed, input3) {
    try {
      return succeed(toRFC3896(encodeURIComponent(input3)));
    } catch (err) {
      return fail4(err);
    }
  };
  var _encodeFormURLComponent = function encode2(fail4, succeed, input3) {
    try {
      return succeed(toRFC3896(encodeURIComponent(input3)).replace(/%20/g, "+"));
    } catch (err) {
      return fail4(err);
    }
  };
  function _decodeURIComponent(fail4, succeed, input3) {
    try {
      return succeed(decodeURIComponent(input3));
    } catch (err) {
      return fail4(err);
    }
  }

  // output/JSURI/index.js
  var $$encodeURIComponent = /* @__PURE__ */ function() {
    return runFn3(_encodeURIComponent)($$const(Nothing.value))(Just.create);
  }();
  var encodeFormURLComponent = /* @__PURE__ */ function() {
    return runFn3(_encodeFormURLComponent)($$const(Nothing.value))(Just.create);
  }();
  var $$decodeURIComponent = /* @__PURE__ */ function() {
    return runFn3(_decodeURIComponent)($$const(Nothing.value))(Just.create);
  }();

  // output/Data.FormURLEncoded/index.js
  var apply2 = /* @__PURE__ */ apply(applyMaybe);
  var map6 = /* @__PURE__ */ map(functorMaybe);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeMaybe);
  var toArray2 = function(v) {
    return v;
  };
  var encode3 = /* @__PURE__ */ function() {
    var encodePart = function(v) {
      if (v.value1 instanceof Nothing) {
        return encodeFormURLComponent(v.value0);
      }
      ;
      if (v.value1 instanceof Just) {
        return apply2(map6(function(key2) {
          return function(val) {
            return key2 + ("=" + val);
          };
        })(encodeFormURLComponent(v.value0)))(encodeFormURLComponent(v.value1.value0));
      }
      ;
      throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 16 - line 39, column 114): " + [v.constructor.name]);
    };
    var $37 = map6(joinWith("&"));
    var $38 = traverse2(encodePart);
    return function($39) {
      return $37($38(toArray2($39)));
    };
  }();

  // output/Data.HTTP.Method/index.js
  var OPTIONS = /* @__PURE__ */ function() {
    function OPTIONS2() {
    }
    ;
    OPTIONS2.value = new OPTIONS2();
    return OPTIONS2;
  }();
  var GET = /* @__PURE__ */ function() {
    function GET3() {
    }
    ;
    GET3.value = new GET3();
    return GET3;
  }();
  var HEAD = /* @__PURE__ */ function() {
    function HEAD2() {
    }
    ;
    HEAD2.value = new HEAD2();
    return HEAD2;
  }();
  var POST = /* @__PURE__ */ function() {
    function POST3() {
    }
    ;
    POST3.value = new POST3();
    return POST3;
  }();
  var PUT = /* @__PURE__ */ function() {
    function PUT2() {
    }
    ;
    PUT2.value = new PUT2();
    return PUT2;
  }();
  var DELETE = /* @__PURE__ */ function() {
    function DELETE2() {
    }
    ;
    DELETE2.value = new DELETE2();
    return DELETE2;
  }();
  var TRACE = /* @__PURE__ */ function() {
    function TRACE2() {
    }
    ;
    TRACE2.value = new TRACE2();
    return TRACE2;
  }();
  var CONNECT = /* @__PURE__ */ function() {
    function CONNECT2() {
    }
    ;
    CONNECT2.value = new CONNECT2();
    return CONNECT2;
  }();
  var PROPFIND = /* @__PURE__ */ function() {
    function PROPFIND2() {
    }
    ;
    PROPFIND2.value = new PROPFIND2();
    return PROPFIND2;
  }();
  var PROPPATCH = /* @__PURE__ */ function() {
    function PROPPATCH2() {
    }
    ;
    PROPPATCH2.value = new PROPPATCH2();
    return PROPPATCH2;
  }();
  var MKCOL = /* @__PURE__ */ function() {
    function MKCOL2() {
    }
    ;
    MKCOL2.value = new MKCOL2();
    return MKCOL2;
  }();
  var COPY = /* @__PURE__ */ function() {
    function COPY2() {
    }
    ;
    COPY2.value = new COPY2();
    return COPY2;
  }();
  var MOVE = /* @__PURE__ */ function() {
    function MOVE2() {
    }
    ;
    MOVE2.value = new MOVE2();
    return MOVE2;
  }();
  var LOCK = /* @__PURE__ */ function() {
    function LOCK2() {
    }
    ;
    LOCK2.value = new LOCK2();
    return LOCK2;
  }();
  var UNLOCK = /* @__PURE__ */ function() {
    function UNLOCK2() {
    }
    ;
    UNLOCK2.value = new UNLOCK2();
    return UNLOCK2;
  }();
  var PATCH = /* @__PURE__ */ function() {
    function PATCH2() {
    }
    ;
    PATCH2.value = new PATCH2();
    return PATCH2;
  }();
  var unCustomMethod = function(v) {
    return v;
  };
  var showMethod = {
    show: function(v) {
      if (v instanceof OPTIONS) {
        return "OPTIONS";
      }
      ;
      if (v instanceof GET) {
        return "GET";
      }
      ;
      if (v instanceof HEAD) {
        return "HEAD";
      }
      ;
      if (v instanceof POST) {
        return "POST";
      }
      ;
      if (v instanceof PUT) {
        return "PUT";
      }
      ;
      if (v instanceof DELETE) {
        return "DELETE";
      }
      ;
      if (v instanceof TRACE) {
        return "TRACE";
      }
      ;
      if (v instanceof CONNECT) {
        return "CONNECT";
      }
      ;
      if (v instanceof PROPFIND) {
        return "PROPFIND";
      }
      ;
      if (v instanceof PROPPATCH) {
        return "PROPPATCH";
      }
      ;
      if (v instanceof MKCOL) {
        return "MKCOL";
      }
      ;
      if (v instanceof COPY) {
        return "COPY";
      }
      ;
      if (v instanceof MOVE) {
        return "MOVE";
      }
      ;
      if (v instanceof LOCK) {
        return "LOCK";
      }
      ;
      if (v instanceof UNLOCK) {
        return "UNLOCK";
      }
      ;
      if (v instanceof PATCH) {
        return "PATCH";
      }
      ;
      throw new Error("Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): " + [v.constructor.name]);
    }
  };
  var print = /* @__PURE__ */ either(/* @__PURE__ */ show(showMethod))(unCustomMethod);

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  }();
  var singleton4 = function(dictPlus) {
    var empty9 = empty2(dictPlus);
    return function(a2) {
      return new NonEmpty(a2, empty9);
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  }();
  var Cons = /* @__PURE__ */ function() {
    function Cons3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons3.create = function(value0) {
      return function(value1) {
        return new Cons3(value0, value1);
      };
    };
    return Cons3;
  }();
  var NonEmptyList = function(x) {
    return x;
  };
  var toList = function(v) {
    return new Cons(v.value0, v.value1);
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v2) {
            if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
              return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
            }
            ;
            if (v2 instanceof Cons && v2.value1 instanceof Nil) {
              return new Cons(f(v2.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v2, v3) {
                if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v2.value1;
                  $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var map7 = /* @__PURE__ */ map(functorList);
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        }();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_b = f(b2)(v.value0);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty7 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append22(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty7);
      };
    }
  };
  var foldr3 = /* @__PURE__ */ foldr(foldableList);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr3(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var semigroupNonEmptyList = {
    append: function(v) {
      return function(as$prime) {
        return new NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
      };
    }
  };
  var applyList = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(map7(v.value0)(v1))(apply(applyList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorList;
    }
  };
  var applicativeList = {
    pure: function(a2) {
      return new Cons(a2, Nil.value);
    },
    Apply0: function() {
      return applyList;
    }
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  }();

  // output/Data.List/index.js
  var map8 = /* @__PURE__ */ map(functorMaybe);
  var uncons2 = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just({
        head: v.value0,
        tail: v.value1
      });
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
  };
  var toUnfoldable2 = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(xs) {
      return map8(function(rec) {
        return new Tuple(rec.head, rec.tail);
      })(uncons2(xs));
    });
  };
  var reverse2 = /* @__PURE__ */ function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  }();
  var $$null3 = function(v) {
    if (v instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var some2 = function(dictAlternative) {
    var apply7 = apply(dictAlternative.Applicative0().Apply0());
    var map121 = map(dictAlternative.Plus1().Alt0().Functor0());
    return function(dictLazy) {
      var defer5 = defer(dictLazy);
      return function(v) {
        return apply7(map121(Cons.create)(v))(defer5(function(v1) {
          return many2(dictAlternative)(dictLazy)(v);
        }));
      };
    };
  };
  var many2 = function(dictAlternative) {
    var alt11 = alt(dictAlternative.Plus1().Alt0());
    var pure30 = pure(dictAlternative.Applicative0());
    return function(dictLazy) {
      return function(v) {
        return alt11(some2(dictAlternative)(dictLazy)(v))(pure30(Nil.value));
      };
    };
  };
  var fromFoldable3 = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Data.List.NonEmpty/index.js
  var singleton5 = /* @__PURE__ */ function() {
    var $200 = singleton4(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  }();
  var head2 = function(v) {
    return v.value0;
  };
  var cons3 = function(y) {
    return function(v) {
      return new NonEmpty(y, new Cons(v.value0, v.value1));
    };
  };

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a2, r, f) {
    return a2 == null ? r : f(a2);
  }
  function notNull(x) {
    return x;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Effect.Aff/foreign.js
  var Aff = function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error4) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error4) {
        setTimeout(function() {
          throw error4;
        }, 0);
      }
    }
    function runSync(left2, right2, eff) {
      try {
        return right2(eff());
      } catch (error4) {
        return left2(error4);
      }
    }
    function runAsync(left2, eff, k) {
      try {
        return eff(k)();
      } catch (error4) {
        k(left2(error4))();
        return nonCanceler2;
      }
    }
    var Scheduler = function() {
      var limit = 1024;
      var size5 = 0;
      var ix4 = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size5 !== 0) {
          size5--;
          thunk = queue[ix4];
          queue[ix4] = void 0;
          ix4 = (ix4 + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size5 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix4 + size5) % limit] = cb;
          size5++;
          if (!draining) {
            drain();
          }
        }
      };
    }();
    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill3(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function() {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill3(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error4) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step4 = aff;
      var fail4 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run5(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step4 = bhead(step4);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e2) {
                status = RETURN;
                fail4 = util.left(e2);
                step4 = null;
              }
              break;
            case STEP_RESULT:
              if (util.isLeft(step4)) {
                status = RETURN;
                fail4 = step4;
                step4 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step4 = util.fromRight(step4);
              }
              break;
            case CONTINUE:
              switch (step4.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step4._2;
                  status = CONTINUE;
                  step4 = step4._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step4 = util.right(step4._1);
                  } else {
                    status = STEP_BIND;
                    step4 = step4._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step4 = runSync(util.left, util.right, step4._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step4 = runAsync(util.left, step4._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step4 = result2;
                        run5(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail4 = util.left(step4._1);
                  step4 = null;
                  break;
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step4, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step4, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step4 = step4._1;
                  break;
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step4, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step4, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step4 = step4._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step4._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step4._1) {
                    tmp.run();
                  }
                  step4 = util.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step4 = sequential3(util, supervisor, step4._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step4 = interrupt || fail4 || step4;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail4) {
                      status = CONTINUE;
                      step4 = attempt._2(util.fromLeft(fail4));
                      fail4 = null;
                    }
                    break;
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail4) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step4 = util.fromRight(step4);
                    }
                    break;
                  case BRACKET:
                    bracketCount--;
                    if (fail4 === null) {
                      result = util.fromRight(step4);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step4 = attempt._3(result);
                      }
                    }
                    break;
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step4, fail4), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step4 = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail4) {
                      step4 = attempt._1.failed(util.fromLeft(fail4))(attempt._2);
                    } else {
                      step4 = attempt._1.completed(util.fromRight(step4))(attempt._2);
                    }
                    fail4 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step4, fail4), attempts, interrupt);
                    status = CONTINUE;
                    step4 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step4 = attempt._1;
                    fail4 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step4));
                }
              }
              joins = null;
              if (interrupt && fail4) {
                setTimeout(function() {
                  throw util.fromLeft(fail4);
                }, 0);
              } else if (util.isLeft(step4) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util.fromLeft(step4);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join5) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join5.rethrow;
            join5.handler(step4)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join5;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill3(error4, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error4);
              status = COMPLETED;
              step4 = interrupt;
              run5(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step4(error4)), attempts, interrupt);
                }
                status = RETURN;
                step4 = null;
                fail4 = null;
                run5(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util.left(error4);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step4 = null;
                fail4 = null;
              }
          }
          return canceler;
        };
      }
      function join4(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run5(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill3,
        join: join4,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run5(runTick);
              });
            } else {
              run5(runTick);
            }
          }
        }
      };
    }
    function runPar(util, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root2 = EMPTY;
      function kill3(error4, par2, cb2) {
        var step4 = par2;
        var head6 = null;
        var tail3 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop:
          while (true) {
            tmp = null;
            switch (step4.tag) {
              case FORKED:
                if (step4._3 === EMPTY) {
                  tmp = fibers[step4._1];
                  kills2[count++] = tmp.kill(error4, function(result) {
                    return function() {
                      count--;
                      if (count === 0) {
                        cb2(result)();
                      }
                    };
                  });
                }
                if (head6 === null) {
                  break loop;
                }
                step4 = head6._2;
                if (tail3 === null) {
                  head6 = null;
                } else {
                  head6 = tail3._1;
                  tail3 = tail3._2;
                }
                break;
              case MAP:
                step4 = step4._2;
                break;
              case APPLY:
              case ALT:
                if (head6) {
                  tail3 = new Aff2(CONS, head6, tail3);
                }
                head6 = step4;
                step4 = step4._1;
                break;
            }
          }
        if (count === 0) {
          cb2(util.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join4(result, head6, tail3) {
        var fail4, step4, lhs, rhs, tmp, kid;
        if (util.isLeft(result)) {
          fail4 = result;
          step4 = null;
        } else {
          step4 = result;
          fail4 = null;
        }
        loop:
          while (true) {
            lhs = null;
            rhs = null;
            tmp = null;
            kid = null;
            if (interrupt !== null) {
              return;
            }
            if (head6 === null) {
              cb(fail4 || step4)();
              return;
            }
            if (head6._3 !== EMPTY) {
              return;
            }
            switch (head6.tag) {
              case MAP:
                if (fail4 === null) {
                  head6._3 = util.right(head6._1(util.fromRight(step4)));
                  step4 = head6._3;
                } else {
                  head6._3 = fail4;
                }
                break;
              case APPLY:
                lhs = head6._1._3;
                rhs = head6._2._3;
                if (fail4) {
                  head6._3 = fail4;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill3(early, fail4 === lhs ? head6._2 : head6._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail3 === null) {
                        join4(fail4, null, null);
                      } else {
                        join4(fail4, tail3._1, tail3._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                } else if (lhs === EMPTY || rhs === EMPTY) {
                  return;
                } else {
                  step4 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                  head6._3 = step4;
                }
                break;
              case ALT:
                lhs = head6._1._3;
                rhs = head6._2._3;
                if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                  return;
                }
                if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                  fail4 = step4 === lhs ? rhs : lhs;
                  step4 = null;
                  head6._3 = fail4;
                } else {
                  head6._3 = step4;
                  tmp = true;
                  kid = killId++;
                  kills[kid] = kill3(early, step4 === lhs ? head6._2 : head6._1, function() {
                    return function() {
                      delete kills[kid];
                      if (tmp) {
                        tmp = false;
                      } else if (tail3 === null) {
                        join4(step4, null, null);
                      } else {
                        join4(step4, tail3._1, tail3._2);
                      }
                    };
                  });
                  if (tmp) {
                    tmp = false;
                    return;
                  }
                }
                break;
            }
            if (tail3 === null) {
              head6 = null;
            } else {
              head6 = tail3._1;
              tail3 = tail3._2;
            }
          }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join4(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run5() {
        var status = CONTINUE;
        var step4 = par;
        var head6 = null;
        var tail3 = null;
        var tmp, fid;
        loop:
          while (true) {
            tmp = null;
            fid = null;
            switch (status) {
              case CONTINUE:
                switch (step4.tag) {
                  case MAP:
                    if (head6) {
                      tail3 = new Aff2(CONS, head6, tail3);
                    }
                    head6 = new Aff2(MAP, step4._1, EMPTY, EMPTY);
                    step4 = step4._2;
                    break;
                  case APPLY:
                    if (head6) {
                      tail3 = new Aff2(CONS, head6, tail3);
                    }
                    head6 = new Aff2(APPLY, EMPTY, step4._2, EMPTY);
                    step4 = step4._1;
                    break;
                  case ALT:
                    if (head6) {
                      tail3 = new Aff2(CONS, head6, tail3);
                    }
                    head6 = new Aff2(ALT, EMPTY, step4._2, EMPTY);
                    step4 = step4._1;
                    break;
                  default:
                    fid = fiberId++;
                    status = RETURN;
                    tmp = step4;
                    step4 = new Aff2(FORKED, fid, new Aff2(CONS, head6, tail3), EMPTY);
                    tmp = Fiber(util, supervisor, tmp);
                    tmp.onComplete({
                      rethrow: false,
                      handler: resolve(step4)
                    })();
                    fibers[fid] = tmp;
                    if (supervisor) {
                      supervisor.register(tmp);
                    }
                }
                break;
              case RETURN:
                if (head6 === null) {
                  break loop;
                }
                if (head6._1 === EMPTY) {
                  head6._1 = step4;
                  status = CONTINUE;
                  step4 = head6._2;
                  head6._2 = EMPTY;
                } else {
                  head6._2 = step4;
                  step4 = head6;
                  if (tail3 === null) {
                    head6 = null;
                  } else {
                    head6 = tail3._1;
                    tail3 = tail3._2;
                  }
                }
            }
          }
        root2 = step4;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error4, cb2) {
        interrupt = util.left(error4);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill3(error4, root2, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run5();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  }();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value18) {
          return Aff.Pure(f(value18));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options3) {
      return function(k) {
        return Aff.Bracket(acquire, options3, k);
      };
    };
  }
  function _makeFiber(util, aff) {
    return function() {
      return Aff.Fiber(util, null, aff);
    };
  }
  var _delay = function() {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }
    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }
    return function(right2, ms) {
      return Aff.Async(function(cb) {
        return function() {
          var timer = setDelay(ms, cb(right2()));
          return function() {
            return Aff.Sync(function() {
              return right2(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();
  var _sequential = Aff.Seq;

  // output/Type.Equality/index.js
  var refl = {
    proof: function(a2) {
      return a2;
    },
    Coercible0: function() {
      return void 0;
    }
  };
  var proof = function(dict) {
    return dict.proof;
  };
  var from2 = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a2) {
      return a2;
    });
    return v;
  };

  // output/Control.Monad.Reader.Trans/index.js
  var ReaderT = function(x) {
    return x;
  };
  var runReaderT = function(v) {
    return v;
  };
  var monadTransReaderT = {
    lift: function(dictMonad) {
      return function($147) {
        return ReaderT($$const($147));
      };
    }
  };
  var lift3 = /* @__PURE__ */ lift(monadTransReaderT);
  var mapReaderT = function(f) {
    return function(v) {
      return function($148) {
        return f(v($148));
      };
    };
  };
  var functorReaderT = function(dictFunctor) {
    return {
      map: function() {
        var $149 = map(dictFunctor);
        return function($150) {
          return mapReaderT($149($150));
        };
      }()
    };
  };
  var applyReaderT = function(dictApply) {
    var apply7 = apply(dictApply);
    var functorReaderT1 = functorReaderT(dictApply.Functor0());
    return {
      apply: function(v) {
        return function(v1) {
          return function(r) {
            return apply7(v(r))(v1(r));
          };
        };
      },
      Functor0: function() {
        return functorReaderT1;
      }
    };
  };
  var bindReaderT = function(dictBind) {
    var bind30 = bind(dictBind);
    var applyReaderT1 = applyReaderT(dictBind.Apply0());
    return {
      bind: function(v) {
        return function(k) {
          return function(r) {
            return bind30(v(r))(function(a2) {
              var v1 = k(a2);
              return v1(r);
            });
          };
        };
      },
      Apply0: function() {
        return applyReaderT1;
      }
    };
  };
  var applicativeReaderT = function(dictApplicative) {
    var applyReaderT1 = applyReaderT(dictApplicative.Apply0());
    return {
      pure: function() {
        var $154 = pure(dictApplicative);
        return function($155) {
          return ReaderT($$const($154($155)));
        };
      }(),
      Apply0: function() {
        return applyReaderT1;
      }
    };
  };
  var monadReaderT = function(dictMonad) {
    var applicativeReaderT1 = applicativeReaderT(dictMonad.Applicative0());
    var bindReaderT1 = bindReaderT(dictMonad.Bind1());
    return {
      Applicative0: function() {
        return applicativeReaderT1;
      },
      Bind1: function() {
        return bindReaderT1;
      }
    };
  };
  var monadAskReaderT = function(dictMonad) {
    var monadReaderT1 = monadReaderT(dictMonad);
    return {
      ask: pure(dictMonad.Applicative0()),
      Monad0: function() {
        return monadReaderT1;
      }
    };
  };
  var monadEffectReader = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadReaderT1 = monadReaderT(Monad0);
    return {
      liftEffect: function() {
        var $157 = lift3(Monad0);
        var $158 = liftEffect(dictMonadEffect);
        return function($159) {
          return $157($158($159));
        };
      }(),
      Monad0: function() {
        return monadReaderT1;
      }
    };
  };

  // output/Control.Monad.Writer.Trans/index.js
  var WriterT = function(x) {
    return x;
  };
  var runWriterT = function(v) {
    return v;
  };
  var mapWriterT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorWriterT = function(dictFunctor) {
    var map58 = map(dictFunctor);
    return {
      map: function(f) {
        return mapWriterT(map58(function(v) {
          return new Tuple(f(v.value0), v.value1);
        }));
      }
    };
  };

  // output/Data.Profunctor/index.js
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var wrap2 = /* @__PURE__ */ wrap();
  var unwrap5 = /* @__PURE__ */ unwrap();
  var profunctorFn = {
    dimap: function(a2b) {
      return function(c2d) {
        return function(b2c) {
          return function($18) {
            return c2d(b2c(a2b($18)));
          };
        };
      };
    }
  };
  var dimap = function(dict) {
    return dict.dimap;
  };
  var rmap2 = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(b2c) {
      return dimap1(identity9)(b2c);
    };
  };
  var wrapIso = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function() {
      return function(v) {
        return dimap1(unwrap5)(wrap2);
      };
    };
  };

  // output/Data.Profunctor.Star/index.js
  var Star = function(x) {
    return x;
  };
  var profunctorStar = function(dictFunctor) {
    var map58 = map(dictFunctor);
    return {
      dimap: function(f) {
        return function(g) {
          return function(v) {
            var $127 = map58(g);
            return function($128) {
              return $127(v(f($128)));
            };
          };
        };
      }
    };
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Control.Parallel/index.js
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var traverse_8 = traverse_(dictParallel.Applicative1());
    var parallel3 = parallel(dictParallel);
    return function(dictFoldable) {
      var traverse_14 = traverse_8(dictFoldable);
      return function(f) {
        var $48 = traverse_14(function($50) {
          return parallel3(f($50));
        });
        return function($49) {
          return sequential3($48($49));
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictFoldable) {
      return parTraverse_1(dictFoldable)(identity10);
    };
  };

  // output/Data.Time.Duration/index.js
  var Milliseconds = function(x) {
    return x;
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy2 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void4 = /* @__PURE__ */ $$void(functorEffect);
  var map9 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x) {
    return x;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ function() {
    var unsafeFromRight = function(v) {
      if (v instanceof Right) {
        return v.value0;
      }
      ;
      if (v instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 21 - line 409, column 54): " + [v.constructor.name]);
    };
    var unsafeFromLeft = function(v) {
      if (v instanceof Left) {
        return v.value0;
      }
      ;
      if (v instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 20 - line 404, column 55): " + [v.constructor.name]);
    };
    var isLeft = function(v) {
      if (v instanceof Left) {
        return true;
      }
      ;
      if (v instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 397, column 12 - line 399, column 21): " + [v.constructor.name]);
    };
    return {
      isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  }();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do3() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var launchAff_ = function($73) {
    return $$void4(launchAff($73));
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy2("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a2) {
      return bracket(pure22(unit))($$const(fin))($$const(a2));
    };
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($74) {
    return Canceler($$const(liftEffect2($74)));
  };
  var joinFiber = function(v) {
    return makeAff(function(k) {
      return map9(effectCanceler)(v.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
      };
    }
  };
  var killFiber = function(e2) {
    return function(v) {
      return bind1(liftEffect2(v.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void4(v.kill(e2, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map9(effectCanceler)(v.kill(e2, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped3(function($77) {
        return liftEffect2(k($77));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void4(runAff(k)(aff));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Monad0: function() {
      return monadAff;
    },
    Applicative1: function() {
      return $lazy_applicativeParAff(0);
    }
  };
  var $lazy_applicativeParAff = /* @__PURE__ */ $runtime_lazy2("applicativeParAff", "Effect.Aff", function() {
    return {
      pure: function() {
        var $79 = parallel(parallelAff);
        return function($80) {
          return $79(pure22($80));
        };
      }(),
      Apply0: function() {
        return applyParAff;
      }
    };
  });
  var applicativeParAff = /* @__PURE__ */ $lazy_applicativeParAff(131);
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a2) {
        return bind1(k(a2))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));

  // output/Effect.Aff.Compat/index.js
  var fromEffectFnAff = function(v) {
    return makeAff(function(k) {
      return function __do3() {
        var v1 = v(function($9) {
          return k(Left.create($9))();
        }, function($10) {
          return k(Right.create($10))();
        });
        return function(e2) {
          return makeAff(function(k2) {
            return function __do4() {
              v1(e2, function($11) {
                return k2(Left.create($11))();
              }, function($12) {
                return k2(Right.create($12))();
              });
              return nonCanceler;
            };
          });
        };
      };
    });
  };

  // output/Foreign/foreign.js
  function typeOf(value18) {
    return typeof value18;
  }
  function tagOf(value18) {
    return Object.prototype.toString.call(value18).slice(8, -1);
  }
  var isArray = Array.isArray || function(value18) {
    return Object.prototype.toString.call(value18) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
  var toNumber2 = function(n) {
    return n;
  };
  var fromStringAsImpl = function(just) {
    return function(nothing) {
      return function(radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern2 = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function(s) {
          if (pattern2.test(s)) {
            var i2 = parseInt(s, radix);
            return (i2 | 0) === i2 ? just(i2) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
  var toStringAs = function(radix) {
    return function(i2) {
      return i2.toString(radix);
    };
  };

  // output/Data.Number/foreign.js
  var isFiniteImpl = isFinite;
  var floor = Math.floor;

  // output/Data.Int/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var fromStringAs = /* @__PURE__ */ function() {
    return fromStringAsImpl(Just.create)(Nothing.value);
  }();
  var fromString = /* @__PURE__ */ fromStringAs(10);
  var fromNumber = /* @__PURE__ */ function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  }();
  var unsafeClamp = function(x) {
    if (!isFiniteImpl(x)) {
      return 0;
    }
    ;
    if (x >= toNumber2(top2)) {
      return top2;
    }
    ;
    if (x <= toNumber2(bottom2)) {
      return bottom2;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x.constructor.name]);
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };
  var decimal = 10;

  // output/Data.String.CodeUnits/foreign.js
  var fromCharArray = function(a2) {
    return a2.join("");
  };
  var toCharArray = function(s) {
    return s.split("");
  };
  var singleton6 = function(c) {
    return c;
  };
  var length4 = function(s) {
    return s.length;
  };
  var countPrefix = function(p2) {
    return function(s) {
      var i2 = 0;
      while (i2 < s.length && p2(s.charAt(i2)))
        i2++;
      return i2;
    };
  };
  var _indexOf = function(just) {
    return function(nothing) {
      return function(x) {
        return function(s) {
          var i2 = s.indexOf(x);
          return i2 === -1 ? nothing : just(i2);
        };
      };
    };
  };
  var take2 = function(n) {
    return function(s) {
      return s.substr(0, n);
    };
  };
  var drop3 = function(n) {
    return function(s) {
      return s.substring(n);
    };
  };
  var splitAt = function(i2) {
    return function(s) {
      return { before: s.substring(0, i2), after: s.substring(i2) };
    };
  };

  // output/Data.String.Unsafe/foreign.js
  var charAt = function(i2) {
    return function(s) {
      if (i2 >= 0 && i2 < s.length)
        return s.charAt(i2);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };

  // output/Data.String.CodeUnits/index.js
  var takeWhile2 = function(p2) {
    return function(s) {
      return take2(countPrefix(p2)(s))(s);
    };
  };
  var stripPrefix = function(v) {
    return function(str) {
      var v1 = splitAt(length4(v))(str);
      var $20 = v1.before === v;
      if ($20) {
        return new Just(v1.after);
      }
      ;
      return Nothing.value;
    };
  };
  var indexOf = /* @__PURE__ */ function() {
    return _indexOf(Just.create)(Nothing.value);
  }();
  var contains = function(pat) {
    var $23 = indexOf(pat);
    return function($24) {
      return isJust($23($24));
    };
  };

  // output/Foreign/index.js
  var show2 = /* @__PURE__ */ show(showString);
  var show1 = /* @__PURE__ */ show(showInt);
  var ForeignError = /* @__PURE__ */ function() {
    function ForeignError2(value0) {
      this.value0 = value0;
    }
    ;
    ForeignError2.create = function(value0) {
      return new ForeignError2(value0);
    };
    return ForeignError2;
  }();
  var TypeMismatch = /* @__PURE__ */ function() {
    function TypeMismatch4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TypeMismatch4.create = function(value0) {
      return function(value1) {
        return new TypeMismatch4(value0, value1);
      };
    };
    return TypeMismatch4;
  }();
  var ErrorAtIndex = /* @__PURE__ */ function() {
    function ErrorAtIndex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtIndex2.create = function(value0) {
      return function(value1) {
        return new ErrorAtIndex2(value0, value1);
      };
    };
    return ErrorAtIndex2;
  }();
  var ErrorAtProperty = /* @__PURE__ */ function() {
    function ErrorAtProperty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtProperty2.create = function(value0) {
      return function(value1) {
        return new ErrorAtProperty2(value0, value1);
      };
    };
    return ErrorAtProperty2;
  }();
  var unsafeToForeign = unsafeCoerce2;
  var unsafeFromForeign = unsafeCoerce2;
  var renderForeignError = function(v) {
    if (v instanceof ForeignError) {
      return v.value0;
    }
    ;
    if (v instanceof ErrorAtIndex) {
      return "Error at array index " + (show1(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof ErrorAtProperty) {
      return "Error at property " + (show2(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof TypeMismatch) {
      return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    }
    ;
    throw new Error("Failed pattern match at Foreign (line 78, column 1 - line 78, column 45): " + [v.constructor.name]);
  };
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton5($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure115 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value18) {
        if (tagOf(value18) === tag) {
          return pure115(unsafeFromForeign(value18));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value18)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value18.constructor.name]);
      };
    };
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Affjax/index.js
  var pure3 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeExceptT(monadIdentity));
  var fail2 = /* @__PURE__ */ fail(monadIdentity);
  var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
  var alt2 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var map10 = /* @__PURE__ */ map(functorMaybe);
  var any3 = /* @__PURE__ */ any(foldableArray)(heytingAlgebraBoolean);
  var eq3 = /* @__PURE__ */ eq(eqString);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var map12 = /* @__PURE__ */ map(functorArray);
  var mapFlipped3 = /* @__PURE__ */ mapFlipped(functorAff);
  var $$try3 = /* @__PURE__ */ $$try(monadErrorAff);
  var pure1 = /* @__PURE__ */ pure(applicativeAff);
  var RequestContentError = /* @__PURE__ */ function() {
    function RequestContentError2(value0) {
      this.value0 = value0;
    }
    ;
    RequestContentError2.create = function(value0) {
      return new RequestContentError2(value0);
    };
    return RequestContentError2;
  }();
  var ResponseBodyError = /* @__PURE__ */ function() {
    function ResponseBodyError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseBodyError2.create = function(value0) {
      return function(value1) {
        return new ResponseBodyError2(value0, value1);
      };
    };
    return ResponseBodyError2;
  }();
  var TimeoutError = /* @__PURE__ */ function() {
    function TimeoutError2() {
    }
    ;
    TimeoutError2.value = new TimeoutError2();
    return TimeoutError2;
  }();
  var RequestFailedError = /* @__PURE__ */ function() {
    function RequestFailedError2() {
    }
    ;
    RequestFailedError2.value = new RequestFailedError2();
    return RequestFailedError2;
  }();
  var XHROtherError = /* @__PURE__ */ function() {
    function XHROtherError2(value0) {
      this.value0 = value0;
    }
    ;
    XHROtherError2.create = function(value0) {
      return new XHROtherError2(value0);
    };
    return XHROtherError2;
  }();
  var request = function(driver2) {
    return function(req) {
      var parseJSON = function(v2) {
        if (v2 === "") {
          return pure3(jsonEmptyObject);
        }
        ;
        return either(function($74) {
          return fail2(ForeignError.create($74));
        })(pure3)(jsonParser(v2));
      };
      var fromResponse = function() {
        if (req.responseFormat instanceof $$ArrayBuffer) {
          return unsafeReadTagged2("ArrayBuffer");
        }
        ;
        if (req.responseFormat instanceof Blob2) {
          return unsafeReadTagged2("Blob");
        }
        ;
        if (req.responseFormat instanceof Document2) {
          return function(x) {
            return alt2(unsafeReadTagged2("Document")(x))(alt2(unsafeReadTagged2("XMLDocument")(x))(unsafeReadTagged2("HTMLDocument")(x)));
          };
        }
        ;
        if (req.responseFormat instanceof Json2) {
          return composeKleisliFlipped2(function($75) {
            return req.responseFormat.value0(parseJSON($75));
          })(unsafeReadTagged2("String"));
        }
        ;
        if (req.responseFormat instanceof $$String2) {
          return unsafeReadTagged2("String");
        }
        ;
        if (req.responseFormat instanceof Ignore) {
          return $$const(req.responseFormat.value0(pure3(unit)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 274, column 18 - line 283, column 57): " + [req.responseFormat.constructor.name]);
      }();
      var extractContent = function(v2) {
        if (v2 instanceof ArrayView) {
          return new Right(v2.value0(unsafeToForeign));
        }
        ;
        if (v2 instanceof Blob) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof Document) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof $$String) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormData) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormURLEncoded) {
          return note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(map10(unsafeToForeign)(encode3(v2.value0)));
        }
        ;
        if (v2 instanceof Json) {
          return new Right(unsafeToForeign(stringify(v2.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 235, column 20 - line 250, column 69): " + [v2.constructor.name]);
      };
      var addHeader = function(mh) {
        return function(hs) {
          if (mh instanceof Just && !any3(on(eq3)(name)(mh.value0))(hs)) {
            return snoc(hs)(mh.value0);
          }
          ;
          return hs;
        };
      };
      var headers = function(reqContent) {
        return addHeader(map10(ContentType.create)(bindFlipped4(toMediaType)(reqContent)))(addHeader(map10(Accept.create)(toMediaType2(req.responseFormat)))(req.headers));
      };
      var ajaxRequest = function(v2) {
        return {
          method: print(req.method),
          url: req.url,
          headers: map12(function(h) {
            return {
              field: name(h),
              value: value(h)
            };
          })(headers(req.content)),
          content: v2,
          responseType: toResponseType(req.responseFormat),
          username: toNullable(req.username),
          password: toNullable(req.password),
          withCredentials: req.withCredentials,
          timeout: fromMaybe(0)(map10(function(v1) {
            return v1;
          })(req.timeout))
        };
      };
      var send = function(content3) {
        return mapFlipped3($$try3(fromEffectFnAff(_ajax(driver2, "AffjaxTimeoutErrorMessageIdent", "AffjaxRequestFailedMessageIdent", ResponseHeader.create, ajaxRequest(content3)))))(function(v2) {
          if (v2 instanceof Right) {
            var v1 = runExcept(fromResponse(v2.value0.body));
            if (v1 instanceof Left) {
              return new Left(new ResponseBodyError(head2(v1.value0), v2.value0));
            }
            ;
            if (v1 instanceof Right) {
              return new Right({
                headers: v2.value0.headers,
                status: v2.value0.status,
                statusText: v2.value0.statusText,
                body: v1.value0
              });
            }
            ;
            throw new Error("Failed pattern match at Affjax (line 209, column 9 - line 211, column 52): " + [v1.constructor.name]);
          }
          ;
          if (v2 instanceof Left) {
            return new Left(function() {
              var message3 = message(v2.value0);
              var $61 = message3 === "AffjaxTimeoutErrorMessageIdent";
              if ($61) {
                return TimeoutError.value;
              }
              ;
              var $62 = message3 === "AffjaxRequestFailedMessageIdent";
              if ($62) {
                return RequestFailedError.value;
              }
              ;
              return new XHROtherError(v2.value0);
            }());
          }
          ;
          throw new Error("Failed pattern match at Affjax (line 207, column 144 - line 219, column 28): " + [v2.constructor.name]);
        });
      };
      if (req.content instanceof Nothing) {
        return send(toNullable(Nothing.value));
      }
      ;
      if (req.content instanceof Just) {
        var v = extractContent(req.content.value0);
        if (v instanceof Right) {
          return send(toNullable(new Just(v.value0)));
        }
        ;
        if (v instanceof Left) {
          return pure1(new Left(new RequestContentError(v.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 199, column 7 - line 203, column 48): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Affjax (line 195, column 3 - line 203, column 48): " + [req.content.constructor.name]);
    };
  };
  var printError = function(v) {
    if (v instanceof RequestContentError) {
      return "There was a problem with the request content: " + v.value0;
    }
    ;
    if (v instanceof ResponseBodyError) {
      return "There was a problem with the response body: " + renderForeignError(v.value0);
    }
    ;
    if (v instanceof TimeoutError) {
      return "There was a problem making the request: timeout";
    }
    ;
    if (v instanceof RequestFailedError) {
      return "There was a problem making the request: request failed";
    }
    ;
    if (v instanceof XHROtherError) {
      return "There was a problem making the request: " + message(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Affjax (line 113, column 14 - line 123, column 66): " + [v.constructor.name]);
  };

  // output/Affjax.Web/foreign.js
  var driver = {
    newXHR: function() {
      return new XMLHttpRequest();
    },
    fixupUrl: function(url) {
      return url || "/";
    }
  };

  // output/Affjax.Web/index.js
  var request2 = /* @__PURE__ */ request(driver);

  // output/Control.Monad.Writer/index.js
  var unwrap6 = /* @__PURE__ */ unwrap();
  var writer = /* @__PURE__ */ function() {
    var $3 = pure(applicativeIdentity);
    return function($4) {
      return WriterT($3($4));
    };
  }();
  var runWriter = function($5) {
    return unwrap6(runWriterT($5));
  };
  var mapWriter = function(f) {
    return mapWriterT(function($6) {
      return Identity(f(unwrap6($6)));
    });
  };
  var execWriter = function(m) {
    return snd(runWriter(m));
  };

  // output/Data.Codec/index.js
  var un2 = /* @__PURE__ */ un();
  var GCodec = /* @__PURE__ */ function() {
    function GCodec2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GCodec2.create = function(value0) {
      return function(value1) {
        return new GCodec2(value0, value1);
      };
    };
    return GCodec2;
  }();
  var profunctorGCodec = function(dictFunctor) {
    var map58 = map(dictFunctor);
    return function(dictFunctor1) {
      var dimap3 = dimap(profunctorStar(dictFunctor1));
      return {
        dimap: function(f) {
          return function(g) {
            return function(v) {
              return new GCodec(map58(g)(v.value0), dimap3(f)(g)(v.value1));
            };
          };
        }
      };
    };
  };
  var mapCodec = function(dictBind) {
    var bindFlipped17 = bindFlipped(dictBind);
    return function(f) {
      return function(g) {
        return function(v) {
          var enc = function(a2) {
            var v1 = runWriter(un2(Star)(v.value1)(g(a2)));
            return writer(new Tuple(a2, v1.value1));
          };
          var dec = function(x) {
            return bindFlipped17(f)(runReaderT(v.value0)(x));
          };
          return new GCodec(dec, enc);
        };
      };
    };
  };
  var encoder = function(v) {
    return v.value1;
  };
  var encode4 = function(c) {
    var $179 = un2(Star)(encoder(c));
    return function($180) {
      return execWriter($179($180));
    };
  };
  var decoder = function(v) {
    return v.value0;
  };
  var decode = function($181) {
    return runReaderT(decoder($181));
  };
  var composeCodec = function(dictBind) {
    var bindFlipped17 = bindFlipped(dictBind);
    return function(v) {
      return function(v1) {
        return new GCodec(function(x) {
          return bindFlipped17(runReaderT(v.value0))(runReaderT(v1.value0)(x));
        }, function(c) {
          var v2 = runWriter(un2(Star)(v.value1)(c));
          return writer(new Tuple(v2.value0, execWriter(un2(Star)(v1.value1)(v2.value1))));
        });
      };
    };
  };
  var composeCodecFlipped = function(dictBind) {
    return flip(composeCodec(dictBind));
  };
  var bihoistGCodec = function(f) {
    return function(g) {
      return function(v) {
        return new GCodec(f(v.value0), function($182) {
          return g(v.value1($182));
        });
      };
    };
  };
  var basicCodec = function(f) {
    return function(g) {
      return new GCodec(f, function(x) {
        return writer(new Tuple(x, g(x)));
      });
    };
  };

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str) {
      return str.codePointAt(0);
    } : fallback;
  };
  var _codePointAt = function(fallback) {
    return function(Just2) {
      return function(Nothing2) {
        return function(unsafeCodePointAt02) {
          return function(index6) {
            return function(str) {
              var length11 = str.length;
              if (index6 < 0 || index6 >= length11)
                return Nothing2;
              if (hasStringIterator) {
                var iter = str[Symbol.iterator]();
                for (var i2 = index6; ; --i2) {
                  var o = iter.next();
                  if (o.done)
                    return Nothing2;
                  if (i2 === 0)
                    return Just2(unsafeCodePointAt02(o.value));
                }
              }
              return fallback(index6)(str);
            };
          };
        };
      };
    };
  };
  var _fromCodePointArray = function(singleton11) {
    return hasFromCodePoint ? function(cps) {
      if (cps.length < 1e4) {
        return String.fromCodePoint.apply(String, cps);
      }
      return cps.map(singleton11).join("");
    } : function(cps) {
      return cps.map(singleton11).join("");
    };
  };
  var _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };
  var _take = function(fallback) {
    return function(n) {
      if (hasStringIterator) {
        return function(str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i2 = 0; i2 < n; ++i2) {
            var o = iter.next();
            if (o.done)
              return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };
  var _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt02) {
      if (hasArrayFrom) {
        return function(str) {
          return Array.from(str, unsafeCodePointAt02);
        };
      }
      return fallback;
    };
  };

  // output/Data.Enum/foreign.js
  function toCharCode(c) {
    return c.charCodeAt(0);
  }
  function fromCharCode(c) {
    return String.fromCharCode(c);
  }

  // output/Control.Alternative/index.js
  var guard2 = function(dictAlternative) {
    var pure30 = pure(dictAlternative.Applicative0());
    var empty9 = empty2(dictAlternative.Plus1());
    return function(v) {
      if (v) {
        return pure30(unit);
      }
      ;
      if (!v) {
        return empty9;
      }
      ;
      throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
    };
  };

  // output/Data.Enum/index.js
  var top3 = /* @__PURE__ */ top(boundedInt);
  var bottom3 = /* @__PURE__ */ bottom(boundedInt);
  var bind2 = /* @__PURE__ */ bind(bindMaybe);
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorMaybe);
  var guard3 = /* @__PURE__ */ guard2(alternativeMaybe);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var succ = function(dict) {
    return dict.succ;
  };
  var pred = function(dict) {
    return dict.pred;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum12 = fromEnum(dictBoundedEnum);
    var bottom1 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x) {
          var v = toEnum1(x);
          if (v instanceof Just) {
            return v.value0;
          }
          ;
          if (v instanceof Nothing) {
            var $140 = x < fromEnum12(bottom1);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };
  var enumInt = {
    succ: function(n) {
      var $153 = n < top3;
      if ($153) {
        return new Just(n + 1 | 0);
      }
      ;
      return Nothing.value;
    },
    pred: function(n) {
      var $154 = n > bottom3;
      if ($154) {
        return new Just(n - 1 | 0);
      }
      ;
      return Nothing.value;
    },
    Ord0: function() {
      return ordInt;
    }
  };
  var enumFromTo = function(dictEnum) {
    var Ord0 = dictEnum.Ord0();
    var eq15 = eq(Ord0.Eq0());
    var lessThan1 = lessThan(Ord0);
    var succ1 = succ(dictEnum);
    var lessThanOrEq12 = lessThanOrEq(Ord0);
    var pred1 = pred(dictEnum);
    var greaterThanOrEq1 = greaterThanOrEq(Ord0);
    return function(dictUnfoldable1) {
      var singleton11 = singleton(dictUnfoldable1);
      var unfoldr12 = unfoldr1(dictUnfoldable1);
      var go2 = function(step4) {
        return function(op) {
          return function(to2) {
            return function(a2) {
              return new Tuple(a2, bind2(step4(a2))(function(a$prime) {
                return voidLeft2(guard3(op(a$prime)(to2)))(a$prime);
              }));
            };
          };
        };
      };
      return function(v) {
        return function(v1) {
          if (eq15(v)(v1)) {
            return singleton11(v);
          }
          ;
          if (lessThan1(v)(v1)) {
            return unfoldr12(go2(succ1)(lessThanOrEq12)(v1))(v);
          }
          ;
          if (otherwise) {
            return unfoldr12(go2(pred1)(greaterThanOrEq1)(v1))(v);
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v) {
    if (v >= bottom3 && v <= top3) {
      return new Just(fromCharCode(v));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ function() {
    return {
      cardinality: toCharCode(top(boundedChar)) - toCharCode(bottom(boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  }();

  // output/Data.String.CodePoints/index.js
  var $runtime_lazy3 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var map11 = /* @__PURE__ */ map(functorMaybe);
  var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var div2 = /* @__PURE__ */ div(euclideanRingInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var compare2 = /* @__PURE__ */ compare(ordInt);
  var CodePoint = function(x) {
    return x;
  };
  var unsurrogate = function(lead) {
    return function(trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };
  var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
  };
  var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
  };
  var uncons3 = function(s) {
    var v = length4(s);
    if (v === 0) {
      return Nothing.value;
    }
    ;
    if (v === 1) {
      return new Just({
        head: fromEnum2(charAt(0)(s)),
        tail: ""
      });
    }
    ;
    var cu1 = fromEnum2(charAt(1)(s));
    var cu0 = fromEnum2(charAt(0)(s));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) {
      return new Just({
        head: unsurrogate(cu0)(cu1),
        tail: drop3(2)(s)
      });
    }
    ;
    return new Just({
      head: cu0,
      tail: drop3(1)(s)
    });
  };
  var unconsButWithTuple = function(s) {
    return map11(function(v) {
      return new Tuple(v.head, v.tail);
    })(uncons3(s));
  };
  var toCodePointArrayFallback = function(s) {
    return unfoldr2(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function(s) {
    var cu0 = fromEnum2(charAt(0)(s));
    var $47 = isLead(cu0) && length4(s) > 1;
    if ($47) {
      var cu1 = fromEnum2(charAt(1)(s));
      var $48 = isTrail(cu1);
      if ($48) {
        return unsurrogate(cu0)(cu1);
      }
      ;
      return cu0;
    }
    ;
    return cu0;
  };
  var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length5 = function($74) {
    return length(toCodePointArray($74));
  };
  var fromCharCode2 = /* @__PURE__ */ function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton6($75($76));
    };
  }();
  var singletonFallback = function(v) {
    if (v <= 65535) {
      return fromCharCode2(v);
    }
    ;
    var lead = div2(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod2(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var fromCodePointArray = /* @__PURE__ */ _fromCodePointArray(singletonFallback);
  var singleton7 = /* @__PURE__ */ _singleton(singletonFallback);
  var takeFallback = function(v) {
    return function(v1) {
      if (v < 1) {
        return "";
      }
      ;
      var v2 = uncons3(v1);
      if (v2 instanceof Just) {
        return singleton7(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
      }
      ;
      return v1;
    };
  };
  var take3 = /* @__PURE__ */ _take(takeFallback);
  var eqCodePoint = {
    eq: function(x) {
      return function(y) {
        return x === y;
      };
    }
  };
  var ordCodePoint = {
    compare: function(x) {
      return function(y) {
        return compare2(x)(y);
      };
    },
    Eq0: function() {
      return eqCodePoint;
    }
  };
  var drop4 = function(n) {
    return function(s) {
      return drop3(length4(take3(n)(s)))(s);
    };
  };
  var codePointFromChar = function($77) {
    return CodePoint(fromEnum2($77));
  };
  var codePointAtFallback = function($copy_n) {
    return function($copy_s) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(n, s) {
        var v = uncons3(s);
        if (v instanceof Just) {
          var $66 = n === 0;
          if ($66) {
            $tco_done = true;
            return new Just(v.value0.head);
          }
          ;
          $tco_var_n = n - 1 | 0;
          $copy_s = v.value0.tail;
          return;
        }
        ;
        $tco_done = true;
        return Nothing.value;
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_s);
      }
      ;
      return $tco_result;
    };
  };
  var codePointAt = function(v) {
    return function(v1) {
      if (v < 0) {
        return Nothing.value;
      }
      ;
      if (v === 0 && v1 === "") {
        return Nothing.value;
      }
      ;
      if (v === 0) {
        return new Just(unsafeCodePointAt0(v1));
      }
      ;
      return _codePointAt(codePointAtFallback)(Just.create)(Nothing.value)(unsafeCodePointAt0)(v)(v1);
    };
  };
  var boundedCodePoint = {
    bottom: 0,
    top: 1114111,
    Ord0: function() {
      return ordCodePoint;
    }
  };
  var boundedEnumCodePoint = /* @__PURE__ */ function() {
    return {
      cardinality: 1114111 + 1 | 0,
      fromEnum: function(v) {
        return v;
      },
      toEnum: function(n) {
        if (n >= 0 && n <= 1114111) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [n.constructor.name]);
      },
      Bounded0: function() {
        return boundedCodePoint;
      },
      Enum1: function() {
        return $lazy_enumCodePoint(0);
      }
    };
  }();
  var $lazy_enumCodePoint = /* @__PURE__ */ $runtime_lazy3("enumCodePoint", "Data.String.CodePoints", function() {
    return {
      succ: defaultSucc(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      pred: defaultPred(toEnum(boundedEnumCodePoint))(fromEnum(boundedEnumCodePoint)),
      Ord0: function() {
        return ordCodePoint;
      }
    };
  });

  // output/Data.Codec.Argonaut/index.js
  var show12 = /* @__PURE__ */ show(showInt);
  var fromJust5 = /* @__PURE__ */ fromJust();
  var bind3 = /* @__PURE__ */ bind(bindEither);
  var lmap2 = /* @__PURE__ */ lmap(bifunctorEither);
  var pure4 = /* @__PURE__ */ pure(applicativeEither);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindEither);
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(bindEither);
  var rmap3 = /* @__PURE__ */ rmap(bifunctorTuple);
  var fromFoldable4 = /* @__PURE__ */ fromFoldable2(foldableList);
  var composeKleisliFlipped1 = /* @__PURE__ */ composeKleisliFlipped(bindMaybe);
  var map13 = /* @__PURE__ */ map(functorArray);
  var traverse3 = /* @__PURE__ */ traverse(traversableArray)(applicativeEither);
  var TypeMismatch2 = /* @__PURE__ */ function() {
    function TypeMismatch4(value0) {
      this.value0 = value0;
    }
    ;
    TypeMismatch4.create = function(value0) {
      return new TypeMismatch4(value0);
    };
    return TypeMismatch4;
  }();
  var UnexpectedValue = /* @__PURE__ */ function() {
    function UnexpectedValue3(value0) {
      this.value0 = value0;
    }
    ;
    UnexpectedValue3.create = function(value0) {
      return new UnexpectedValue3(value0);
    };
    return UnexpectedValue3;
  }();
  var AtIndex = /* @__PURE__ */ function() {
    function AtIndex3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AtIndex3.create = function(value0) {
      return function(value1) {
        return new AtIndex3(value0, value1);
      };
    };
    return AtIndex3;
  }();
  var AtKey = /* @__PURE__ */ function() {
    function AtKey3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AtKey3.create = function(value0) {
      return function(value1) {
        return new AtKey3(value0, value1);
      };
    };
    return AtKey3;
  }();
  var Named = /* @__PURE__ */ function() {
    function Named3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Named3.create = function(value0) {
      return function(value1) {
        return new Named3(value0, value1);
      };
    };
    return Named3;
  }();
  var MissingValue = /* @__PURE__ */ function() {
    function MissingValue3() {
    }
    ;
    MissingValue3.value = new MissingValue3();
    return MissingValue3;
  }();
  var recordProp = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(p2) {
        return function(codecA) {
          return function(codecR) {
            var unsafeSet2 = function(key3) {
              return function(a2) {
                var $202 = insert(key3)(a2);
                return function($203) {
                  return $202($203);
                };
              };
            };
            var unsafeGet2 = function(s) {
              var $205 = lookup2(s);
              return function($206) {
                return fromJust5($205($206));
              };
            };
            var enc$prime = function(key3) {
              return function(val) {
                return writer(new Tuple(val, new Cons(new Tuple(key3, encode4(codecA)(unsafeGet2(key3)(val))), encode4(codecR)(val))));
              };
            };
            var dec$prime = function(key3) {
              return function(obj) {
                return bind3(decode(codecR)(obj))(function(r) {
                  return bind3(lmap2(AtKey.create(key3))(function() {
                    var v = lookup2(key3)(obj);
                    if (v instanceof Just) {
                      return decode(codecA)(v.value0);
                    }
                    ;
                    if (v instanceof Nothing) {
                      return new Left(MissingValue.value);
                    }
                    ;
                    throw new Error("Failed pattern match at Data.Codec.Argonaut (line 270, column 31 - line 272, column 36): " + [v.constructor.name]);
                  }()))(function(a2) {
                    return pure4(unsafeSet2(key3)(a2)(r));
                  });
                });
              };
            };
            var key2 = reflectSymbol2(p2);
            return new GCodec(dec$prime(key2), enc$prime(key2));
          };
        };
      };
    };
  };
  var record = /* @__PURE__ */ function() {
    return new GCodec(pure(applicativeReaderT(applicativeEither))({}), function(val) {
      return writer(new Tuple(val, Nil.value));
    });
  }();
  var prismaticCodec = function(name16) {
    return function(f) {
      return function(g) {
        return function(orig) {
          return basicCodec(function(json$prime) {
            return bindFlipped5(function() {
              var $207 = note(new Named(name16, new UnexpectedValue(json$prime)));
              return function($208) {
                return $207(f($208));
              };
            }())(decode(orig)(json$prime));
          })(function() {
            var $209 = encode4(orig);
            return function($210) {
              return $209(g($210));
            };
          }());
        };
      };
    };
  };
  var printJsonDecodeError = function(err) {
    var go2 = function(v) {
      if (v instanceof TypeMismatch2) {
        return "  Expected value of type '" + (v.value0 + "'.");
      }
      ;
      if (v instanceof UnexpectedValue) {
        return "  Unexpected value " + (stringify(v.value0) + ".");
      }
      ;
      if (v instanceof AtIndex) {
        return "  At array index " + (show12(v.value0) + (":\n" + go2(v.value1)));
      }
      ;
      if (v instanceof AtKey) {
        return "  At object key " + (v.value0 + (":\n" + go2(v.value1)));
      }
      ;
      if (v instanceof Named) {
        return "  Under '" + (v.value0 + ("':\n" + go2(v.value1)));
      }
      ;
      if (v instanceof MissingValue) {
        return "  No value was found.";
      }
      ;
      throw new Error("Failed pattern match at Data.Codec.Argonaut (line 87, column 10 - line 93, column 45): " + [v.constructor.name]);
    };
    return "An error occurred while decoding a JSON value:\n" + go2(err);
  };
  var jsonPrimCodec = function(ty) {
    return function(f) {
      return basicCodec(function() {
        var $211 = maybe(new Left(new TypeMismatch2(ty)))(pure4);
        return function($212) {
          return $211(f($212));
        };
      }());
    };
  };
  var string = /* @__PURE__ */ jsonPrimCodec("String")(toString)(id);
  var json3 = /* @__PURE__ */ basicCodec(pure4)(/* @__PURE__ */ identity(categoryFn));
  var jobject = /* @__PURE__ */ jsonPrimCodec("Object")(toObject)(id);
  var object = function(name16) {
    return bihoistGCodec(function(r) {
      return composeKleisliFlipped3(function() {
        var $213 = lmap2(Named.create(name16));
        var $214 = runReaderT(r);
        return function($215) {
          return $213($214($215));
        };
      }())(decode(jobject));
    })(mapWriter(rmap3(function($216) {
      return id(fromFoldable4($216));
    })));
  };
  var jarray = /* @__PURE__ */ jsonPrimCodec("Array")(toArray)(id);
  var $$int = /* @__PURE__ */ jsonPrimCodec("Int")(/* @__PURE__ */ composeKleisliFlipped1(fromNumber)(toNumber))(function($217) {
    return id(toNumber2($217));
  });
  var $$boolean = /* @__PURE__ */ jsonPrimCodec("Boolean")(toBoolean)(id);
  var array = function(codec5) {
    var enc = function(xs) {
      return writer(new Tuple(xs, id(map13(encode4(codec5))(xs))));
    };
    var dec = function(j) {
      return bindFlipped5(function() {
        var $224 = traverse3(function(v) {
          return lmap2(AtIndex.create(v.value0))(decode(codec5)(v.value1));
        });
        var $225 = mapWithIndex(Tuple.create);
        return function($226) {
          return $224($225($226));
        };
      }())(decode(jarray)(j));
    };
    return new GCodec(dec, enc);
  };

  // output/Conduit.Data.Username/index.js
  var Username = function(x) {
    return x;
  };
  var toString2 = function(v) {
    return v;
  };
  var parse = function(v) {
    if (v === "") {
      return Nothing.value;
    }
    ;
    return new Just(v);
  };
  var eqUsername = {
    eq: function(x) {
      return function(y) {
        return x === y;
      };
    }
  };
  var codec = /* @__PURE__ */ dimap(/* @__PURE__ */ profunctorGCodec(/* @__PURE__ */ functorReaderT(functorEither))(/* @__PURE__ */ functorWriterT(functorIdentity)))(function(v) {
    return v;
  })(Username)(string);

  // output/Record.Unsafe.Union/foreign.js
  function unsafeUnionFn(r1, r2) {
    var copy2 = {};
    for (var k1 in r2) {
      if ({}.hasOwnProperty.call(r2, k1)) {
        copy2[k1] = r2[k1];
      }
    }
    for (var k2 in r1) {
      if ({}.hasOwnProperty.call(r1, k2)) {
        copy2[k2] = r1[k2];
      }
    }
    return copy2;
  }

  // output/Record/index.js
  var set = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l) {
          return function(b2) {
            return function(r) {
              return unsafeSet(reflectSymbol2(l))(b2)(r);
            };
          };
        };
      };
    };
  };
  var merge = function() {
    return function() {
      return function(l) {
        return function(r) {
          return unsafeUnionFn(l, r);
        };
      };
    };
  };
  var insert2 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l) {
          return function(a2) {
            return function(r) {
              return unsafeSet(reflectSymbol2(l))(a2)(r);
            };
          };
        };
      };
    };
  };
  var get3 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(l) {
        return function(r) {
          return unsafeGet(reflectSymbol2(l))(r);
        };
      };
    };
  };
  var $$delete3 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l) {
          return function(r) {
            return unsafeDelete(reflectSymbol2(l))(r);
          };
        };
      };
    };
  };

  // output/Data.Array.NonEmpty.Internal/foreign.js
  var traverse1Impl = function() {
    function Cont(fn) {
      this.fn = fn;
    }
    var emptyList = {};
    var ConsCell = function(head6, tail3) {
      this.head = head6;
      this.tail = tail3;
    };
    function finalCell(head6) {
      return new ConsCell(head6, emptyList);
    }
    function consList(x) {
      return function(xs) {
        return new ConsCell(x, xs);
      };
    }
    function listToArray(list2) {
      var arr = [];
      var xs = list2;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }
    return function(apply7) {
      return function(map58) {
        return function(f) {
          var buildFrom = function(x, ys) {
            return apply7(map58(consList)(f(x)))(ys);
          };
          var go2 = function(acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last4 = xs[currentLen - 1];
              return new Cont(function() {
                var built = go2(buildFrom(last4, acc), currentLen - 1, xs);
                return built;
              });
            }
          };
          return function(array2) {
            var acc = map58(finalCell)(f(array2[array2.length - 1]));
            var result = go2(acc, array2.length - 1, array2);
            while (result instanceof Cont) {
              result = result.fn();
            }
            return map58(listToArray)(result);
          };
        };
      };
    };
  }();

  // output/Data.Array.NonEmpty.Internal/index.js
  var NonEmptyArray = function(x) {
    return x;
  };
  var semigroupNonEmptyArray = semigroupArray;
  var functorNonEmptyArray = functorArray;
  var foldableNonEmptyArray = foldableArray;

  // output/Data.Array.NonEmpty/index.js
  var fromJust6 = /* @__PURE__ */ fromJust();
  var unsafeFromArray = NonEmptyArray;
  var toArray3 = function(v) {
    return v;
  };
  var snoc$prime = function(xs) {
    return function(x) {
      return unsafeFromArray(snoc(xs)(x));
    };
  };
  var snoc3 = function(xs) {
    return function(x) {
      return unsafeFromArray(snoc(toArray3(xs))(x));
    };
  };
  var singleton8 = function($108) {
    return unsafeFromArray(singleton2($108));
  };
  var fromArray = function(xs) {
    if (length(xs) > 0) {
      return new Just(unsafeFromArray(xs));
    }
    ;
    if (otherwise) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Data.Array.NonEmpty (line 157, column 1 - line 157, column 58): " + [xs.constructor.name]);
  };
  var cons$prime = function(x) {
    return function(xs) {
      return unsafeFromArray(cons2(x)(xs));
    };
  };
  var adaptMaybe = function(f) {
    return function($123) {
      return fromJust6(f(toArray3($123)));
    };
  };
  var head3 = /* @__PURE__ */ adaptMaybe(head);
  var init3 = /* @__PURE__ */ adaptMaybe(init);
  var last3 = /* @__PURE__ */ adaptMaybe(last);
  var tail2 = /* @__PURE__ */ adaptMaybe(tail);
  var adaptAny = function(f) {
    return function($125) {
      return f(toArray3($125));
    };
  };
  var unsafeAdapt = function(f) {
    var $126 = adaptAny(f);
    return function($127) {
      return unsafeFromArray($126($127));
    };
  };
  var cons4 = function(x) {
    return unsafeAdapt(cons2(x));
  };

  // output/Data.Lazy/foreign.js
  var defer2 = function(thunk) {
    var v = null;
    return function() {
      if (thunk === void 0)
        return v;
      v = thunk();
      thunk = void 0;
      return v;
    };
  };
  var force = function(l) {
    return l();
  };

  // output/Routing.Duplex.Types/index.js
  var emptyRouteState = {
    segments: [],
    params: [],
    hash: ""
  };

  // output/Routing.Duplex.Parser/index.js
  var $runtime_lazy4 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var fromJust7 = /* @__PURE__ */ fromJust();
  var map14 = /* @__PURE__ */ map(functorArray);
  var bimap2 = /* @__PURE__ */ bimap(bifunctorTuple);
  var lookup3 = /* @__PURE__ */ lookup(foldableArray)(eqString);
  var map15 = /* @__PURE__ */ map(functorNonEmptyArray);
  var map22 = /* @__PURE__ */ map(functorFn);
  var foldl2 = /* @__PURE__ */ foldl(foldableNonEmptyArray);
  var append3 = /* @__PURE__ */ append(semigroupNonEmptyArray);
  var Expected = /* @__PURE__ */ function() {
    function Expected2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Expected2.create = function(value0) {
      return function(value1) {
        return new Expected2(value0, value1);
      };
    };
    return Expected2;
  }();
  var ExpectedEndOfPath = /* @__PURE__ */ function() {
    function ExpectedEndOfPath2(value0) {
      this.value0 = value0;
    }
    ;
    ExpectedEndOfPath2.create = function(value0) {
      return new ExpectedEndOfPath2(value0);
    };
    return ExpectedEndOfPath2;
  }();
  var MissingParam = /* @__PURE__ */ function() {
    function MissingParam2(value0) {
      this.value0 = value0;
    }
    ;
    MissingParam2.create = function(value0) {
      return new MissingParam2(value0);
    };
    return MissingParam2;
  }();
  var EndOfPath = /* @__PURE__ */ function() {
    function EndOfPath2() {
    }
    ;
    EndOfPath2.value = new EndOfPath2();
    return EndOfPath2;
  }();
  var Fail = /* @__PURE__ */ function() {
    function Fail3(value0) {
      this.value0 = value0;
    }
    ;
    Fail3.create = function(value0) {
      return new Fail3(value0);
    };
    return Fail3;
  }();
  var Success = /* @__PURE__ */ function() {
    function Success3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Success3.create = function(value0) {
      return function(value1) {
        return new Success3(value0, value1);
      };
    };
    return Success3;
  }();
  var Alt = /* @__PURE__ */ function() {
    function Alt2(value0) {
      this.value0 = value0;
    }
    ;
    Alt2.create = function(value0) {
      return new Alt2(value0);
    };
    return Alt2;
  }();
  var Chomp = /* @__PURE__ */ function() {
    function Chomp2(value0) {
      this.value0 = value0;
    }
    ;
    Chomp2.create = function(value0) {
      return new Chomp2(value0);
    };
    return Chomp2;
  }();
  var Prefix = /* @__PURE__ */ function() {
    function Prefix2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Prefix2.create = function(value0) {
      return function(value1) {
        return new Prefix2(value0, value1);
      };
    };
    return Prefix2;
  }();
  var take5 = /* @__PURE__ */ function() {
    return new Chomp(function(state3) {
      var v = uncons(state3.segments);
      if (v instanceof Just) {
        return new Success({
          params: state3.params,
          hash: state3.hash,
          segments: v.value0.tail
        }, v.value0.head);
      }
      ;
      return new Fail(EndOfPath.value);
    });
  }();
  var prefix = /* @__PURE__ */ function() {
    return Prefix.create;
  }();
  var parsePath = /* @__PURE__ */ function() {
    var unsafeDecodeURIComponent = function($329) {
      return fromJust7($$decodeURIComponent($329));
    };
    var toRouteState = function(v) {
      return {
        segments: v.value0.value0,
        params: v.value0.value1,
        hash: v.value1
      };
    };
    var splitNonEmpty = function(v) {
      return function(v1) {
        if (v1 === "") {
          return [];
        }
        ;
        return split(v)(v1);
      };
    };
    var splitSegments = function() {
      var $330 = splitNonEmpty("/");
      return function($331) {
        return function(v) {
          if (v.length === 2 && (v[0] === "" && v[1] === "")) {
            return [""];
          }
          ;
          return map14(unsafeDecodeURIComponent)(v);
        }($330($331));
      };
    }();
    var splitAt4 = function(k) {
      return function(p2) {
        return function(str) {
          var v = indexOf(p2)(str);
          if (v instanceof Just) {
            return new Tuple(take2(v.value0)(str), drop3(v.value0 + length4(p2) | 0)(str));
          }
          ;
          if (v instanceof Nothing) {
            return k(str);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 185, column 5 - line 187, column 23): " + [v.constructor.name]);
        };
      };
    };
    var splitKeyValue = function() {
      var $332 = bimap2(unsafeDecodeURIComponent)(unsafeDecodeURIComponent);
      var $333 = splitAt4(flip(Tuple.create)(""))("=");
      return function($334) {
        return $332($333($334));
      };
    }();
    var splitParams = function() {
      var $335 = map14(splitKeyValue);
      var $336 = splitNonEmpty("&");
      return function($337) {
        return $335($336($337));
      };
    }();
    var splitPath = function() {
      var $338 = bimap2(splitSegments)(splitParams);
      var $339 = splitAt4(flip(Tuple.create)(""))("?");
      return function($340) {
        return $338($339($340));
      };
    }();
    var $341 = lmap(bifunctorTuple)(splitPath);
    var $342 = splitAt4(flip(Tuple.create)(""))("#");
    return function($343) {
      return toRouteState($341($342($343)));
    };
  }();
  var param = function(key2) {
    return new Chomp(function(state3) {
      var v = lookup3(key2)(state3.params);
      if (v instanceof Just) {
        return new Success(state3, v.value0);
      }
      ;
      return new Fail(new MissingParam(key2));
    });
  };
  var $$int2 = /* @__PURE__ */ function() {
    var $344 = maybe(new Left("Int"))(Right.create);
    return function($345) {
      return $344(fromString($345));
    };
  }();
  var functorRouteResult = {
    map: function(f) {
      return function(m) {
        if (m instanceof Fail) {
          return new Fail(m.value0);
        }
        ;
        if (m instanceof Success) {
          return new Success(m.value0, f(m.value1));
        }
        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map32 = /* @__PURE__ */ map(functorRouteResult);
  var functorRouteParser = {
    map: function(f) {
      return function(m) {
        if (m instanceof Alt) {
          return new Alt(map15(map(functorRouteParser)(f))(m.value0));
        }
        ;
        if (m instanceof Chomp) {
          return new Chomp(map22(map32(f))(m.value0));
        }
        ;
        if (m instanceof Prefix) {
          return new Prefix(m.value0, map(functorRouteParser)(f)(m.value1));
        }
        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map42 = /* @__PURE__ */ map(functorRouteParser);
  var end = /* @__PURE__ */ function() {
    return new Chomp(function(state3) {
      var v = head(state3.segments);
      if (v instanceof Nothing) {
        return new Success(state3, unit);
      }
      ;
      if (v instanceof Just) {
        return new Fail(new ExpectedEndOfPath(v.value0));
      }
      ;
      throw new Error("Failed pattern match at Routing.Duplex.Parser (line 256, column 3 - line 258, column 45): " + [v.constructor.name]);
    });
  }();
  var chompPrefix = function(pre2) {
    return function(state3) {
      var v = head(state3.segments);
      if (v instanceof Just && pre2 === v.value0) {
        return new Success({
          params: state3.params,
          hash: state3.hash,
          segments: drop(1)(state3.segments)
        }, unit);
      }
      ;
      if (v instanceof Just) {
        return new Fail(new Expected(pre2, v.value0));
      }
      ;
      return new Fail(EndOfPath.value);
    };
  };
  var $lazy_runRouteParser = /* @__PURE__ */ $runtime_lazy4("runRouteParser", "Routing.Duplex.Parser", function() {
    var goAlt = function(v) {
      return function(v1) {
        return function(v2) {
          if (v1 instanceof Fail) {
            return $lazy_runRouteParser(153)(v)(v2);
          }
          ;
          return v1;
        };
      };
    };
    var go2 = function($copy_state) {
      return function($copy_v) {
        var $tco_var_state = $copy_state;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(state3, v) {
          if (v instanceof Alt) {
            $tco_done = true;
            return foldl2(goAlt(state3))(new Fail(EndOfPath.value))(v.value0);
          }
          ;
          if (v instanceof Chomp) {
            $tco_done = true;
            return v.value0(state3);
          }
          ;
          if (v instanceof Prefix) {
            var v1 = chompPrefix(v.value0)(state3);
            if (v1 instanceof Fail) {
              $tco_done = true;
              return new Fail(v1.value0);
            }
            ;
            if (v1 instanceof Success) {
              $tco_var_state = v1.value0;
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 149, column 7 - line 151, column 40): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 145, column 14 - line 151, column 40): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_state, $copy_v);
        }
        ;
        return $tco_result;
      };
    };
    return go2;
  });
  var runRouteParser = /* @__PURE__ */ $lazy_runRouteParser(142);
  var run3 = function(p2) {
    var $346 = flip(runRouteParser)(p2);
    return function($347) {
      return function(v) {
        if (v instanceof Fail) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof Success) {
          return new Right(v.value1);
        }
        ;
        throw new Error("Failed pattern match at Routing.Duplex.Parser (line 190, column 49 - line 192, column 29): " + [v.constructor.name]);
      }($346(parsePath($347)));
    };
  };
  var as = function(print8) {
    return function(decode4) {
      return function(p2) {
        return new Chomp(function(state3) {
          var v = runRouteParser(state3)(p2);
          if (v instanceof Fail) {
            return new Fail(v.value0);
          }
          ;
          if (v instanceof Success) {
            var v1 = decode4(v.value1);
            if (v1 instanceof Left) {
              return new Fail(new Expected(v1.value0, print8(v.value1)));
            }
            ;
            if (v1 instanceof Right) {
              return new Success(v.value0, v1.value0);
            }
            ;
            throw new Error("Failed pattern match at Routing.Duplex.Parser (line 244, column 7 - line 246, column 36): " + [v1.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 241, column 3 - line 246, column 36): " + [v.constructor.name]);
        });
      };
    };
  };
  var applyRouteParser = {
    apply: function(fx) {
      return function(x) {
        return new Chomp(function(state3) {
          var v = runRouteParser(state3)(fx);
          if (v instanceof Fail) {
            return new Fail(v.value0);
          }
          ;
          if (v instanceof Success) {
            return map32(v.value1)(runRouteParser(v.value0)(x));
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 76, column 5 - line 78, column 56): " + [v.constructor.name]);
        });
      };
    },
    Functor0: function() {
      return functorRouteParser;
    }
  };
  var applicativeRouteParser = {
    pure: /* @__PURE__ */ function() {
      var $348 = flip(Success.create);
      return function($349) {
        return Chomp.create($348($349));
      };
    }(),
    Apply0: function() {
      return applyRouteParser;
    }
  };
  var pure5 = /* @__PURE__ */ pure(applicativeRouteParser);
  var altSnoc = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return snoc3(v)(v1);
      };
      if (v1 instanceof Prefix) {
        var $289 = last3(v);
        if ($289 instanceof Prefix) {
          var $290 = v1.value0 === $289.value0;
          if ($290) {
            return snoc$prime(init3(v))(new Prefix(v1.value0, alt(altRouteParser)($289.value1)(v1.value1)));
          }
          ;
          return v2(true);
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var altRouteParser = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Alt && v1 instanceof Alt) {
          return new Alt(altAppend(v.value0)(v1.value0));
        }
        ;
        if (v instanceof Alt) {
          return new Alt(altSnoc(v.value0)(v1));
        }
        ;
        if (v1 instanceof Alt) {
          return new Alt(altCons(v)(v1.value0));
        }
        ;
        if (v instanceof Prefix && (v1 instanceof Prefix && v.value0 === v1.value0)) {
          return new Prefix(v.value0, alt(altRouteParser)(v.value1)(v1.value1));
        }
        ;
        return new Alt(cons4(v)(singleton8(v1)));
      };
    },
    Functor0: function() {
      return functorRouteParser;
    }
  };
  var altCons = function(v) {
    return function(v1) {
      var v2 = function(v3) {
        return cons4(v)(v1);
      };
      if (v instanceof Prefix) {
        var $309 = head3(v1);
        if ($309 instanceof Prefix) {
          var $310 = v.value0 === $309.value0;
          if ($310) {
            return cons$prime(new Prefix(v.value0, alt(altRouteParser)(v.value1)($309.value1)))(tail2(v1));
          }
          ;
          return v2(true);
        }
        ;
        return v2(true);
      }
      ;
      return v2(true);
    };
  };
  var altAppend = function($copy_ls) {
    return function($copy_rs) {
      var $tco_var_ls = $copy_ls;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(ls, rs) {
        var v = function(v12) {
          if (otherwise) {
            return append3(ls)(rs);
          }
          ;
          throw new Error("Failed pattern match at Routing.Duplex.Parser (line 98, column 1 - line 101, column 32): " + [ls.constructor.name, rs.constructor.name]);
        };
        var $319 = last3(ls);
        if ($319 instanceof Prefix) {
          var $320 = head3(rs);
          if ($320 instanceof Prefix) {
            var $321 = $319.value0 === $320.value0;
            if ($321) {
              var rs$prime = cons$prime(new Prefix($319.value0, alt(altRouteParser)($319.value1)($320.value1)))(tail2(rs));
              var v1 = fromArray(init3(ls));
              if (v1 instanceof Just) {
                $tco_var_ls = v1.value0;
                $copy_rs = rs$prime;
                return;
              }
              ;
              if (v1 instanceof Nothing) {
                $tco_done = true;
                return rs$prime;
              }
              ;
              throw new Error("Failed pattern match at Routing.Duplex.Parser (line 110, column 9 - line 112, column 26): " + [v1.constructor.name]);
            }
            ;
            $tco_done = true;
            return v(true);
          }
          ;
          $tco_done = true;
          return v(true);
        }
        ;
        $tco_done = true;
        return v(true);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_ls, $copy_rs);
      }
      ;
      return $tco_result;
    };
  };
  var alt3 = /* @__PURE__ */ alt(altRouteParser);
  var $$default = /* @__PURE__ */ function() {
    var $350 = flip(alt3);
    return function($351) {
      return $350(pure5($351));
    };
  }();
  var optional = /* @__PURE__ */ function() {
    var $355 = $$default(Nothing.value);
    var $356 = map42(Just.create);
    return function($357) {
      return $355($356($357));
    };
  }();

  // output/Routing.Duplex.Printer/index.js
  var fromJust8 = /* @__PURE__ */ fromJust();
  var map16 = /* @__PURE__ */ map(functorArray);
  var semigroupRoutePrinter = {
    append: function(v) {
      return function(v1) {
        return function($33) {
          return v1(v($33));
        };
      };
    }
  };
  var put2 = function(str) {
    return function(state3) {
      return {
        params: state3.params,
        hash: state3.hash,
        segments: snoc(state3.segments)(str)
      };
    };
  };
  var printPath = function(v) {
    var unsafeEncodeURIComponent = function($35) {
      return fromJust8($$encodeURIComponent($35));
    };
    var printSegments = function(v1) {
      if (v1.length === 1 && v1[0] === "") {
        return "/";
      }
      ;
      return joinWith("/")(map16(unsafeEncodeURIComponent)(v1));
    };
    var printParam = function(v1) {
      return function(v2) {
        if (v2 === "") {
          return unsafeEncodeURIComponent(v1);
        }
        ;
        return unsafeEncodeURIComponent(v1) + ("=" + unsafeEncodeURIComponent(v2));
      };
    };
    var printParams = function(v1) {
      if (v1.length === 0) {
        return "";
      }
      ;
      return "?" + joinWith("&")(map16(uncurry(printParam))(v1));
    };
    var printHash = function(v1) {
      if (v1 === "") {
        return "";
      }
      ;
      return "#" + v1;
    };
    return printSegments(v.segments) + (printParams(v.params) + printHash(v.hash));
  };
  var param2 = function(key2) {
    return function(val) {
      return function(state3) {
        return {
          segments: state3.segments,
          hash: state3.hash,
          params: cons2(new Tuple(key2, val))(state3.params)
        };
      };
    };
  };
  var run4 = /* @__PURE__ */ function() {
    var $36 = applyFlipped(emptyRouteState);
    var $37 = unwrap();
    return function($38) {
      return printPath($36($37($38)));
    };
  }();
  var monoidRoutePRinter = {
    mempty: /* @__PURE__ */ identity(categoryFn),
    Semigroup0: function() {
      return semigroupRoutePrinter;
    }
  };

  // output/Routing.Duplex/index.js
  var append4 = /* @__PURE__ */ append(semigroupRoutePrinter);
  var applyFirst2 = /* @__PURE__ */ applyFirst(applyRouteParser);
  var pure6 = /* @__PURE__ */ pure(applicativeRouteParser);
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var apply3 = /* @__PURE__ */ apply(applyRouteParser);
  var map17 = /* @__PURE__ */ map(functorRouteParser);
  var foldMap2 = /* @__PURE__ */ foldMap(foldableMaybe)(monoidRoutePRinter);
  var mempty2 = /* @__PURE__ */ mempty(monoidRoutePRinter);
  var apply1 = /* @__PURE__ */ apply(applyFn);
  var map18 = /* @__PURE__ */ map(functorFn);
  var RouteDuplex = /* @__PURE__ */ function() {
    function RouteDuplex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RouteDuplex2.create = function(value0) {
      return function(value1) {
        return new RouteDuplex2(value0, value1);
      };
    };
    return RouteDuplex2;
  }();
  var suffix = function(v) {
    return function(s) {
      return new RouteDuplex(function(a2) {
        return append4(v.value0(a2))(put2(s));
      }, applyFirst2(v.value1)(prefix(s)(pure6(unit))));
    };
  };
  var string2 = identity11;
  var segment = /* @__PURE__ */ function() {
    return new RouteDuplex(put2, take5);
  }();
  var record2 = /* @__PURE__ */ function() {
    return new RouteDuplex(mempty(monoidFn(monoidRoutePRinter)), pure6({}));
  }();
  var prop = function(dictIsSymbol) {
    var get13 = get3(dictIsSymbol)();
    var insert13 = insert2(dictIsSymbol)()();
    return function() {
      return function() {
        return function() {
          return function(sym) {
            return function(v) {
              return function(v1) {
                return new RouteDuplex(function(r) {
                  return append4(v1.value0(r))(v.value0(get13(sym)(r)));
                }, apply3(map17(flip(insert13(sym)))(v1.value1))(v.value1));
              };
            };
          };
        };
      };
    };
  };
  var profunctorRouteDuplex = {
    dimap: function(f) {
      return function(g) {
        return function(v) {
          return new RouteDuplex(function($137) {
            return v.value0(f($137));
          }, map17(g)(v.value1));
        };
      };
    }
  };
  var print2 = function(v) {
    return function($138) {
      return run4(v.value0($138));
    };
  };
  var prefix2 = function(s) {
    return function(v) {
      return new RouteDuplex(function(a2) {
        return append4(put2(s))(v.value0(a2));
      }, prefix(s)(v.value1));
    };
  };
  var path = /* @__PURE__ */ function() {
    var $139 = flip(foldr(foldableArray)(prefix2));
    var $140 = split("/");
    return function($141) {
      return $139($140($141));
    };
  }();
  var root = /* @__PURE__ */ path("");
  var parse2 = function(v) {
    return run3(v.value1);
  };
  var params = function(dict) {
    return dict.params;
  };
  var param3 = function(p2) {
    return new RouteDuplex(param2(p2), param(p2));
  };
  var optional2 = function(v) {
    return new RouteDuplex(foldMap2(v.value0), optional(v.value1));
  };
  var functorRouteDuplex = {
    map: function(f) {
      return function(m) {
        return new RouteDuplex(m.value0, map17(f)(m.value1));
      };
    }
  };
  var end2 = function(v) {
    return new RouteDuplex(v.value0, applyFirst2(v.value1)(end));
  };
  var buildParamsNil = {
    buildParams: function(v) {
      return function(v1) {
        return identity11;
      };
    }
  };
  var buildParams = function(dict) {
    return dict.buildParams;
  };
  var buildParamsCons = function(dictIsSymbol) {
    var prop15 = prop(dictIsSymbol)()()();
    var get13 = get3(dictIsSymbol)();
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function() {
          return function() {
            return function(dictRouteDuplexBuildParams) {
              var buildParams1 = buildParams(dictRouteDuplexBuildParams);
              return {
                buildParams: function(v) {
                  return function(r) {
                    return function(prev) {
                      return buildParams1($$Proxy.value)(r)(prop15($$Proxy.value)(get13($$Proxy.value)(r)(param3(reflectSymbol2($$Proxy.value))))(prev));
                    };
                  };
                }
              };
            };
          };
        };
      };
    };
  };
  var routeDuplexParams = function() {
    return function(dictRouteDuplexBuildParams) {
      var buildParams1 = buildParams(dictRouteDuplexBuildParams);
      return {
        params: function(r) {
          return buildParams1($$Proxy.value)(r)(record2);
        }
      };
    };
  };
  var as2 = function(f) {
    return function(g) {
      return function(v) {
        return new RouteDuplex(function($142) {
          return v.value0(f($142));
        }, as(identity11)(g)(v.value1));
      };
    };
  };
  var $$int3 = /* @__PURE__ */ as2(/* @__PURE__ */ show(showInt))($$int2);
  var applyRouteDuplex = {
    apply: function(v) {
      return function(v1) {
        return new RouteDuplex(apply1(map18(append4)(v.value0))(v1.value0), apply3(v.value1)(v1.value1));
      };
    },
    Functor0: function() {
      return functorRouteDuplex;
    }
  };
  var applicativeRouteDuplex = {
    pure: /* @__PURE__ */ function() {
      var $143 = RouteDuplex.create($$const(mempty2));
      return function($144) {
        return $143(pure6($144));
      };
    }(),
    Apply0: function() {
      return applyRouteDuplex;
    }
  };

  // output/Routing.Duplex.Generic/index.js
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var append5 = /* @__PURE__ */ append(semigroupRoutePrinter);
  var apply4 = /* @__PURE__ */ apply(applyRouteParser);
  var map19 = /* @__PURE__ */ map(functorRouteParser);
  var alt4 = /* @__PURE__ */ alt(altRouteParser);
  var dimap2 = /* @__PURE__ */ dimap(profunctorRouteDuplex);
  var noArgs = /* @__PURE__ */ function() {
    return pure(applicativeRouteDuplex)(NoArguments.value);
  }();
  var gRouteProduct = {
    gRouteDuplexCtr: identity12
  };
  var gRouteNoArguments = {
    gRouteDuplexCtr: identity12
  };
  var gRouteDuplexCtr = function(dict) {
    return dict.gRouteDuplexCtr;
  };
  var product2 = function(dictGRouteDuplexCtr) {
    var gRouteDuplexCtr1 = gRouteDuplexCtr(dictGRouteDuplexCtr);
    return function(v) {
      return function(l) {
        var v1 = gRouteDuplexCtr1(l);
        var enc = function(v2) {
          return append5(v.value0(v2.value0))(v1.value0(v2.value1));
        };
        var dec = apply4(map19(Product.create)(map19(Argument)(v.value1)))(v1.value1);
        return new RouteDuplex(enc, dec);
      };
    };
  };
  var gRouteDuplex = function(dict) {
    return dict.gRouteDuplex;
  };
  var gRouteSum = function(dictGRouteDuplex) {
    var gRouteDuplex1 = gRouteDuplex(dictGRouteDuplex);
    return function(dictGRouteDuplex1) {
      var gRouteDuplex2 = gRouteDuplex(dictGRouteDuplex1);
      return {
        gRouteDuplex: function(r) {
          var v = gRouteDuplex1(r);
          var v1 = gRouteDuplex2(r);
          var enc = function(v2) {
            if (v2 instanceof Inl) {
              return v.value0(v2.value0);
            }
            ;
            if (v2 instanceof Inr) {
              return v1.value0(v2.value0);
            }
            ;
            throw new Error("Failed pattern match at Routing.Duplex.Generic (line 33, column 11 - line 35, column 22): " + [v2.constructor.name]);
          };
          var dec = alt4(map19(Inl.create)(v.value1))(map19(Inr.create)(v1.value1));
          return new RouteDuplex(enc, dec);
        }
      };
    };
  };
  var sum2 = function(dictGeneric) {
    var from4 = from(dictGeneric);
    var to2 = to(dictGeneric);
    return function(dictGRouteDuplex) {
      var $66 = dimap2(from4)(to2);
      var $67 = gRouteDuplex(dictGRouteDuplex);
      return function($68) {
        return $66($67($68));
      };
    };
  };
  var gRouteConstructor = function(dictIsSymbol) {
    var get13 = get3(dictIsSymbol)();
    return function() {
      return function(dictGRouteDuplexCtr) {
        var gRouteDuplexCtr1 = gRouteDuplexCtr(dictGRouteDuplexCtr);
        return {
          gRouteDuplex: function(r) {
            var v = end2(gRouteDuplexCtr1(get13($$Proxy.value)(r)));
            var enc = function(v1) {
              return v.value0(v1);
            };
            var dec = map19(Constructor)(v.value1);
            return new RouteDuplex(enc, dec);
          }
        };
      };
    };
  };
  var gRouteArgument = {
    gRouteDuplexCtr: identity12
  };
  var gRouteAll = {
    gRouteDuplexCtr: function(v) {
      return new RouteDuplex(function(v1) {
        return v.value0(v1);
      }, map19(Argument)(v.value1));
    }
  };

  // output/Routing.Duplex.Generic.Syntax/index.js
  var gsepStringRoute = function(dictGRouteDuplexCtr) {
    var gRouteDuplexCtr2 = gRouteDuplexCtr(dictGRouteDuplexCtr);
    return {
      gsep: function(a2) {
        var $15 = prefix2(a2);
        return function($16) {
          return $15(gRouteDuplexCtr2($16));
        };
      }
    };
  };
  var gsepRouteString = function(dictGRouteDuplexCtr) {
    return {
      gsep: function() {
        var $17 = gRouteDuplexCtr(dictGRouteDuplexCtr);
        return function($18) {
          return suffix($17($18));
        };
      }()
    };
  };
  var gsepProduct = function(dictGRouteDuplexCtr) {
    return {
      gsep: product2(dictGRouteDuplexCtr)
    };
  };
  var gsep = function(dict) {
    return dict.gsep;
  };
  var gparamsString = function(dictRouteDuplexParams) {
    var params2 = params(dictRouteDuplexParams);
    return {
      gparams: function(a2) {
        var $19 = prefix2(a2);
        return function($20) {
          return $19(params2($20));
        };
      }
    };
  };
  var gparams = function(dict) {
    return dict.gparams;
  };

  // output/Data.Map.Internal/index.js
  var Leaf = /* @__PURE__ */ function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  }();
  var Two = /* @__PURE__ */ function() {
    function Two2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Two2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Two2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Two2;
  }();
  var Three = /* @__PURE__ */ function() {
    function Three2(value0, value1, value22, value32, value42, value52, value62) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
    }
    ;
    Three2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return new Three2(value0, value1, value22, value32, value42, value52, value62);
                };
              };
            };
          };
        };
      };
    };
    return Three2;
  }();
  var TwoLeft = /* @__PURE__ */ function() {
    function TwoLeft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    TwoLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new TwoLeft2(value0, value1, value22);
        };
      };
    };
    return TwoLeft2;
  }();
  var TwoRight = /* @__PURE__ */ function() {
    function TwoRight2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    TwoRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new TwoRight2(value0, value1, value22);
        };
      };
    };
    return TwoRight2;
  }();
  var ThreeLeft = /* @__PURE__ */ function() {
    function ThreeLeft2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeLeft2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeLeft2;
  }();
  var ThreeMiddle = /* @__PURE__ */ function() {
    function ThreeMiddle2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeMiddle2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeMiddle2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeMiddle2;
  }();
  var ThreeRight = /* @__PURE__ */ function() {
    function ThreeRight2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeRight2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeRight2;
  }();
  var KickUp = /* @__PURE__ */ function() {
    function KickUp2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    KickUp2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new KickUp2(value0, value1, value22, value32);
          };
        };
      };
    };
    return KickUp2;
  }();
  var singleton9 = function(k) {
    return function(v) {
      return new Two(Leaf.value, k, v, Leaf.value);
    };
  };
  var toUnfoldable3 = function(dictUnfoldable) {
    var unfoldr3 = unfoldr(dictUnfoldable);
    return function(m) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof Leaf) {
              $copy_v = v.value1;
              return;
            }
            ;
            if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), v.value1));
            }
            ;
            if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), new Cons(v.value0.value3, v.value1)));
            }
            ;
            if (v.value0 instanceof Two) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton9(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, v.value1)));
              return;
            }
            ;
            if (v.value0 instanceof Three) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton9(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, new Cons(singleton9(v.value0.value4)(v.value0.value5), new Cons(v.value0.value6, v.value1)))));
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return unfoldr3(go2)(new Cons(m, Nil.value));
    };
  };
  var toAscArray = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
  var lookup4 = function(dictOrd) {
    var compare4 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Two) {
            var v2 = compare4(k)(v.value1);
            if (v2 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            if (v2 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          if (v instanceof Three) {
            var v3 = compare4(k)(v.value1);
            if (v3 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            var v4 = compare4(k)(v.value4);
            if (v4 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value5);
            }
            ;
            if (v3 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            if (v4 instanceof GT) {
              $copy_v = v.value6;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var fromZipper = function($copy_dictOrd) {
    return function($copy_v) {
      return function($copy_v1) {
        var $tco_var_dictOrd = $copy_dictOrd;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(dictOrd, v, v1) {
          if (v instanceof Nil) {
            $tco_done = true;
            return v1;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof TwoLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1, v.value0.value2);
              return;
            }
            ;
            if (v.value0 instanceof TwoRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1);
              return;
            }
            ;
            if (v.value0 instanceof ThreeLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeMiddle) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
  };
  var insert4 = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare4 = compare(dictOrd);
    return function(k) {
      return function(v) {
        var up = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v1 instanceof Nil) {
                $tco_done = true;
                return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
              }
              ;
              if (v1 instanceof Cons) {
                if (v1.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                }
                ;
                if (v1.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                }
                ;
                if (v1.value0 instanceof ThreeLeft) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeMiddle) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeRight) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        var down = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v2 instanceof Leaf) {
                $tco_done1 = true;
                return up(v1)(new KickUp(Leaf.value, k, v, Leaf.value));
              }
              ;
              if (v2 instanceof Two) {
                var v3 = compare4(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Two(v2.value0, k, v, v2.value3));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new TwoLeft(v2.value1, v2.value2, v2.value3), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new TwoRight(v2.value0, v2.value1, v2.value2), v1);
                $copy_v2 = v2.value3;
                return;
              }
              ;
              if (v2 instanceof Three) {
                var v3 = compare4(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, k, v, v2.value3, v2.value4, v2.value5, v2.value6));
                }
                ;
                var v4 = compare4(k)(v2.value4);
                if (v4 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, k, v, v2.value6));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeLeft(v2.value1, v2.value2, v2.value3, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                if (v3 instanceof GT && v4 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeMiddle(v2.value0, v2.value1, v2.value2, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value3;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new ThreeRight(v2.value0, v2.value1, v2.value2, v2.value3, v2.value4, v2.value5), v1);
                $copy_v2 = v2.value6;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        return down(Nil.value);
      };
    };
  };
  var pop2 = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare4 = compare(dictOrd);
    return function(k) {
      var up = function($copy_ctxs) {
        return function($copy_tree) {
          var $tco_var_ctxs = $copy_ctxs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(ctxs, tree) {
            if (ctxs instanceof Nil) {
              $tco_done = true;
              return tree;
            }
            ;
            if (ctxs instanceof Cons) {
              if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }
              ;
              $tco_done = true;
              return unsafeCrashWith("The impossible happened in partial function `up`.");
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): " + [ctxs.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
          }
          ;
          return $tco_result;
        };
      };
      var removeMaxNode = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
              $tco_done1 = true;
              return up(ctx)(Leaf.value);
            }
            ;
            if (m instanceof Two) {
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
              $tco_done1 = true;
              return up(new Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
            }
            ;
            if (m instanceof Three) {
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            $tco_done1 = true;
            return unsafeCrashWith("The impossible happened in partial function `removeMaxNode`.");
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      var maxNode = function($copy_m) {
        var $tco_done2 = false;
        var $tco_result;
        function $tco_loop(m) {
          if (m instanceof Two && m.value3 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value1,
              value: m.value2
            };
          }
          ;
          if (m instanceof Two) {
            $copy_m = m.value3;
            return;
          }
          ;
          if (m instanceof Three && m.value6 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value4,
              value: m.value5
            };
          }
          ;
          if (m instanceof Three) {
            $copy_m = m.value6;
            return;
          }
          ;
          $tco_done2 = true;
          return unsafeCrashWith("The impossible happened in partial function `maxNode`.");
        }
        ;
        while (!$tco_done2) {
          $tco_result = $tco_loop($copy_m);
        }
        ;
        return $tco_result;
      };
      var down = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done3 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Leaf) {
              $tco_done3 = true;
              return Nothing.value;
            }
            ;
            if (m instanceof Two) {
              var v = compare4(k)(m.value1);
              if (m.value3 instanceof Leaf && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, up(ctx)(Leaf.value)));
              }
              ;
              if (v instanceof EQ) {
                var max7 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new TwoLeft(max7.key, max7.value, m.value3), ctx))(m.value0)));
              }
              ;
              if (v instanceof LT) {
                $tco_var_ctx = new Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three) {
              var leaves = function() {
                if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                  return true;
                }
                ;
                return false;
              }();
              var v = compare4(k)(m.value4);
              var v3 = compare4(k)(m.value1);
              if (leaves && v3 instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, fromZipper1(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
              }
              ;
              if (leaves && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, fromZipper1(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
              }
              ;
              if (v3 instanceof EQ) {
                var max7 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new ThreeLeft(max7.key, max7.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
              }
              ;
              if (v instanceof EQ) {
                var max7 = maxNode(m.value3);
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, removeMaxNode(new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max7.key, max7.value, m.value6), ctx))(m.value3)));
              }
              ;
              if (v3 instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              if (v3 instanceof GT && v instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value3;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): " + [m.constructor.name]);
          }
          ;
          while (!$tco_done3) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      return down(Nil.value);
    };
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(f(m.value5)(foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldl: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty7 = mempty(dictMonoid);
      var append22 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty7;
          }
          ;
          if (m instanceof Two) {
            return append22(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append22(f(m.value2))(foldMap(foldableMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append22(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append22(f(m.value2))(append22(foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append22(f(m.value5))(foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): " + [m.constructor.name]);
        };
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty7 = mempty(dictMonoid);
      var append22 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty7;
          }
          ;
          if (m instanceof Two) {
            return append22(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append22(f(m.value1)(m.value2))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append22(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append22(f(m.value1)(m.value2))(append22(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append22(f(m.value4)(m.value5))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): " + [m.constructor.name]);
        };
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var foldrWithIndex2 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexMap);
  var keys2 = /* @__PURE__ */ function() {
    return foldrWithIndex2(function(k) {
      return function(v) {
        return function(acc) {
          return new Cons(k, acc);
        };
      };
    })(Nil.value);
  }();
  var eqMap = function(dictEq) {
    var eqTuple2 = eqTuple(dictEq);
    return function(dictEq1) {
      var eq15 = eq(eqArray(eqTuple2(dictEq1)));
      return {
        eq: function(m1) {
          return function(m2) {
            return eq15(toAscArray(m1))(toAscArray(m2));
          };
        }
      };
    };
  };
  var empty3 = /* @__PURE__ */ function() {
    return Leaf.value;
  }();
  var $$delete5 = function(dictOrd) {
    var pop12 = pop2(dictOrd);
    return function(k) {
      return function(m) {
        return maybe(m)(snd)(pop12(k)(m));
      };
    };
  };
  var alter = function(dictOrd) {
    var lookup13 = lookup4(dictOrd);
    var delete1 = $$delete5(dictOrd);
    var insert13 = insert4(dictOrd);
    return function(f) {
      return function(k) {
        return function(m) {
          var v = f(lookup13(k)(m));
          if (v instanceof Nothing) {
            return delete1(k)(m);
          }
          ;
          if (v instanceof Just) {
            return insert13(k)(v.value0)(m);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): " + [v.constructor.name]);
        };
      };
    };
  };

  // output/Data.Set/index.js
  var toList2 = function(v) {
    return keys2(v);
  };
  var toUnfoldable4 = function(dictUnfoldable) {
    var $127 = toUnfoldable2(dictUnfoldable);
    return function($128) {
      return $127(toList2($128));
    };
  };
  var insert5 = function(dictOrd) {
    var insert13 = insert4(dictOrd);
    return function(a2) {
      return function(v) {
        return insert13(a2)(unit)(v);
      };
    };
  };
  var eqSet = function(dictEq) {
    var eq11 = eq(eqMap(dictEq)(eqUnit));
    return {
      eq: function(v) {
        return function(v1) {
          return eq11(v)(v1);
        };
      }
    };
  };
  var empty4 = empty3;
  var fromFoldable5 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictOrd) {
      var insert13 = insert5(dictOrd);
      return foldl22(function(m) {
        return function(a2) {
          return insert13(a2)(m);
        };
      })(empty4);
    };
  };
  var $$delete6 = function(dictOrd) {
    var delete1 = $$delete5(dictOrd);
    return function(a2) {
      return function(v) {
        return delete1(a2)(v);
      };
    };
  };

  // output/Data.Char/index.js
  var toCharCode2 = /* @__PURE__ */ fromEnum(boundedEnumChar);

  // output/Data.CodePoint.Unicode.Internal/index.js
  var unsafeIndex2 = /* @__PURE__ */ unsafeIndex();
  var elemIndex2 = /* @__PURE__ */ elemIndex(eqInt);
  var NUMCAT_LU = /* @__PURE__ */ function() {
    function NUMCAT_LU2() {
    }
    ;
    NUMCAT_LU2.value = new NUMCAT_LU2();
    return NUMCAT_LU2;
  }();
  var NUMCAT_LL = /* @__PURE__ */ function() {
    function NUMCAT_LL2() {
    }
    ;
    NUMCAT_LL2.value = new NUMCAT_LL2();
    return NUMCAT_LL2;
  }();
  var NUMCAT_LT = /* @__PURE__ */ function() {
    function NUMCAT_LT2() {
    }
    ;
    NUMCAT_LT2.value = new NUMCAT_LT2();
    return NUMCAT_LT2;
  }();
  var NUMCAT_LM = /* @__PURE__ */ function() {
    function NUMCAT_LM2() {
    }
    ;
    NUMCAT_LM2.value = new NUMCAT_LM2();
    return NUMCAT_LM2;
  }();
  var NUMCAT_LO = /* @__PURE__ */ function() {
    function NUMCAT_LO2() {
    }
    ;
    NUMCAT_LO2.value = new NUMCAT_LO2();
    return NUMCAT_LO2;
  }();
  var NUMCAT_MN = /* @__PURE__ */ function() {
    function NUMCAT_MN2() {
    }
    ;
    NUMCAT_MN2.value = new NUMCAT_MN2();
    return NUMCAT_MN2;
  }();
  var NUMCAT_MC = /* @__PURE__ */ function() {
    function NUMCAT_MC2() {
    }
    ;
    NUMCAT_MC2.value = new NUMCAT_MC2();
    return NUMCAT_MC2;
  }();
  var NUMCAT_ME = /* @__PURE__ */ function() {
    function NUMCAT_ME2() {
    }
    ;
    NUMCAT_ME2.value = new NUMCAT_ME2();
    return NUMCAT_ME2;
  }();
  var NUMCAT_ND = /* @__PURE__ */ function() {
    function NUMCAT_ND2() {
    }
    ;
    NUMCAT_ND2.value = new NUMCAT_ND2();
    return NUMCAT_ND2;
  }();
  var NUMCAT_NL = /* @__PURE__ */ function() {
    function NUMCAT_NL2() {
    }
    ;
    NUMCAT_NL2.value = new NUMCAT_NL2();
    return NUMCAT_NL2;
  }();
  var NUMCAT_NO = /* @__PURE__ */ function() {
    function NUMCAT_NO2() {
    }
    ;
    NUMCAT_NO2.value = new NUMCAT_NO2();
    return NUMCAT_NO2;
  }();
  var NUMCAT_PC = /* @__PURE__ */ function() {
    function NUMCAT_PC2() {
    }
    ;
    NUMCAT_PC2.value = new NUMCAT_PC2();
    return NUMCAT_PC2;
  }();
  var NUMCAT_PD = /* @__PURE__ */ function() {
    function NUMCAT_PD2() {
    }
    ;
    NUMCAT_PD2.value = new NUMCAT_PD2();
    return NUMCAT_PD2;
  }();
  var NUMCAT_PS = /* @__PURE__ */ function() {
    function NUMCAT_PS2() {
    }
    ;
    NUMCAT_PS2.value = new NUMCAT_PS2();
    return NUMCAT_PS2;
  }();
  var NUMCAT_PE = /* @__PURE__ */ function() {
    function NUMCAT_PE2() {
    }
    ;
    NUMCAT_PE2.value = new NUMCAT_PE2();
    return NUMCAT_PE2;
  }();
  var NUMCAT_PI = /* @__PURE__ */ function() {
    function NUMCAT_PI2() {
    }
    ;
    NUMCAT_PI2.value = new NUMCAT_PI2();
    return NUMCAT_PI2;
  }();
  var NUMCAT_PF = /* @__PURE__ */ function() {
    function NUMCAT_PF2() {
    }
    ;
    NUMCAT_PF2.value = new NUMCAT_PF2();
    return NUMCAT_PF2;
  }();
  var NUMCAT_PO = /* @__PURE__ */ function() {
    function NUMCAT_PO2() {
    }
    ;
    NUMCAT_PO2.value = new NUMCAT_PO2();
    return NUMCAT_PO2;
  }();
  var NUMCAT_SM = /* @__PURE__ */ function() {
    function NUMCAT_SM2() {
    }
    ;
    NUMCAT_SM2.value = new NUMCAT_SM2();
    return NUMCAT_SM2;
  }();
  var NUMCAT_SC = /* @__PURE__ */ function() {
    function NUMCAT_SC2() {
    }
    ;
    NUMCAT_SC2.value = new NUMCAT_SC2();
    return NUMCAT_SC2;
  }();
  var NUMCAT_SK = /* @__PURE__ */ function() {
    function NUMCAT_SK2() {
    }
    ;
    NUMCAT_SK2.value = new NUMCAT_SK2();
    return NUMCAT_SK2;
  }();
  var NUMCAT_SO = /* @__PURE__ */ function() {
    function NUMCAT_SO2() {
    }
    ;
    NUMCAT_SO2.value = new NUMCAT_SO2();
    return NUMCAT_SO2;
  }();
  var NUMCAT_ZS = /* @__PURE__ */ function() {
    function NUMCAT_ZS2() {
    }
    ;
    NUMCAT_ZS2.value = new NUMCAT_ZS2();
    return NUMCAT_ZS2;
  }();
  var NUMCAT_ZL = /* @__PURE__ */ function() {
    function NUMCAT_ZL2() {
    }
    ;
    NUMCAT_ZL2.value = new NUMCAT_ZL2();
    return NUMCAT_ZL2;
  }();
  var NUMCAT_ZP = /* @__PURE__ */ function() {
    function NUMCAT_ZP2() {
    }
    ;
    NUMCAT_ZP2.value = new NUMCAT_ZP2();
    return NUMCAT_ZP2;
  }();
  var NUMCAT_CC = /* @__PURE__ */ function() {
    function NUMCAT_CC2() {
    }
    ;
    NUMCAT_CC2.value = new NUMCAT_CC2();
    return NUMCAT_CC2;
  }();
  var NUMCAT_CF = /* @__PURE__ */ function() {
    function NUMCAT_CF2() {
    }
    ;
    NUMCAT_CF2.value = new NUMCAT_CF2();
    return NUMCAT_CF2;
  }();
  var NUMCAT_CS = /* @__PURE__ */ function() {
    function NUMCAT_CS2() {
    }
    ;
    NUMCAT_CS2.value = new NUMCAT_CS2();
    return NUMCAT_CS2;
  }();
  var NUMCAT_CO = /* @__PURE__ */ function() {
    function NUMCAT_CO2() {
    }
    ;
    NUMCAT_CO2.value = new NUMCAT_CO2();
    return NUMCAT_CO2;
  }();
  var NUMCAT_CN = /* @__PURE__ */ function() {
    function NUMCAT_CN2() {
    }
    ;
    NUMCAT_CN2.value = new NUMCAT_CN2();
    return NUMCAT_CN2;
  }();
  var numLat1Blocks = 63;
  var numBlocks = 3396;
  var gencatZS = 2;
  var rule1 = /* @__PURE__ */ function() {
    return {
      category: gencatZS,
      unicodeCat: NUMCAT_ZS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatZP = 67108864;
  var rule162 = /* @__PURE__ */ function() {
    return {
      category: gencatZP,
      unicodeCat: NUMCAT_ZP.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatZL = 33554432;
  var rule161 = /* @__PURE__ */ function() {
    return {
      category: gencatZL,
      unicodeCat: NUMCAT_ZL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSO = 8192;
  var rule13 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule170 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 1,
      updist: 0,
      lowdist: 26,
      titledist: 0
    };
  }();
  var rule171 = /* @__PURE__ */ function() {
    return {
      category: gencatSO,
      unicodeCat: NUMCAT_SO.value,
      possible: 1,
      updist: -26 | 0,
      lowdist: 0,
      titledist: -26 | 0
    };
  }();
  var gencatSM = 64;
  var rule6 = /* @__PURE__ */ function() {
    return {
      category: gencatSM,
      unicodeCat: NUMCAT_SM.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSK = 1024;
  var rule10 = /* @__PURE__ */ function() {
    return {
      category: gencatSK,
      unicodeCat: NUMCAT_SK.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatSC = 8;
  var rule3 = /* @__PURE__ */ function() {
    return {
      category: gencatSC,
      unicodeCat: NUMCAT_SC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPS = 16;
  var rule4 = /* @__PURE__ */ function() {
    return {
      category: gencatPS,
      unicodeCat: NUMCAT_PS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPO = 4;
  var rule2 = /* @__PURE__ */ function() {
    return {
      category: gencatPO,
      unicodeCat: NUMCAT_PO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPI = 32768;
  var rule15 = /* @__PURE__ */ function() {
    return {
      category: gencatPI,
      unicodeCat: NUMCAT_PI.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPF = 262144;
  var rule19 = /* @__PURE__ */ function() {
    return {
      category: gencatPF,
      unicodeCat: NUMCAT_PF.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPE = 32;
  var rule5 = /* @__PURE__ */ function() {
    return {
      category: gencatPE,
      unicodeCat: NUMCAT_PE.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPD = 128;
  var rule7 = /* @__PURE__ */ function() {
    return {
      category: gencatPD,
      unicodeCat: NUMCAT_PD.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatPC = 2048;
  var rule11 = /* @__PURE__ */ function() {
    return {
      category: gencatPC,
      unicodeCat: NUMCAT_PC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatNO = 131072;
  var rule17 = /* @__PURE__ */ function() {
    return {
      category: gencatNO,
      unicodeCat: NUMCAT_NO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatNL = 16777216;
  var rule128 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule168 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 1,
      updist: 0,
      lowdist: 16,
      titledist: 0
    };
  }();
  var rule169 = /* @__PURE__ */ function() {
    return {
      category: gencatNL,
      unicodeCat: NUMCAT_NL.value,
      possible: 1,
      updist: -16 | 0,
      lowdist: 0,
      titledist: -16 | 0
    };
  }();
  var gencatND = 256;
  var rule8 = /* @__PURE__ */ function() {
    return {
      category: gencatND,
      unicodeCat: NUMCAT_ND.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatMN = 2097152;
  var rule92 = /* @__PURE__ */ function() {
    return {
      category: gencatMN,
      unicodeCat: NUMCAT_MN.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule93 = /* @__PURE__ */ function() {
    return {
      category: gencatMN,
      unicodeCat: NUMCAT_MN.value,
      possible: 1,
      updist: 84,
      lowdist: 0,
      titledist: 84
    };
  }();
  var gencatME = 4194304;
  var rule119 = /* @__PURE__ */ function() {
    return {
      category: gencatME,
      unicodeCat: NUMCAT_ME.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatMC = 8388608;
  var rule124 = /* @__PURE__ */ function() {
    return {
      category: gencatMC,
      unicodeCat: NUMCAT_MC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLU = 512;
  var nullrule = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_CN.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule104 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 8,
      titledist: 0
    };
  }();
  var rule107 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule115 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -60 | 0,
      titledist: 0
    };
  }();
  var rule117 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7 | 0,
      titledist: 0
    };
  }();
  var rule118 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 80,
      titledist: 0
    };
  }();
  var rule120 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 15,
      titledist: 0
    };
  }();
  var rule122 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 48,
      titledist: 0
    };
  }();
  var rule125 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 7264,
      titledist: 0
    };
  }();
  var rule127 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 38864,
      titledist: 0
    };
  }();
  var rule137 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -3008 | 0,
      titledist: 0
    };
  }();
  var rule142 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7615 | 0,
      titledist: 0
    };
  }();
  var rule144 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8 | 0,
      titledist: 0
    };
  }();
  var rule153 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -74 | 0,
      titledist: 0
    };
  }();
  var rule156 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -86 | 0,
      titledist: 0
    };
  }();
  var rule157 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -100 | 0,
      titledist: 0
    };
  }();
  var rule158 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -112 | 0,
      titledist: 0
    };
  }();
  var rule159 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -128 | 0,
      titledist: 0
    };
  }();
  var rule160 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -126 | 0,
      titledist: 0
    };
  }();
  var rule163 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -7517 | 0,
      titledist: 0
    };
  }();
  var rule164 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8383 | 0,
      titledist: 0
    };
  }();
  var rule165 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -8262 | 0,
      titledist: 0
    };
  }();
  var rule166 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 28,
      titledist: 0
    };
  }();
  var rule172 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10743 | 0,
      titledist: 0
    };
  }();
  var rule173 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -3814 | 0,
      titledist: 0
    };
  }();
  var rule174 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10727 | 0,
      titledist: 0
    };
  }();
  var rule177 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10780 | 0,
      titledist: 0
    };
  }();
  var rule178 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10749 | 0,
      titledist: 0
    };
  }();
  var rule179 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10783 | 0,
      titledist: 0
    };
  }();
  var rule180 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10782 | 0,
      titledist: 0
    };
  }();
  var rule181 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -10815 | 0,
      titledist: 0
    };
  }();
  var rule183 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -35332 | 0,
      titledist: 0
    };
  }();
  var rule184 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42280 | 0,
      titledist: 0
    };
  }();
  var rule186 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42308 | 0,
      titledist: 0
    };
  }();
  var rule187 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42319 | 0,
      titledist: 0
    };
  }();
  var rule188 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42315 | 0,
      titledist: 0
    };
  }();
  var rule189 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42305 | 0,
      titledist: 0
    };
  }();
  var rule190 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42258 | 0,
      titledist: 0
    };
  }();
  var rule191 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42282 | 0,
      titledist: 0
    };
  }();
  var rule192 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42261 | 0,
      titledist: 0
    };
  }();
  var rule193 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 928,
      titledist: 0
    };
  }();
  var rule194 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -48 | 0,
      titledist: 0
    };
  }();
  var rule195 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -42307 | 0,
      titledist: 0
    };
  }();
  var rule196 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -35384 | 0,
      titledist: 0
    };
  }();
  var rule201 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 40,
      titledist: 0
    };
  }();
  var rule203 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 34,
      titledist: 0
    };
  }();
  var rule22 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 1,
      titledist: 0
    };
  }();
  var rule24 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -199 | 0,
      titledist: 0
    };
  }();
  var rule26 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -121 | 0,
      titledist: 0
    };
  }();
  var rule29 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 210,
      titledist: 0
    };
  }();
  var rule30 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 206,
      titledist: 0
    };
  }();
  var rule31 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 205,
      titledist: 0
    };
  }();
  var rule32 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 79,
      titledist: 0
    };
  }();
  var rule33 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 202,
      titledist: 0
    };
  }();
  var rule34 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 203,
      titledist: 0
    };
  }();
  var rule35 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 207,
      titledist: 0
    };
  }();
  var rule37 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 211,
      titledist: 0
    };
  }();
  var rule38 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 209,
      titledist: 0
    };
  }();
  var rule40 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 213,
      titledist: 0
    };
  }();
  var rule42 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 214,
      titledist: 0
    };
  }();
  var rule43 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 218,
      titledist: 0
    };
  }();
  var rule44 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 217,
      titledist: 0
    };
  }();
  var rule45 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 219,
      titledist: 0
    };
  }();
  var rule47 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 2,
      titledist: 1
    };
  }();
  var rule51 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -97 | 0,
      titledist: 0
    };
  }();
  var rule52 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -56 | 0,
      titledist: 0
    };
  }();
  var rule53 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -130 | 0,
      titledist: 0
    };
  }();
  var rule54 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 10795,
      titledist: 0
    };
  }();
  var rule55 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -163 | 0,
      titledist: 0
    };
  }();
  var rule56 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 10792,
      titledist: 0
    };
  }();
  var rule58 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: -195 | 0,
      titledist: 0
    };
  }();
  var rule59 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 69,
      titledist: 0
    };
  }();
  var rule60 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 71,
      titledist: 0
    };
  }();
  var rule9 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 32,
      titledist: 0
    };
  }();
  var rule94 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 116,
      titledist: 0
    };
  }();
  var rule95 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 38,
      titledist: 0
    };
  }();
  var rule96 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 37,
      titledist: 0
    };
  }();
  var rule97 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 64,
      titledist: 0
    };
  }();
  var rule98 = /* @__PURE__ */ function() {
    return {
      category: gencatLU,
      unicodeCat: NUMCAT_LU.value,
      possible: 1,
      updist: 0,
      lowdist: 63,
      titledist: 0
    };
  }();
  var gencatLT = 524288;
  var rule151 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: 0,
      lowdist: -8 | 0,
      titledist: 0
    };
  }();
  var rule154 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: 0,
      lowdist: -9 | 0,
      titledist: 0
    };
  }();
  var rule48 = /* @__PURE__ */ function() {
    return {
      category: gencatLT,
      unicodeCat: NUMCAT_LT.value,
      possible: 1,
      updist: -1 | 0,
      lowdist: 1,
      titledist: 0
    };
  }();
  var gencatLO = 16384;
  var rule14 = /* @__PURE__ */ function() {
    return {
      category: gencatLO,
      unicodeCat: NUMCAT_LO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLM = 1048576;
  var rule91 = /* @__PURE__ */ function() {
    return {
      category: gencatLM,
      unicodeCat: NUMCAT_LM.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatLL = 4096;
  var rule100 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -37 | 0,
      lowdist: 0,
      titledist: -37 | 0
    };
  }();
  var rule101 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -31 | 0,
      lowdist: 0,
      titledist: -31 | 0
    };
  }();
  var rule102 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -64 | 0,
      lowdist: 0,
      titledist: -64 | 0
    };
  }();
  var rule103 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -63 | 0,
      lowdist: 0,
      titledist: -63 | 0
    };
  }();
  var rule105 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -62 | 0,
      lowdist: 0,
      titledist: -62 | 0
    };
  }();
  var rule106 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -57 | 0,
      lowdist: 0,
      titledist: -57 | 0
    };
  }();
  var rule108 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -47 | 0,
      lowdist: 0,
      titledist: -47 | 0
    };
  }();
  var rule109 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -54 | 0,
      lowdist: 0,
      titledist: -54 | 0
    };
  }();
  var rule110 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -8 | 0,
      lowdist: 0,
      titledist: -8 | 0
    };
  }();
  var rule111 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -86 | 0,
      lowdist: 0,
      titledist: -86 | 0
    };
  }();
  var rule112 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -80 | 0,
      lowdist: 0,
      titledist: -80 | 0
    };
  }();
  var rule113 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 7,
      lowdist: 0,
      titledist: 7
    };
  }();
  var rule114 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -116 | 0,
      lowdist: 0,
      titledist: -116 | 0
    };
  }();
  var rule116 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -96 | 0,
      lowdist: 0,
      titledist: -96 | 0
    };
  }();
  var rule12 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -32 | 0,
      lowdist: 0,
      titledist: -32 | 0
    };
  }();
  var rule121 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -15 | 0,
      lowdist: 0,
      titledist: -15 | 0
    };
  }();
  var rule123 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -48 | 0,
      lowdist: 0,
      titledist: -48 | 0
    };
  }();
  var rule126 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 3008,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule129 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6254 | 0,
      lowdist: 0,
      titledist: -6254 | 0
    };
  }();
  var rule130 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6253 | 0,
      lowdist: 0,
      titledist: -6253 | 0
    };
  }();
  var rule131 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6244 | 0,
      lowdist: 0,
      titledist: -6244 | 0
    };
  }();
  var rule132 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6242 | 0,
      lowdist: 0,
      titledist: -6242 | 0
    };
  }();
  var rule133 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6243 | 0,
      lowdist: 0,
      titledist: -6243 | 0
    };
  }();
  var rule134 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6236 | 0,
      lowdist: 0,
      titledist: -6236 | 0
    };
  }();
  var rule135 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -6181 | 0,
      lowdist: 0,
      titledist: -6181 | 0
    };
  }();
  var rule136 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35266,
      lowdist: 0,
      titledist: 35266
    };
  }();
  var rule138 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35332,
      lowdist: 0,
      titledist: 35332
    };
  }();
  var rule139 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 3814,
      lowdist: 0,
      titledist: 3814
    };
  }();
  var rule140 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 35384,
      lowdist: 0,
      titledist: 35384
    };
  }();
  var rule141 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -59 | 0,
      lowdist: 0,
      titledist: -59 | 0
    };
  }();
  var rule143 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 8,
      lowdist: 0,
      titledist: 8
    };
  }();
  var rule145 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 74,
      lowdist: 0,
      titledist: 74
    };
  }();
  var rule146 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 86,
      lowdist: 0,
      titledist: 86
    };
  }();
  var rule147 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 100,
      lowdist: 0,
      titledist: 100
    };
  }();
  var rule148 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 128,
      lowdist: 0,
      titledist: 128
    };
  }();
  var rule149 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 112,
      lowdist: 0,
      titledist: 112
    };
  }();
  var rule150 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 126,
      lowdist: 0,
      titledist: 126
    };
  }();
  var rule152 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 9,
      lowdist: 0,
      titledist: 9
    };
  }();
  var rule155 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -7205 | 0,
      lowdist: 0,
      titledist: -7205 | 0
    };
  }();
  var rule167 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -28 | 0,
      lowdist: 0,
      titledist: -28 | 0
    };
  }();
  var rule175 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -10795 | 0,
      lowdist: 0,
      titledist: -10795 | 0
    };
  }();
  var rule176 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -10792 | 0,
      lowdist: 0,
      titledist: -10792 | 0
    };
  }();
  var rule18 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 743,
      lowdist: 0,
      titledist: 743
    };
  }();
  var rule182 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -7264 | 0,
      lowdist: 0,
      titledist: -7264 | 0
    };
  }();
  var rule185 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 48,
      lowdist: 0,
      titledist: 48
    };
  }();
  var rule197 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -928 | 0,
      lowdist: 0,
      titledist: -928 | 0
    };
  }();
  var rule198 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -38864 | 0,
      lowdist: 0,
      titledist: -38864 | 0
    };
  }();
  var rule20 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var rule202 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -40 | 0,
      lowdist: 0,
      titledist: -40 | 0
    };
  }();
  var rule204 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -34 | 0,
      lowdist: 0,
      titledist: -34 | 0
    };
  }();
  var rule21 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 121,
      lowdist: 0,
      titledist: 121
    };
  }();
  var rule23 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -1 | 0,
      lowdist: 0,
      titledist: -1 | 0
    };
  }();
  var rule25 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -232 | 0,
      lowdist: 0,
      titledist: -232 | 0
    };
  }();
  var rule27 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -300 | 0,
      lowdist: 0,
      titledist: -300 | 0
    };
  }();
  var rule28 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 195,
      lowdist: 0,
      titledist: 195
    };
  }();
  var rule36 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 97,
      lowdist: 0,
      titledist: 97
    };
  }();
  var rule39 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 163,
      lowdist: 0,
      titledist: 163
    };
  }();
  var rule41 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 130,
      lowdist: 0,
      titledist: 130
    };
  }();
  var rule46 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 56,
      lowdist: 0,
      titledist: 56
    };
  }();
  var rule49 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -2 | 0,
      lowdist: 0,
      titledist: -1 | 0
    };
  }();
  var rule50 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -79 | 0,
      lowdist: 0,
      titledist: -79 | 0
    };
  }();
  var rule57 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10815,
      lowdist: 0,
      titledist: 10815
    };
  }();
  var rule61 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10783,
      lowdist: 0,
      titledist: 10783
    };
  }();
  var rule62 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10780,
      lowdist: 0,
      titledist: 10780
    };
  }();
  var rule63 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10782,
      lowdist: 0,
      titledist: 10782
    };
  }();
  var rule64 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -210 | 0,
      lowdist: 0,
      titledist: -210 | 0
    };
  }();
  var rule65 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -206 | 0,
      lowdist: 0,
      titledist: -206 | 0
    };
  }();
  var rule66 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -205 | 0,
      lowdist: 0,
      titledist: -205 | 0
    };
  }();
  var rule67 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -202 | 0,
      lowdist: 0,
      titledist: -202 | 0
    };
  }();
  var rule68 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -203 | 0,
      lowdist: 0,
      titledist: -203 | 0
    };
  }();
  var rule69 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42319,
      lowdist: 0,
      titledist: 42319
    };
  }();
  var rule70 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42315,
      lowdist: 0,
      titledist: 42315
    };
  }();
  var rule71 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -207 | 0,
      lowdist: 0,
      titledist: -207 | 0
    };
  }();
  var rule72 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42280,
      lowdist: 0,
      titledist: 42280
    };
  }();
  var rule73 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42308,
      lowdist: 0,
      titledist: 42308
    };
  }();
  var rule74 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -209 | 0,
      lowdist: 0,
      titledist: -209 | 0
    };
  }();
  var rule75 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -211 | 0,
      lowdist: 0,
      titledist: -211 | 0
    };
  }();
  var rule76 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10743,
      lowdist: 0,
      titledist: 10743
    };
  }();
  var rule77 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42305,
      lowdist: 0,
      titledist: 42305
    };
  }();
  var rule78 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10749,
      lowdist: 0,
      titledist: 10749
    };
  }();
  var rule79 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -213 | 0,
      lowdist: 0,
      titledist: -213 | 0
    };
  }();
  var rule80 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -214 | 0,
      lowdist: 0,
      titledist: -214 | 0
    };
  }();
  var rule81 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 10727,
      lowdist: 0,
      titledist: 10727
    };
  }();
  var rule82 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -218 | 0,
      lowdist: 0,
      titledist: -218 | 0
    };
  }();
  var rule83 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42307,
      lowdist: 0,
      titledist: 42307
    };
  }();
  var rule84 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42282,
      lowdist: 0,
      titledist: 42282
    };
  }();
  var rule85 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -69 | 0,
      lowdist: 0,
      titledist: -69 | 0
    };
  }();
  var rule86 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -217 | 0,
      lowdist: 0,
      titledist: -217 | 0
    };
  }();
  var rule87 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -71 | 0,
      lowdist: 0,
      titledist: -71 | 0
    };
  }();
  var rule88 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -219 | 0,
      lowdist: 0,
      titledist: -219 | 0
    };
  }();
  var rule89 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42261,
      lowdist: 0,
      titledist: 42261
    };
  }();
  var rule90 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: 42258,
      lowdist: 0,
      titledist: 42258
    };
  }();
  var rule99 = /* @__PURE__ */ function() {
    return {
      category: gencatLL,
      unicodeCat: NUMCAT_LL.value,
      possible: 1,
      updist: -38 | 0,
      lowdist: 0,
      titledist: -38 | 0
    };
  }();
  var gencatCS = 134217728;
  var rule199 = /* @__PURE__ */ function() {
    return {
      category: gencatCS,
      unicodeCat: NUMCAT_CS.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCO = 268435456;
  var rule200 = /* @__PURE__ */ function() {
    return {
      category: gencatCO,
      unicodeCat: NUMCAT_CO.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCF = 65536;
  var rule16 = /* @__PURE__ */ function() {
    return {
      category: gencatCF,
      unicodeCat: NUMCAT_CF.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var gencatCC = 1;
  var rule0 = /* @__PURE__ */ function() {
    return {
      category: gencatCC,
      unicodeCat: NUMCAT_CC.value,
      possible: 0,
      updist: 0,
      lowdist: 0,
      titledist: 0
    };
  }();
  var bsearch = function(a2) {
    return function(array2) {
      return function(size5) {
        return function(compare4) {
          var go2 = function($copy_i) {
            return function($copy_k) {
              var $tco_var_i = $copy_i;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(i2, k) {
                if (i2 > k || i2 >= length(array2)) {
                  $tco_done = true;
                  return Nothing.value;
                }
                ;
                if (otherwise) {
                  var j = floor2(toNumber2(i2 + k | 0) / 2);
                  var b2 = unsafeIndex2(array2)(j);
                  var v = compare4(a2)(b2);
                  if (v instanceof EQ) {
                    $tco_done = true;
                    return new Just(b2);
                  }
                  ;
                  if (v instanceof GT) {
                    $tco_var_i = j + 1 | 0;
                    $copy_k = k;
                    return;
                  }
                  ;
                  $tco_var_i = i2;
                  $copy_k = j - 1 | 0;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5622, column 3 - line 5632, column 30): " + [i2.constructor.name, k.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_i, $copy_k);
              }
              ;
              return $tco_result;
            };
          };
          return go2(0)(size5);
        };
      };
    };
  };
  var blkCmp = function(v) {
    return function(v1) {
      if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
        return EQ.value;
      }
      ;
      if (v.start > v1.start) {
        return GT.value;
      }
      ;
      if (otherwise) {
        return LT.value;
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5598, column 1 - line 5598, column 45): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var getRule = function(blocks) {
    return function(unichar) {
      return function(size5) {
        var key2 = {
          start: unichar,
          length: 1,
          convRule: nullrule
        };
        var maybeCharBlock = bsearch(key2)(blocks)(size5)(blkCmp);
        if (maybeCharBlock instanceof Nothing) {
          return Nothing.value;
        }
        ;
        if (maybeCharBlock instanceof Just) {
          return new Just(maybeCharBlock.value0.convRule);
        }
        ;
        throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5612, column 5 - line 5614, column 60): " + [maybeCharBlock.constructor.name]);
      };
    };
  };
  var allchars = [{
    start: 0,
    length: 32,
    convRule: rule0
  }, {
    start: 32,
    length: 1,
    convRule: rule1
  }, {
    start: 33,
    length: 3,
    convRule: rule2
  }, {
    start: 36,
    length: 1,
    convRule: rule3
  }, {
    start: 37,
    length: 3,
    convRule: rule2
  }, {
    start: 40,
    length: 1,
    convRule: rule4
  }, {
    start: 41,
    length: 1,
    convRule: rule5
  }, {
    start: 42,
    length: 1,
    convRule: rule2
  }, {
    start: 43,
    length: 1,
    convRule: rule6
  }, {
    start: 44,
    length: 1,
    convRule: rule2
  }, {
    start: 45,
    length: 1,
    convRule: rule7
  }, {
    start: 46,
    length: 2,
    convRule: rule2
  }, {
    start: 48,
    length: 10,
    convRule: rule8
  }, {
    start: 58,
    length: 2,
    convRule: rule2
  }, {
    start: 60,
    length: 3,
    convRule: rule6
  }, {
    start: 63,
    length: 2,
    convRule: rule2
  }, {
    start: 65,
    length: 26,
    convRule: rule9
  }, {
    start: 91,
    length: 1,
    convRule: rule4
  }, {
    start: 92,
    length: 1,
    convRule: rule2
  }, {
    start: 93,
    length: 1,
    convRule: rule5
  }, {
    start: 94,
    length: 1,
    convRule: rule10
  }, {
    start: 95,
    length: 1,
    convRule: rule11
  }, {
    start: 96,
    length: 1,
    convRule: rule10
  }, {
    start: 97,
    length: 26,
    convRule: rule12
  }, {
    start: 123,
    length: 1,
    convRule: rule4
  }, {
    start: 124,
    length: 1,
    convRule: rule6
  }, {
    start: 125,
    length: 1,
    convRule: rule5
  }, {
    start: 126,
    length: 1,
    convRule: rule6
  }, {
    start: 127,
    length: 33,
    convRule: rule0
  }, {
    start: 160,
    length: 1,
    convRule: rule1
  }, {
    start: 161,
    length: 1,
    convRule: rule2
  }, {
    start: 162,
    length: 4,
    convRule: rule3
  }, {
    start: 166,
    length: 1,
    convRule: rule13
  }, {
    start: 167,
    length: 1,
    convRule: rule2
  }, {
    start: 168,
    length: 1,
    convRule: rule10
  }, {
    start: 169,
    length: 1,
    convRule: rule13
  }, {
    start: 170,
    length: 1,
    convRule: rule14
  }, {
    start: 171,
    length: 1,
    convRule: rule15
  }, {
    start: 172,
    length: 1,
    convRule: rule6
  }, {
    start: 173,
    length: 1,
    convRule: rule16
  }, {
    start: 174,
    length: 1,
    convRule: rule13
  }, {
    start: 175,
    length: 1,
    convRule: rule10
  }, {
    start: 176,
    length: 1,
    convRule: rule13
  }, {
    start: 177,
    length: 1,
    convRule: rule6
  }, {
    start: 178,
    length: 2,
    convRule: rule17
  }, {
    start: 180,
    length: 1,
    convRule: rule10
  }, {
    start: 181,
    length: 1,
    convRule: rule18
  }, {
    start: 182,
    length: 2,
    convRule: rule2
  }, {
    start: 184,
    length: 1,
    convRule: rule10
  }, {
    start: 185,
    length: 1,
    convRule: rule17
  }, {
    start: 186,
    length: 1,
    convRule: rule14
  }, {
    start: 187,
    length: 1,
    convRule: rule19
  }, {
    start: 188,
    length: 3,
    convRule: rule17
  }, {
    start: 191,
    length: 1,
    convRule: rule2
  }, {
    start: 192,
    length: 23,
    convRule: rule9
  }, {
    start: 215,
    length: 1,
    convRule: rule6
  }, {
    start: 216,
    length: 7,
    convRule: rule9
  }, {
    start: 223,
    length: 1,
    convRule: rule20
  }, {
    start: 224,
    length: 23,
    convRule: rule12
  }, {
    start: 247,
    length: 1,
    convRule: rule6
  }, {
    start: 248,
    length: 7,
    convRule: rule12
  }, {
    start: 255,
    length: 1,
    convRule: rule21
  }, {
    start: 256,
    length: 1,
    convRule: rule22
  }, {
    start: 257,
    length: 1,
    convRule: rule23
  }, {
    start: 258,
    length: 1,
    convRule: rule22
  }, {
    start: 259,
    length: 1,
    convRule: rule23
  }, {
    start: 260,
    length: 1,
    convRule: rule22
  }, {
    start: 261,
    length: 1,
    convRule: rule23
  }, {
    start: 262,
    length: 1,
    convRule: rule22
  }, {
    start: 263,
    length: 1,
    convRule: rule23
  }, {
    start: 264,
    length: 1,
    convRule: rule22
  }, {
    start: 265,
    length: 1,
    convRule: rule23
  }, {
    start: 266,
    length: 1,
    convRule: rule22
  }, {
    start: 267,
    length: 1,
    convRule: rule23
  }, {
    start: 268,
    length: 1,
    convRule: rule22
  }, {
    start: 269,
    length: 1,
    convRule: rule23
  }, {
    start: 270,
    length: 1,
    convRule: rule22
  }, {
    start: 271,
    length: 1,
    convRule: rule23
  }, {
    start: 272,
    length: 1,
    convRule: rule22
  }, {
    start: 273,
    length: 1,
    convRule: rule23
  }, {
    start: 274,
    length: 1,
    convRule: rule22
  }, {
    start: 275,
    length: 1,
    convRule: rule23
  }, {
    start: 276,
    length: 1,
    convRule: rule22
  }, {
    start: 277,
    length: 1,
    convRule: rule23
  }, {
    start: 278,
    length: 1,
    convRule: rule22
  }, {
    start: 279,
    length: 1,
    convRule: rule23
  }, {
    start: 280,
    length: 1,
    convRule: rule22
  }, {
    start: 281,
    length: 1,
    convRule: rule23
  }, {
    start: 282,
    length: 1,
    convRule: rule22
  }, {
    start: 283,
    length: 1,
    convRule: rule23
  }, {
    start: 284,
    length: 1,
    convRule: rule22
  }, {
    start: 285,
    length: 1,
    convRule: rule23
  }, {
    start: 286,
    length: 1,
    convRule: rule22
  }, {
    start: 287,
    length: 1,
    convRule: rule23
  }, {
    start: 288,
    length: 1,
    convRule: rule22
  }, {
    start: 289,
    length: 1,
    convRule: rule23
  }, {
    start: 290,
    length: 1,
    convRule: rule22
  }, {
    start: 291,
    length: 1,
    convRule: rule23
  }, {
    start: 292,
    length: 1,
    convRule: rule22
  }, {
    start: 293,
    length: 1,
    convRule: rule23
  }, {
    start: 294,
    length: 1,
    convRule: rule22
  }, {
    start: 295,
    length: 1,
    convRule: rule23
  }, {
    start: 296,
    length: 1,
    convRule: rule22
  }, {
    start: 297,
    length: 1,
    convRule: rule23
  }, {
    start: 298,
    length: 1,
    convRule: rule22
  }, {
    start: 299,
    length: 1,
    convRule: rule23
  }, {
    start: 300,
    length: 1,
    convRule: rule22
  }, {
    start: 301,
    length: 1,
    convRule: rule23
  }, {
    start: 302,
    length: 1,
    convRule: rule22
  }, {
    start: 303,
    length: 1,
    convRule: rule23
  }, {
    start: 304,
    length: 1,
    convRule: rule24
  }, {
    start: 305,
    length: 1,
    convRule: rule25
  }, {
    start: 306,
    length: 1,
    convRule: rule22
  }, {
    start: 307,
    length: 1,
    convRule: rule23
  }, {
    start: 308,
    length: 1,
    convRule: rule22
  }, {
    start: 309,
    length: 1,
    convRule: rule23
  }, {
    start: 310,
    length: 1,
    convRule: rule22
  }, {
    start: 311,
    length: 1,
    convRule: rule23
  }, {
    start: 312,
    length: 1,
    convRule: rule20
  }, {
    start: 313,
    length: 1,
    convRule: rule22
  }, {
    start: 314,
    length: 1,
    convRule: rule23
  }, {
    start: 315,
    length: 1,
    convRule: rule22
  }, {
    start: 316,
    length: 1,
    convRule: rule23
  }, {
    start: 317,
    length: 1,
    convRule: rule22
  }, {
    start: 318,
    length: 1,
    convRule: rule23
  }, {
    start: 319,
    length: 1,
    convRule: rule22
  }, {
    start: 320,
    length: 1,
    convRule: rule23
  }, {
    start: 321,
    length: 1,
    convRule: rule22
  }, {
    start: 322,
    length: 1,
    convRule: rule23
  }, {
    start: 323,
    length: 1,
    convRule: rule22
  }, {
    start: 324,
    length: 1,
    convRule: rule23
  }, {
    start: 325,
    length: 1,
    convRule: rule22
  }, {
    start: 326,
    length: 1,
    convRule: rule23
  }, {
    start: 327,
    length: 1,
    convRule: rule22
  }, {
    start: 328,
    length: 1,
    convRule: rule23
  }, {
    start: 329,
    length: 1,
    convRule: rule20
  }, {
    start: 330,
    length: 1,
    convRule: rule22
  }, {
    start: 331,
    length: 1,
    convRule: rule23
  }, {
    start: 332,
    length: 1,
    convRule: rule22
  }, {
    start: 333,
    length: 1,
    convRule: rule23
  }, {
    start: 334,
    length: 1,
    convRule: rule22
  }, {
    start: 335,
    length: 1,
    convRule: rule23
  }, {
    start: 336,
    length: 1,
    convRule: rule22
  }, {
    start: 337,
    length: 1,
    convRule: rule23
  }, {
    start: 338,
    length: 1,
    convRule: rule22
  }, {
    start: 339,
    length: 1,
    convRule: rule23
  }, {
    start: 340,
    length: 1,
    convRule: rule22
  }, {
    start: 341,
    length: 1,
    convRule: rule23
  }, {
    start: 342,
    length: 1,
    convRule: rule22
  }, {
    start: 343,
    length: 1,
    convRule: rule23
  }, {
    start: 344,
    length: 1,
    convRule: rule22
  }, {
    start: 345,
    length: 1,
    convRule: rule23
  }, {
    start: 346,
    length: 1,
    convRule: rule22
  }, {
    start: 347,
    length: 1,
    convRule: rule23
  }, {
    start: 348,
    length: 1,
    convRule: rule22
  }, {
    start: 349,
    length: 1,
    convRule: rule23
  }, {
    start: 350,
    length: 1,
    convRule: rule22
  }, {
    start: 351,
    length: 1,
    convRule: rule23
  }, {
    start: 352,
    length: 1,
    convRule: rule22
  }, {
    start: 353,
    length: 1,
    convRule: rule23
  }, {
    start: 354,
    length: 1,
    convRule: rule22
  }, {
    start: 355,
    length: 1,
    convRule: rule23
  }, {
    start: 356,
    length: 1,
    convRule: rule22
  }, {
    start: 357,
    length: 1,
    convRule: rule23
  }, {
    start: 358,
    length: 1,
    convRule: rule22
  }, {
    start: 359,
    length: 1,
    convRule: rule23
  }, {
    start: 360,
    length: 1,
    convRule: rule22
  }, {
    start: 361,
    length: 1,
    convRule: rule23
  }, {
    start: 362,
    length: 1,
    convRule: rule22
  }, {
    start: 363,
    length: 1,
    convRule: rule23
  }, {
    start: 364,
    length: 1,
    convRule: rule22
  }, {
    start: 365,
    length: 1,
    convRule: rule23
  }, {
    start: 366,
    length: 1,
    convRule: rule22
  }, {
    start: 367,
    length: 1,
    convRule: rule23
  }, {
    start: 368,
    length: 1,
    convRule: rule22
  }, {
    start: 369,
    length: 1,
    convRule: rule23
  }, {
    start: 370,
    length: 1,
    convRule: rule22
  }, {
    start: 371,
    length: 1,
    convRule: rule23
  }, {
    start: 372,
    length: 1,
    convRule: rule22
  }, {
    start: 373,
    length: 1,
    convRule: rule23
  }, {
    start: 374,
    length: 1,
    convRule: rule22
  }, {
    start: 375,
    length: 1,
    convRule: rule23
  }, {
    start: 376,
    length: 1,
    convRule: rule26
  }, {
    start: 377,
    length: 1,
    convRule: rule22
  }, {
    start: 378,
    length: 1,
    convRule: rule23
  }, {
    start: 379,
    length: 1,
    convRule: rule22
  }, {
    start: 380,
    length: 1,
    convRule: rule23
  }, {
    start: 381,
    length: 1,
    convRule: rule22
  }, {
    start: 382,
    length: 1,
    convRule: rule23
  }, {
    start: 383,
    length: 1,
    convRule: rule27
  }, {
    start: 384,
    length: 1,
    convRule: rule28
  }, {
    start: 385,
    length: 1,
    convRule: rule29
  }, {
    start: 386,
    length: 1,
    convRule: rule22
  }, {
    start: 387,
    length: 1,
    convRule: rule23
  }, {
    start: 388,
    length: 1,
    convRule: rule22
  }, {
    start: 389,
    length: 1,
    convRule: rule23
  }, {
    start: 390,
    length: 1,
    convRule: rule30
  }, {
    start: 391,
    length: 1,
    convRule: rule22
  }, {
    start: 392,
    length: 1,
    convRule: rule23
  }, {
    start: 393,
    length: 2,
    convRule: rule31
  }, {
    start: 395,
    length: 1,
    convRule: rule22
  }, {
    start: 396,
    length: 1,
    convRule: rule23
  }, {
    start: 397,
    length: 1,
    convRule: rule20
  }, {
    start: 398,
    length: 1,
    convRule: rule32
  }, {
    start: 399,
    length: 1,
    convRule: rule33
  }, {
    start: 400,
    length: 1,
    convRule: rule34
  }, {
    start: 401,
    length: 1,
    convRule: rule22
  }, {
    start: 402,
    length: 1,
    convRule: rule23
  }, {
    start: 403,
    length: 1,
    convRule: rule31
  }, {
    start: 404,
    length: 1,
    convRule: rule35
  }, {
    start: 405,
    length: 1,
    convRule: rule36
  }, {
    start: 406,
    length: 1,
    convRule: rule37
  }, {
    start: 407,
    length: 1,
    convRule: rule38
  }, {
    start: 408,
    length: 1,
    convRule: rule22
  }, {
    start: 409,
    length: 1,
    convRule: rule23
  }, {
    start: 410,
    length: 1,
    convRule: rule39
  }, {
    start: 411,
    length: 1,
    convRule: rule20
  }, {
    start: 412,
    length: 1,
    convRule: rule37
  }, {
    start: 413,
    length: 1,
    convRule: rule40
  }, {
    start: 414,
    length: 1,
    convRule: rule41
  }, {
    start: 415,
    length: 1,
    convRule: rule42
  }, {
    start: 416,
    length: 1,
    convRule: rule22
  }, {
    start: 417,
    length: 1,
    convRule: rule23
  }, {
    start: 418,
    length: 1,
    convRule: rule22
  }, {
    start: 419,
    length: 1,
    convRule: rule23
  }, {
    start: 420,
    length: 1,
    convRule: rule22
  }, {
    start: 421,
    length: 1,
    convRule: rule23
  }, {
    start: 422,
    length: 1,
    convRule: rule43
  }, {
    start: 423,
    length: 1,
    convRule: rule22
  }, {
    start: 424,
    length: 1,
    convRule: rule23
  }, {
    start: 425,
    length: 1,
    convRule: rule43
  }, {
    start: 426,
    length: 2,
    convRule: rule20
  }, {
    start: 428,
    length: 1,
    convRule: rule22
  }, {
    start: 429,
    length: 1,
    convRule: rule23
  }, {
    start: 430,
    length: 1,
    convRule: rule43
  }, {
    start: 431,
    length: 1,
    convRule: rule22
  }, {
    start: 432,
    length: 1,
    convRule: rule23
  }, {
    start: 433,
    length: 2,
    convRule: rule44
  }, {
    start: 435,
    length: 1,
    convRule: rule22
  }, {
    start: 436,
    length: 1,
    convRule: rule23
  }, {
    start: 437,
    length: 1,
    convRule: rule22
  }, {
    start: 438,
    length: 1,
    convRule: rule23
  }, {
    start: 439,
    length: 1,
    convRule: rule45
  }, {
    start: 440,
    length: 1,
    convRule: rule22
  }, {
    start: 441,
    length: 1,
    convRule: rule23
  }, {
    start: 442,
    length: 1,
    convRule: rule20
  }, {
    start: 443,
    length: 1,
    convRule: rule14
  }, {
    start: 444,
    length: 1,
    convRule: rule22
  }, {
    start: 445,
    length: 1,
    convRule: rule23
  }, {
    start: 446,
    length: 1,
    convRule: rule20
  }, {
    start: 447,
    length: 1,
    convRule: rule46
  }, {
    start: 448,
    length: 4,
    convRule: rule14
  }, {
    start: 452,
    length: 1,
    convRule: rule47
  }, {
    start: 453,
    length: 1,
    convRule: rule48
  }, {
    start: 454,
    length: 1,
    convRule: rule49
  }, {
    start: 455,
    length: 1,
    convRule: rule47
  }, {
    start: 456,
    length: 1,
    convRule: rule48
  }, {
    start: 457,
    length: 1,
    convRule: rule49
  }, {
    start: 458,
    length: 1,
    convRule: rule47
  }, {
    start: 459,
    length: 1,
    convRule: rule48
  }, {
    start: 460,
    length: 1,
    convRule: rule49
  }, {
    start: 461,
    length: 1,
    convRule: rule22
  }, {
    start: 462,
    length: 1,
    convRule: rule23
  }, {
    start: 463,
    length: 1,
    convRule: rule22
  }, {
    start: 464,
    length: 1,
    convRule: rule23
  }, {
    start: 465,
    length: 1,
    convRule: rule22
  }, {
    start: 466,
    length: 1,
    convRule: rule23
  }, {
    start: 467,
    length: 1,
    convRule: rule22
  }, {
    start: 468,
    length: 1,
    convRule: rule23
  }, {
    start: 469,
    length: 1,
    convRule: rule22
  }, {
    start: 470,
    length: 1,
    convRule: rule23
  }, {
    start: 471,
    length: 1,
    convRule: rule22
  }, {
    start: 472,
    length: 1,
    convRule: rule23
  }, {
    start: 473,
    length: 1,
    convRule: rule22
  }, {
    start: 474,
    length: 1,
    convRule: rule23
  }, {
    start: 475,
    length: 1,
    convRule: rule22
  }, {
    start: 476,
    length: 1,
    convRule: rule23
  }, {
    start: 477,
    length: 1,
    convRule: rule50
  }, {
    start: 478,
    length: 1,
    convRule: rule22
  }, {
    start: 479,
    length: 1,
    convRule: rule23
  }, {
    start: 480,
    length: 1,
    convRule: rule22
  }, {
    start: 481,
    length: 1,
    convRule: rule23
  }, {
    start: 482,
    length: 1,
    convRule: rule22
  }, {
    start: 483,
    length: 1,
    convRule: rule23
  }, {
    start: 484,
    length: 1,
    convRule: rule22
  }, {
    start: 485,
    length: 1,
    convRule: rule23
  }, {
    start: 486,
    length: 1,
    convRule: rule22
  }, {
    start: 487,
    length: 1,
    convRule: rule23
  }, {
    start: 488,
    length: 1,
    convRule: rule22
  }, {
    start: 489,
    length: 1,
    convRule: rule23
  }, {
    start: 490,
    length: 1,
    convRule: rule22
  }, {
    start: 491,
    length: 1,
    convRule: rule23
  }, {
    start: 492,
    length: 1,
    convRule: rule22
  }, {
    start: 493,
    length: 1,
    convRule: rule23
  }, {
    start: 494,
    length: 1,
    convRule: rule22
  }, {
    start: 495,
    length: 1,
    convRule: rule23
  }, {
    start: 496,
    length: 1,
    convRule: rule20
  }, {
    start: 497,
    length: 1,
    convRule: rule47
  }, {
    start: 498,
    length: 1,
    convRule: rule48
  }, {
    start: 499,
    length: 1,
    convRule: rule49
  }, {
    start: 500,
    length: 1,
    convRule: rule22
  }, {
    start: 501,
    length: 1,
    convRule: rule23
  }, {
    start: 502,
    length: 1,
    convRule: rule51
  }, {
    start: 503,
    length: 1,
    convRule: rule52
  }, {
    start: 504,
    length: 1,
    convRule: rule22
  }, {
    start: 505,
    length: 1,
    convRule: rule23
  }, {
    start: 506,
    length: 1,
    convRule: rule22
  }, {
    start: 507,
    length: 1,
    convRule: rule23
  }, {
    start: 508,
    length: 1,
    convRule: rule22
  }, {
    start: 509,
    length: 1,
    convRule: rule23
  }, {
    start: 510,
    length: 1,
    convRule: rule22
  }, {
    start: 511,
    length: 1,
    convRule: rule23
  }, {
    start: 512,
    length: 1,
    convRule: rule22
  }, {
    start: 513,
    length: 1,
    convRule: rule23
  }, {
    start: 514,
    length: 1,
    convRule: rule22
  }, {
    start: 515,
    length: 1,
    convRule: rule23
  }, {
    start: 516,
    length: 1,
    convRule: rule22
  }, {
    start: 517,
    length: 1,
    convRule: rule23
  }, {
    start: 518,
    length: 1,
    convRule: rule22
  }, {
    start: 519,
    length: 1,
    convRule: rule23
  }, {
    start: 520,
    length: 1,
    convRule: rule22
  }, {
    start: 521,
    length: 1,
    convRule: rule23
  }, {
    start: 522,
    length: 1,
    convRule: rule22
  }, {
    start: 523,
    length: 1,
    convRule: rule23
  }, {
    start: 524,
    length: 1,
    convRule: rule22
  }, {
    start: 525,
    length: 1,
    convRule: rule23
  }, {
    start: 526,
    length: 1,
    convRule: rule22
  }, {
    start: 527,
    length: 1,
    convRule: rule23
  }, {
    start: 528,
    length: 1,
    convRule: rule22
  }, {
    start: 529,
    length: 1,
    convRule: rule23
  }, {
    start: 530,
    length: 1,
    convRule: rule22
  }, {
    start: 531,
    length: 1,
    convRule: rule23
  }, {
    start: 532,
    length: 1,
    convRule: rule22
  }, {
    start: 533,
    length: 1,
    convRule: rule23
  }, {
    start: 534,
    length: 1,
    convRule: rule22
  }, {
    start: 535,
    length: 1,
    convRule: rule23
  }, {
    start: 536,
    length: 1,
    convRule: rule22
  }, {
    start: 537,
    length: 1,
    convRule: rule23
  }, {
    start: 538,
    length: 1,
    convRule: rule22
  }, {
    start: 539,
    length: 1,
    convRule: rule23
  }, {
    start: 540,
    length: 1,
    convRule: rule22
  }, {
    start: 541,
    length: 1,
    convRule: rule23
  }, {
    start: 542,
    length: 1,
    convRule: rule22
  }, {
    start: 543,
    length: 1,
    convRule: rule23
  }, {
    start: 544,
    length: 1,
    convRule: rule53
  }, {
    start: 545,
    length: 1,
    convRule: rule20
  }, {
    start: 546,
    length: 1,
    convRule: rule22
  }, {
    start: 547,
    length: 1,
    convRule: rule23
  }, {
    start: 548,
    length: 1,
    convRule: rule22
  }, {
    start: 549,
    length: 1,
    convRule: rule23
  }, {
    start: 550,
    length: 1,
    convRule: rule22
  }, {
    start: 551,
    length: 1,
    convRule: rule23
  }, {
    start: 552,
    length: 1,
    convRule: rule22
  }, {
    start: 553,
    length: 1,
    convRule: rule23
  }, {
    start: 554,
    length: 1,
    convRule: rule22
  }, {
    start: 555,
    length: 1,
    convRule: rule23
  }, {
    start: 556,
    length: 1,
    convRule: rule22
  }, {
    start: 557,
    length: 1,
    convRule: rule23
  }, {
    start: 558,
    length: 1,
    convRule: rule22
  }, {
    start: 559,
    length: 1,
    convRule: rule23
  }, {
    start: 560,
    length: 1,
    convRule: rule22
  }, {
    start: 561,
    length: 1,
    convRule: rule23
  }, {
    start: 562,
    length: 1,
    convRule: rule22
  }, {
    start: 563,
    length: 1,
    convRule: rule23
  }, {
    start: 564,
    length: 6,
    convRule: rule20
  }, {
    start: 570,
    length: 1,
    convRule: rule54
  }, {
    start: 571,
    length: 1,
    convRule: rule22
  }, {
    start: 572,
    length: 1,
    convRule: rule23
  }, {
    start: 573,
    length: 1,
    convRule: rule55
  }, {
    start: 574,
    length: 1,
    convRule: rule56
  }, {
    start: 575,
    length: 2,
    convRule: rule57
  }, {
    start: 577,
    length: 1,
    convRule: rule22
  }, {
    start: 578,
    length: 1,
    convRule: rule23
  }, {
    start: 579,
    length: 1,
    convRule: rule58
  }, {
    start: 580,
    length: 1,
    convRule: rule59
  }, {
    start: 581,
    length: 1,
    convRule: rule60
  }, {
    start: 582,
    length: 1,
    convRule: rule22
  }, {
    start: 583,
    length: 1,
    convRule: rule23
  }, {
    start: 584,
    length: 1,
    convRule: rule22
  }, {
    start: 585,
    length: 1,
    convRule: rule23
  }, {
    start: 586,
    length: 1,
    convRule: rule22
  }, {
    start: 587,
    length: 1,
    convRule: rule23
  }, {
    start: 588,
    length: 1,
    convRule: rule22
  }, {
    start: 589,
    length: 1,
    convRule: rule23
  }, {
    start: 590,
    length: 1,
    convRule: rule22
  }, {
    start: 591,
    length: 1,
    convRule: rule23
  }, {
    start: 592,
    length: 1,
    convRule: rule61
  }, {
    start: 593,
    length: 1,
    convRule: rule62
  }, {
    start: 594,
    length: 1,
    convRule: rule63
  }, {
    start: 595,
    length: 1,
    convRule: rule64
  }, {
    start: 596,
    length: 1,
    convRule: rule65
  }, {
    start: 597,
    length: 1,
    convRule: rule20
  }, {
    start: 598,
    length: 2,
    convRule: rule66
  }, {
    start: 600,
    length: 1,
    convRule: rule20
  }, {
    start: 601,
    length: 1,
    convRule: rule67
  }, {
    start: 602,
    length: 1,
    convRule: rule20
  }, {
    start: 603,
    length: 1,
    convRule: rule68
  }, {
    start: 604,
    length: 1,
    convRule: rule69
  }, {
    start: 605,
    length: 3,
    convRule: rule20
  }, {
    start: 608,
    length: 1,
    convRule: rule66
  }, {
    start: 609,
    length: 1,
    convRule: rule70
  }, {
    start: 610,
    length: 1,
    convRule: rule20
  }, {
    start: 611,
    length: 1,
    convRule: rule71
  }, {
    start: 612,
    length: 1,
    convRule: rule20
  }, {
    start: 613,
    length: 1,
    convRule: rule72
  }, {
    start: 614,
    length: 1,
    convRule: rule73
  }, {
    start: 615,
    length: 1,
    convRule: rule20
  }, {
    start: 616,
    length: 1,
    convRule: rule74
  }, {
    start: 617,
    length: 1,
    convRule: rule75
  }, {
    start: 618,
    length: 1,
    convRule: rule73
  }, {
    start: 619,
    length: 1,
    convRule: rule76
  }, {
    start: 620,
    length: 1,
    convRule: rule77
  }, {
    start: 621,
    length: 2,
    convRule: rule20
  }, {
    start: 623,
    length: 1,
    convRule: rule75
  }, {
    start: 624,
    length: 1,
    convRule: rule20
  }, {
    start: 625,
    length: 1,
    convRule: rule78
  }, {
    start: 626,
    length: 1,
    convRule: rule79
  }, {
    start: 627,
    length: 2,
    convRule: rule20
  }, {
    start: 629,
    length: 1,
    convRule: rule80
  }, {
    start: 630,
    length: 7,
    convRule: rule20
  }, {
    start: 637,
    length: 1,
    convRule: rule81
  }, {
    start: 638,
    length: 2,
    convRule: rule20
  }, {
    start: 640,
    length: 1,
    convRule: rule82
  }, {
    start: 641,
    length: 1,
    convRule: rule20
  }, {
    start: 642,
    length: 1,
    convRule: rule83
  }, {
    start: 643,
    length: 1,
    convRule: rule82
  }, {
    start: 644,
    length: 3,
    convRule: rule20
  }, {
    start: 647,
    length: 1,
    convRule: rule84
  }, {
    start: 648,
    length: 1,
    convRule: rule82
  }, {
    start: 649,
    length: 1,
    convRule: rule85
  }, {
    start: 650,
    length: 2,
    convRule: rule86
  }, {
    start: 652,
    length: 1,
    convRule: rule87
  }, {
    start: 653,
    length: 5,
    convRule: rule20
  }, {
    start: 658,
    length: 1,
    convRule: rule88
  }, {
    start: 659,
    length: 1,
    convRule: rule20
  }, {
    start: 660,
    length: 1,
    convRule: rule14
  }, {
    start: 661,
    length: 8,
    convRule: rule20
  }, {
    start: 669,
    length: 1,
    convRule: rule89
  }, {
    start: 670,
    length: 1,
    convRule: rule90
  }, {
    start: 671,
    length: 17,
    convRule: rule20
  }, {
    start: 688,
    length: 18,
    convRule: rule91
  }, {
    start: 706,
    length: 4,
    convRule: rule10
  }, {
    start: 710,
    length: 12,
    convRule: rule91
  }, {
    start: 722,
    length: 14,
    convRule: rule10
  }, {
    start: 736,
    length: 5,
    convRule: rule91
  }, {
    start: 741,
    length: 7,
    convRule: rule10
  }, {
    start: 748,
    length: 1,
    convRule: rule91
  }, {
    start: 749,
    length: 1,
    convRule: rule10
  }, {
    start: 750,
    length: 1,
    convRule: rule91
  }, {
    start: 751,
    length: 17,
    convRule: rule10
  }, {
    start: 768,
    length: 69,
    convRule: rule92
  }, {
    start: 837,
    length: 1,
    convRule: rule93
  }, {
    start: 838,
    length: 42,
    convRule: rule92
  }, {
    start: 880,
    length: 1,
    convRule: rule22
  }, {
    start: 881,
    length: 1,
    convRule: rule23
  }, {
    start: 882,
    length: 1,
    convRule: rule22
  }, {
    start: 883,
    length: 1,
    convRule: rule23
  }, {
    start: 884,
    length: 1,
    convRule: rule91
  }, {
    start: 885,
    length: 1,
    convRule: rule10
  }, {
    start: 886,
    length: 1,
    convRule: rule22
  }, {
    start: 887,
    length: 1,
    convRule: rule23
  }, {
    start: 890,
    length: 1,
    convRule: rule91
  }, {
    start: 891,
    length: 3,
    convRule: rule41
  }, {
    start: 894,
    length: 1,
    convRule: rule2
  }, {
    start: 895,
    length: 1,
    convRule: rule94
  }, {
    start: 900,
    length: 2,
    convRule: rule10
  }, {
    start: 902,
    length: 1,
    convRule: rule95
  }, {
    start: 903,
    length: 1,
    convRule: rule2
  }, {
    start: 904,
    length: 3,
    convRule: rule96
  }, {
    start: 908,
    length: 1,
    convRule: rule97
  }, {
    start: 910,
    length: 2,
    convRule: rule98
  }, {
    start: 912,
    length: 1,
    convRule: rule20
  }, {
    start: 913,
    length: 17,
    convRule: rule9
  }, {
    start: 931,
    length: 9,
    convRule: rule9
  }, {
    start: 940,
    length: 1,
    convRule: rule99
  }, {
    start: 941,
    length: 3,
    convRule: rule100
  }, {
    start: 944,
    length: 1,
    convRule: rule20
  }, {
    start: 945,
    length: 17,
    convRule: rule12
  }, {
    start: 962,
    length: 1,
    convRule: rule101
  }, {
    start: 963,
    length: 9,
    convRule: rule12
  }, {
    start: 972,
    length: 1,
    convRule: rule102
  }, {
    start: 973,
    length: 2,
    convRule: rule103
  }, {
    start: 975,
    length: 1,
    convRule: rule104
  }, {
    start: 976,
    length: 1,
    convRule: rule105
  }, {
    start: 977,
    length: 1,
    convRule: rule106
  }, {
    start: 978,
    length: 3,
    convRule: rule107
  }, {
    start: 981,
    length: 1,
    convRule: rule108
  }, {
    start: 982,
    length: 1,
    convRule: rule109
  }, {
    start: 983,
    length: 1,
    convRule: rule110
  }, {
    start: 984,
    length: 1,
    convRule: rule22
  }, {
    start: 985,
    length: 1,
    convRule: rule23
  }, {
    start: 986,
    length: 1,
    convRule: rule22
  }, {
    start: 987,
    length: 1,
    convRule: rule23
  }, {
    start: 988,
    length: 1,
    convRule: rule22
  }, {
    start: 989,
    length: 1,
    convRule: rule23
  }, {
    start: 990,
    length: 1,
    convRule: rule22
  }, {
    start: 991,
    length: 1,
    convRule: rule23
  }, {
    start: 992,
    length: 1,
    convRule: rule22
  }, {
    start: 993,
    length: 1,
    convRule: rule23
  }, {
    start: 994,
    length: 1,
    convRule: rule22
  }, {
    start: 995,
    length: 1,
    convRule: rule23
  }, {
    start: 996,
    length: 1,
    convRule: rule22
  }, {
    start: 997,
    length: 1,
    convRule: rule23
  }, {
    start: 998,
    length: 1,
    convRule: rule22
  }, {
    start: 999,
    length: 1,
    convRule: rule23
  }, {
    start: 1e3,
    length: 1,
    convRule: rule22
  }, {
    start: 1001,
    length: 1,
    convRule: rule23
  }, {
    start: 1002,
    length: 1,
    convRule: rule22
  }, {
    start: 1003,
    length: 1,
    convRule: rule23
  }, {
    start: 1004,
    length: 1,
    convRule: rule22
  }, {
    start: 1005,
    length: 1,
    convRule: rule23
  }, {
    start: 1006,
    length: 1,
    convRule: rule22
  }, {
    start: 1007,
    length: 1,
    convRule: rule23
  }, {
    start: 1008,
    length: 1,
    convRule: rule111
  }, {
    start: 1009,
    length: 1,
    convRule: rule112
  }, {
    start: 1010,
    length: 1,
    convRule: rule113
  }, {
    start: 1011,
    length: 1,
    convRule: rule114
  }, {
    start: 1012,
    length: 1,
    convRule: rule115
  }, {
    start: 1013,
    length: 1,
    convRule: rule116
  }, {
    start: 1014,
    length: 1,
    convRule: rule6
  }, {
    start: 1015,
    length: 1,
    convRule: rule22
  }, {
    start: 1016,
    length: 1,
    convRule: rule23
  }, {
    start: 1017,
    length: 1,
    convRule: rule117
  }, {
    start: 1018,
    length: 1,
    convRule: rule22
  }, {
    start: 1019,
    length: 1,
    convRule: rule23
  }, {
    start: 1020,
    length: 1,
    convRule: rule20
  }, {
    start: 1021,
    length: 3,
    convRule: rule53
  }, {
    start: 1024,
    length: 16,
    convRule: rule118
  }, {
    start: 1040,
    length: 32,
    convRule: rule9
  }, {
    start: 1072,
    length: 32,
    convRule: rule12
  }, {
    start: 1104,
    length: 16,
    convRule: rule112
  }, {
    start: 1120,
    length: 1,
    convRule: rule22
  }, {
    start: 1121,
    length: 1,
    convRule: rule23
  }, {
    start: 1122,
    length: 1,
    convRule: rule22
  }, {
    start: 1123,
    length: 1,
    convRule: rule23
  }, {
    start: 1124,
    length: 1,
    convRule: rule22
  }, {
    start: 1125,
    length: 1,
    convRule: rule23
  }, {
    start: 1126,
    length: 1,
    convRule: rule22
  }, {
    start: 1127,
    length: 1,
    convRule: rule23
  }, {
    start: 1128,
    length: 1,
    convRule: rule22
  }, {
    start: 1129,
    length: 1,
    convRule: rule23
  }, {
    start: 1130,
    length: 1,
    convRule: rule22
  }, {
    start: 1131,
    length: 1,
    convRule: rule23
  }, {
    start: 1132,
    length: 1,
    convRule: rule22
  }, {
    start: 1133,
    length: 1,
    convRule: rule23
  }, {
    start: 1134,
    length: 1,
    convRule: rule22
  }, {
    start: 1135,
    length: 1,
    convRule: rule23
  }, {
    start: 1136,
    length: 1,
    convRule: rule22
  }, {
    start: 1137,
    length: 1,
    convRule: rule23
  }, {
    start: 1138,
    length: 1,
    convRule: rule22
  }, {
    start: 1139,
    length: 1,
    convRule: rule23
  }, {
    start: 1140,
    length: 1,
    convRule: rule22
  }, {
    start: 1141,
    length: 1,
    convRule: rule23
  }, {
    start: 1142,
    length: 1,
    convRule: rule22
  }, {
    start: 1143,
    length: 1,
    convRule: rule23
  }, {
    start: 1144,
    length: 1,
    convRule: rule22
  }, {
    start: 1145,
    length: 1,
    convRule: rule23
  }, {
    start: 1146,
    length: 1,
    convRule: rule22
  }, {
    start: 1147,
    length: 1,
    convRule: rule23
  }, {
    start: 1148,
    length: 1,
    convRule: rule22
  }, {
    start: 1149,
    length: 1,
    convRule: rule23
  }, {
    start: 1150,
    length: 1,
    convRule: rule22
  }, {
    start: 1151,
    length: 1,
    convRule: rule23
  }, {
    start: 1152,
    length: 1,
    convRule: rule22
  }, {
    start: 1153,
    length: 1,
    convRule: rule23
  }, {
    start: 1154,
    length: 1,
    convRule: rule13
  }, {
    start: 1155,
    length: 5,
    convRule: rule92
  }, {
    start: 1160,
    length: 2,
    convRule: rule119
  }, {
    start: 1162,
    length: 1,
    convRule: rule22
  }, {
    start: 1163,
    length: 1,
    convRule: rule23
  }, {
    start: 1164,
    length: 1,
    convRule: rule22
  }, {
    start: 1165,
    length: 1,
    convRule: rule23
  }, {
    start: 1166,
    length: 1,
    convRule: rule22
  }, {
    start: 1167,
    length: 1,
    convRule: rule23
  }, {
    start: 1168,
    length: 1,
    convRule: rule22
  }, {
    start: 1169,
    length: 1,
    convRule: rule23
  }, {
    start: 1170,
    length: 1,
    convRule: rule22
  }, {
    start: 1171,
    length: 1,
    convRule: rule23
  }, {
    start: 1172,
    length: 1,
    convRule: rule22
  }, {
    start: 1173,
    length: 1,
    convRule: rule23
  }, {
    start: 1174,
    length: 1,
    convRule: rule22
  }, {
    start: 1175,
    length: 1,
    convRule: rule23
  }, {
    start: 1176,
    length: 1,
    convRule: rule22
  }, {
    start: 1177,
    length: 1,
    convRule: rule23
  }, {
    start: 1178,
    length: 1,
    convRule: rule22
  }, {
    start: 1179,
    length: 1,
    convRule: rule23
  }, {
    start: 1180,
    length: 1,
    convRule: rule22
  }, {
    start: 1181,
    length: 1,
    convRule: rule23
  }, {
    start: 1182,
    length: 1,
    convRule: rule22
  }, {
    start: 1183,
    length: 1,
    convRule: rule23
  }, {
    start: 1184,
    length: 1,
    convRule: rule22
  }, {
    start: 1185,
    length: 1,
    convRule: rule23
  }, {
    start: 1186,
    length: 1,
    convRule: rule22
  }, {
    start: 1187,
    length: 1,
    convRule: rule23
  }, {
    start: 1188,
    length: 1,
    convRule: rule22
  }, {
    start: 1189,
    length: 1,
    convRule: rule23
  }, {
    start: 1190,
    length: 1,
    convRule: rule22
  }, {
    start: 1191,
    length: 1,
    convRule: rule23
  }, {
    start: 1192,
    length: 1,
    convRule: rule22
  }, {
    start: 1193,
    length: 1,
    convRule: rule23
  }, {
    start: 1194,
    length: 1,
    convRule: rule22
  }, {
    start: 1195,
    length: 1,
    convRule: rule23
  }, {
    start: 1196,
    length: 1,
    convRule: rule22
  }, {
    start: 1197,
    length: 1,
    convRule: rule23
  }, {
    start: 1198,
    length: 1,
    convRule: rule22
  }, {
    start: 1199,
    length: 1,
    convRule: rule23
  }, {
    start: 1200,
    length: 1,
    convRule: rule22
  }, {
    start: 1201,
    length: 1,
    convRule: rule23
  }, {
    start: 1202,
    length: 1,
    convRule: rule22
  }, {
    start: 1203,
    length: 1,
    convRule: rule23
  }, {
    start: 1204,
    length: 1,
    convRule: rule22
  }, {
    start: 1205,
    length: 1,
    convRule: rule23
  }, {
    start: 1206,
    length: 1,
    convRule: rule22
  }, {
    start: 1207,
    length: 1,
    convRule: rule23
  }, {
    start: 1208,
    length: 1,
    convRule: rule22
  }, {
    start: 1209,
    length: 1,
    convRule: rule23
  }, {
    start: 1210,
    length: 1,
    convRule: rule22
  }, {
    start: 1211,
    length: 1,
    convRule: rule23
  }, {
    start: 1212,
    length: 1,
    convRule: rule22
  }, {
    start: 1213,
    length: 1,
    convRule: rule23
  }, {
    start: 1214,
    length: 1,
    convRule: rule22
  }, {
    start: 1215,
    length: 1,
    convRule: rule23
  }, {
    start: 1216,
    length: 1,
    convRule: rule120
  }, {
    start: 1217,
    length: 1,
    convRule: rule22
  }, {
    start: 1218,
    length: 1,
    convRule: rule23
  }, {
    start: 1219,
    length: 1,
    convRule: rule22
  }, {
    start: 1220,
    length: 1,
    convRule: rule23
  }, {
    start: 1221,
    length: 1,
    convRule: rule22
  }, {
    start: 1222,
    length: 1,
    convRule: rule23
  }, {
    start: 1223,
    length: 1,
    convRule: rule22
  }, {
    start: 1224,
    length: 1,
    convRule: rule23
  }, {
    start: 1225,
    length: 1,
    convRule: rule22
  }, {
    start: 1226,
    length: 1,
    convRule: rule23
  }, {
    start: 1227,
    length: 1,
    convRule: rule22
  }, {
    start: 1228,
    length: 1,
    convRule: rule23
  }, {
    start: 1229,
    length: 1,
    convRule: rule22
  }, {
    start: 1230,
    length: 1,
    convRule: rule23
  }, {
    start: 1231,
    length: 1,
    convRule: rule121
  }, {
    start: 1232,
    length: 1,
    convRule: rule22
  }, {
    start: 1233,
    length: 1,
    convRule: rule23
  }, {
    start: 1234,
    length: 1,
    convRule: rule22
  }, {
    start: 1235,
    length: 1,
    convRule: rule23
  }, {
    start: 1236,
    length: 1,
    convRule: rule22
  }, {
    start: 1237,
    length: 1,
    convRule: rule23
  }, {
    start: 1238,
    length: 1,
    convRule: rule22
  }, {
    start: 1239,
    length: 1,
    convRule: rule23
  }, {
    start: 1240,
    length: 1,
    convRule: rule22
  }, {
    start: 1241,
    length: 1,
    convRule: rule23
  }, {
    start: 1242,
    length: 1,
    convRule: rule22
  }, {
    start: 1243,
    length: 1,
    convRule: rule23
  }, {
    start: 1244,
    length: 1,
    convRule: rule22
  }, {
    start: 1245,
    length: 1,
    convRule: rule23
  }, {
    start: 1246,
    length: 1,
    convRule: rule22
  }, {
    start: 1247,
    length: 1,
    convRule: rule23
  }, {
    start: 1248,
    length: 1,
    convRule: rule22
  }, {
    start: 1249,
    length: 1,
    convRule: rule23
  }, {
    start: 1250,
    length: 1,
    convRule: rule22
  }, {
    start: 1251,
    length: 1,
    convRule: rule23
  }, {
    start: 1252,
    length: 1,
    convRule: rule22
  }, {
    start: 1253,
    length: 1,
    convRule: rule23
  }, {
    start: 1254,
    length: 1,
    convRule: rule22
  }, {
    start: 1255,
    length: 1,
    convRule: rule23
  }, {
    start: 1256,
    length: 1,
    convRule: rule22
  }, {
    start: 1257,
    length: 1,
    convRule: rule23
  }, {
    start: 1258,
    length: 1,
    convRule: rule22
  }, {
    start: 1259,
    length: 1,
    convRule: rule23
  }, {
    start: 1260,
    length: 1,
    convRule: rule22
  }, {
    start: 1261,
    length: 1,
    convRule: rule23
  }, {
    start: 1262,
    length: 1,
    convRule: rule22
  }, {
    start: 1263,
    length: 1,
    convRule: rule23
  }, {
    start: 1264,
    length: 1,
    convRule: rule22
  }, {
    start: 1265,
    length: 1,
    convRule: rule23
  }, {
    start: 1266,
    length: 1,
    convRule: rule22
  }, {
    start: 1267,
    length: 1,
    convRule: rule23
  }, {
    start: 1268,
    length: 1,
    convRule: rule22
  }, {
    start: 1269,
    length: 1,
    convRule: rule23
  }, {
    start: 1270,
    length: 1,
    convRule: rule22
  }, {
    start: 1271,
    length: 1,
    convRule: rule23
  }, {
    start: 1272,
    length: 1,
    convRule: rule22
  }, {
    start: 1273,
    length: 1,
    convRule: rule23
  }, {
    start: 1274,
    length: 1,
    convRule: rule22
  }, {
    start: 1275,
    length: 1,
    convRule: rule23
  }, {
    start: 1276,
    length: 1,
    convRule: rule22
  }, {
    start: 1277,
    length: 1,
    convRule: rule23
  }, {
    start: 1278,
    length: 1,
    convRule: rule22
  }, {
    start: 1279,
    length: 1,
    convRule: rule23
  }, {
    start: 1280,
    length: 1,
    convRule: rule22
  }, {
    start: 1281,
    length: 1,
    convRule: rule23
  }, {
    start: 1282,
    length: 1,
    convRule: rule22
  }, {
    start: 1283,
    length: 1,
    convRule: rule23
  }, {
    start: 1284,
    length: 1,
    convRule: rule22
  }, {
    start: 1285,
    length: 1,
    convRule: rule23
  }, {
    start: 1286,
    length: 1,
    convRule: rule22
  }, {
    start: 1287,
    length: 1,
    convRule: rule23
  }, {
    start: 1288,
    length: 1,
    convRule: rule22
  }, {
    start: 1289,
    length: 1,
    convRule: rule23
  }, {
    start: 1290,
    length: 1,
    convRule: rule22
  }, {
    start: 1291,
    length: 1,
    convRule: rule23
  }, {
    start: 1292,
    length: 1,
    convRule: rule22
  }, {
    start: 1293,
    length: 1,
    convRule: rule23
  }, {
    start: 1294,
    length: 1,
    convRule: rule22
  }, {
    start: 1295,
    length: 1,
    convRule: rule23
  }, {
    start: 1296,
    length: 1,
    convRule: rule22
  }, {
    start: 1297,
    length: 1,
    convRule: rule23
  }, {
    start: 1298,
    length: 1,
    convRule: rule22
  }, {
    start: 1299,
    length: 1,
    convRule: rule23
  }, {
    start: 1300,
    length: 1,
    convRule: rule22
  }, {
    start: 1301,
    length: 1,
    convRule: rule23
  }, {
    start: 1302,
    length: 1,
    convRule: rule22
  }, {
    start: 1303,
    length: 1,
    convRule: rule23
  }, {
    start: 1304,
    length: 1,
    convRule: rule22
  }, {
    start: 1305,
    length: 1,
    convRule: rule23
  }, {
    start: 1306,
    length: 1,
    convRule: rule22
  }, {
    start: 1307,
    length: 1,
    convRule: rule23
  }, {
    start: 1308,
    length: 1,
    convRule: rule22
  }, {
    start: 1309,
    length: 1,
    convRule: rule23
  }, {
    start: 1310,
    length: 1,
    convRule: rule22
  }, {
    start: 1311,
    length: 1,
    convRule: rule23
  }, {
    start: 1312,
    length: 1,
    convRule: rule22
  }, {
    start: 1313,
    length: 1,
    convRule: rule23
  }, {
    start: 1314,
    length: 1,
    convRule: rule22
  }, {
    start: 1315,
    length: 1,
    convRule: rule23
  }, {
    start: 1316,
    length: 1,
    convRule: rule22
  }, {
    start: 1317,
    length: 1,
    convRule: rule23
  }, {
    start: 1318,
    length: 1,
    convRule: rule22
  }, {
    start: 1319,
    length: 1,
    convRule: rule23
  }, {
    start: 1320,
    length: 1,
    convRule: rule22
  }, {
    start: 1321,
    length: 1,
    convRule: rule23
  }, {
    start: 1322,
    length: 1,
    convRule: rule22
  }, {
    start: 1323,
    length: 1,
    convRule: rule23
  }, {
    start: 1324,
    length: 1,
    convRule: rule22
  }, {
    start: 1325,
    length: 1,
    convRule: rule23
  }, {
    start: 1326,
    length: 1,
    convRule: rule22
  }, {
    start: 1327,
    length: 1,
    convRule: rule23
  }, {
    start: 1329,
    length: 38,
    convRule: rule122
  }, {
    start: 1369,
    length: 1,
    convRule: rule91
  }, {
    start: 1370,
    length: 6,
    convRule: rule2
  }, {
    start: 1376,
    length: 1,
    convRule: rule20
  }, {
    start: 1377,
    length: 38,
    convRule: rule123
  }, {
    start: 1415,
    length: 2,
    convRule: rule20
  }, {
    start: 1417,
    length: 1,
    convRule: rule2
  }, {
    start: 1418,
    length: 1,
    convRule: rule7
  }, {
    start: 1421,
    length: 2,
    convRule: rule13
  }, {
    start: 1423,
    length: 1,
    convRule: rule3
  }, {
    start: 1425,
    length: 45,
    convRule: rule92
  }, {
    start: 1470,
    length: 1,
    convRule: rule7
  }, {
    start: 1471,
    length: 1,
    convRule: rule92
  }, {
    start: 1472,
    length: 1,
    convRule: rule2
  }, {
    start: 1473,
    length: 2,
    convRule: rule92
  }, {
    start: 1475,
    length: 1,
    convRule: rule2
  }, {
    start: 1476,
    length: 2,
    convRule: rule92
  }, {
    start: 1478,
    length: 1,
    convRule: rule2
  }, {
    start: 1479,
    length: 1,
    convRule: rule92
  }, {
    start: 1488,
    length: 27,
    convRule: rule14
  }, {
    start: 1519,
    length: 4,
    convRule: rule14
  }, {
    start: 1523,
    length: 2,
    convRule: rule2
  }, {
    start: 1536,
    length: 6,
    convRule: rule16
  }, {
    start: 1542,
    length: 3,
    convRule: rule6
  }, {
    start: 1545,
    length: 2,
    convRule: rule2
  }, {
    start: 1547,
    length: 1,
    convRule: rule3
  }, {
    start: 1548,
    length: 2,
    convRule: rule2
  }, {
    start: 1550,
    length: 2,
    convRule: rule13
  }, {
    start: 1552,
    length: 11,
    convRule: rule92
  }, {
    start: 1563,
    length: 1,
    convRule: rule2
  }, {
    start: 1564,
    length: 1,
    convRule: rule16
  }, {
    start: 1566,
    length: 2,
    convRule: rule2
  }, {
    start: 1568,
    length: 32,
    convRule: rule14
  }, {
    start: 1600,
    length: 1,
    convRule: rule91
  }, {
    start: 1601,
    length: 10,
    convRule: rule14
  }, {
    start: 1611,
    length: 21,
    convRule: rule92
  }, {
    start: 1632,
    length: 10,
    convRule: rule8
  }, {
    start: 1642,
    length: 4,
    convRule: rule2
  }, {
    start: 1646,
    length: 2,
    convRule: rule14
  }, {
    start: 1648,
    length: 1,
    convRule: rule92
  }, {
    start: 1649,
    length: 99,
    convRule: rule14
  }, {
    start: 1748,
    length: 1,
    convRule: rule2
  }, {
    start: 1749,
    length: 1,
    convRule: rule14
  }, {
    start: 1750,
    length: 7,
    convRule: rule92
  }, {
    start: 1757,
    length: 1,
    convRule: rule16
  }, {
    start: 1758,
    length: 1,
    convRule: rule13
  }, {
    start: 1759,
    length: 6,
    convRule: rule92
  }, {
    start: 1765,
    length: 2,
    convRule: rule91
  }, {
    start: 1767,
    length: 2,
    convRule: rule92
  }, {
    start: 1769,
    length: 1,
    convRule: rule13
  }, {
    start: 1770,
    length: 4,
    convRule: rule92
  }, {
    start: 1774,
    length: 2,
    convRule: rule14
  }, {
    start: 1776,
    length: 10,
    convRule: rule8
  }, {
    start: 1786,
    length: 3,
    convRule: rule14
  }, {
    start: 1789,
    length: 2,
    convRule: rule13
  }, {
    start: 1791,
    length: 1,
    convRule: rule14
  }, {
    start: 1792,
    length: 14,
    convRule: rule2
  }, {
    start: 1807,
    length: 1,
    convRule: rule16
  }, {
    start: 1808,
    length: 1,
    convRule: rule14
  }, {
    start: 1809,
    length: 1,
    convRule: rule92
  }, {
    start: 1810,
    length: 30,
    convRule: rule14
  }, {
    start: 1840,
    length: 27,
    convRule: rule92
  }, {
    start: 1869,
    length: 89,
    convRule: rule14
  }, {
    start: 1958,
    length: 11,
    convRule: rule92
  }, {
    start: 1969,
    length: 1,
    convRule: rule14
  }, {
    start: 1984,
    length: 10,
    convRule: rule8
  }, {
    start: 1994,
    length: 33,
    convRule: rule14
  }, {
    start: 2027,
    length: 9,
    convRule: rule92
  }, {
    start: 2036,
    length: 2,
    convRule: rule91
  }, {
    start: 2038,
    length: 1,
    convRule: rule13
  }, {
    start: 2039,
    length: 3,
    convRule: rule2
  }, {
    start: 2042,
    length: 1,
    convRule: rule91
  }, {
    start: 2045,
    length: 1,
    convRule: rule92
  }, {
    start: 2046,
    length: 2,
    convRule: rule3
  }, {
    start: 2048,
    length: 22,
    convRule: rule14
  }, {
    start: 2070,
    length: 4,
    convRule: rule92
  }, {
    start: 2074,
    length: 1,
    convRule: rule91
  }, {
    start: 2075,
    length: 9,
    convRule: rule92
  }, {
    start: 2084,
    length: 1,
    convRule: rule91
  }, {
    start: 2085,
    length: 3,
    convRule: rule92
  }, {
    start: 2088,
    length: 1,
    convRule: rule91
  }, {
    start: 2089,
    length: 5,
    convRule: rule92
  }, {
    start: 2096,
    length: 15,
    convRule: rule2
  }, {
    start: 2112,
    length: 25,
    convRule: rule14
  }, {
    start: 2137,
    length: 3,
    convRule: rule92
  }, {
    start: 2142,
    length: 1,
    convRule: rule2
  }, {
    start: 2144,
    length: 11,
    convRule: rule14
  }, {
    start: 2208,
    length: 21,
    convRule: rule14
  }, {
    start: 2230,
    length: 18,
    convRule: rule14
  }, {
    start: 2259,
    length: 15,
    convRule: rule92
  }, {
    start: 2274,
    length: 1,
    convRule: rule16
  }, {
    start: 2275,
    length: 32,
    convRule: rule92
  }, {
    start: 2307,
    length: 1,
    convRule: rule124
  }, {
    start: 2308,
    length: 54,
    convRule: rule14
  }, {
    start: 2362,
    length: 1,
    convRule: rule92
  }, {
    start: 2363,
    length: 1,
    convRule: rule124
  }, {
    start: 2364,
    length: 1,
    convRule: rule92
  }, {
    start: 2365,
    length: 1,
    convRule: rule14
  }, {
    start: 2366,
    length: 3,
    convRule: rule124
  }, {
    start: 2369,
    length: 8,
    convRule: rule92
  }, {
    start: 2377,
    length: 4,
    convRule: rule124
  }, {
    start: 2381,
    length: 1,
    convRule: rule92
  }, {
    start: 2382,
    length: 2,
    convRule: rule124
  }, {
    start: 2384,
    length: 1,
    convRule: rule14
  }, {
    start: 2385,
    length: 7,
    convRule: rule92
  }, {
    start: 2392,
    length: 10,
    convRule: rule14
  }, {
    start: 2402,
    length: 2,
    convRule: rule92
  }, {
    start: 2404,
    length: 2,
    convRule: rule2
  }, {
    start: 2406,
    length: 10,
    convRule: rule8
  }, {
    start: 2416,
    length: 1,
    convRule: rule2
  }, {
    start: 2417,
    length: 1,
    convRule: rule91
  }, {
    start: 2418,
    length: 15,
    convRule: rule14
  }, {
    start: 2433,
    length: 1,
    convRule: rule92
  }, {
    start: 2434,
    length: 2,
    convRule: rule124
  }, {
    start: 2437,
    length: 8,
    convRule: rule14
  }, {
    start: 2447,
    length: 2,
    convRule: rule14
  }, {
    start: 2451,
    length: 22,
    convRule: rule14
  }, {
    start: 2474,
    length: 7,
    convRule: rule14
  }, {
    start: 2482,
    length: 1,
    convRule: rule14
  }, {
    start: 2486,
    length: 4,
    convRule: rule14
  }, {
    start: 2492,
    length: 1,
    convRule: rule92
  }, {
    start: 2493,
    length: 1,
    convRule: rule14
  }, {
    start: 2494,
    length: 3,
    convRule: rule124
  }, {
    start: 2497,
    length: 4,
    convRule: rule92
  }, {
    start: 2503,
    length: 2,
    convRule: rule124
  }, {
    start: 2507,
    length: 2,
    convRule: rule124
  }, {
    start: 2509,
    length: 1,
    convRule: rule92
  }, {
    start: 2510,
    length: 1,
    convRule: rule14
  }, {
    start: 2519,
    length: 1,
    convRule: rule124
  }, {
    start: 2524,
    length: 2,
    convRule: rule14
  }, {
    start: 2527,
    length: 3,
    convRule: rule14
  }, {
    start: 2530,
    length: 2,
    convRule: rule92
  }, {
    start: 2534,
    length: 10,
    convRule: rule8
  }, {
    start: 2544,
    length: 2,
    convRule: rule14
  }, {
    start: 2546,
    length: 2,
    convRule: rule3
  }, {
    start: 2548,
    length: 6,
    convRule: rule17
  }, {
    start: 2554,
    length: 1,
    convRule: rule13
  }, {
    start: 2555,
    length: 1,
    convRule: rule3
  }, {
    start: 2556,
    length: 1,
    convRule: rule14
  }, {
    start: 2557,
    length: 1,
    convRule: rule2
  }, {
    start: 2558,
    length: 1,
    convRule: rule92
  }, {
    start: 2561,
    length: 2,
    convRule: rule92
  }, {
    start: 2563,
    length: 1,
    convRule: rule124
  }, {
    start: 2565,
    length: 6,
    convRule: rule14
  }, {
    start: 2575,
    length: 2,
    convRule: rule14
  }, {
    start: 2579,
    length: 22,
    convRule: rule14
  }, {
    start: 2602,
    length: 7,
    convRule: rule14
  }, {
    start: 2610,
    length: 2,
    convRule: rule14
  }, {
    start: 2613,
    length: 2,
    convRule: rule14
  }, {
    start: 2616,
    length: 2,
    convRule: rule14
  }, {
    start: 2620,
    length: 1,
    convRule: rule92
  }, {
    start: 2622,
    length: 3,
    convRule: rule124
  }, {
    start: 2625,
    length: 2,
    convRule: rule92
  }, {
    start: 2631,
    length: 2,
    convRule: rule92
  }, {
    start: 2635,
    length: 3,
    convRule: rule92
  }, {
    start: 2641,
    length: 1,
    convRule: rule92
  }, {
    start: 2649,
    length: 4,
    convRule: rule14
  }, {
    start: 2654,
    length: 1,
    convRule: rule14
  }, {
    start: 2662,
    length: 10,
    convRule: rule8
  }, {
    start: 2672,
    length: 2,
    convRule: rule92
  }, {
    start: 2674,
    length: 3,
    convRule: rule14
  }, {
    start: 2677,
    length: 1,
    convRule: rule92
  }, {
    start: 2678,
    length: 1,
    convRule: rule2
  }, {
    start: 2689,
    length: 2,
    convRule: rule92
  }, {
    start: 2691,
    length: 1,
    convRule: rule124
  }, {
    start: 2693,
    length: 9,
    convRule: rule14
  }, {
    start: 2703,
    length: 3,
    convRule: rule14
  }, {
    start: 2707,
    length: 22,
    convRule: rule14
  }, {
    start: 2730,
    length: 7,
    convRule: rule14
  }, {
    start: 2738,
    length: 2,
    convRule: rule14
  }, {
    start: 2741,
    length: 5,
    convRule: rule14
  }, {
    start: 2748,
    length: 1,
    convRule: rule92
  }, {
    start: 2749,
    length: 1,
    convRule: rule14
  }, {
    start: 2750,
    length: 3,
    convRule: rule124
  }, {
    start: 2753,
    length: 5,
    convRule: rule92
  }, {
    start: 2759,
    length: 2,
    convRule: rule92
  }, {
    start: 2761,
    length: 1,
    convRule: rule124
  }, {
    start: 2763,
    length: 2,
    convRule: rule124
  }, {
    start: 2765,
    length: 1,
    convRule: rule92
  }, {
    start: 2768,
    length: 1,
    convRule: rule14
  }, {
    start: 2784,
    length: 2,
    convRule: rule14
  }, {
    start: 2786,
    length: 2,
    convRule: rule92
  }, {
    start: 2790,
    length: 10,
    convRule: rule8
  }, {
    start: 2800,
    length: 1,
    convRule: rule2
  }, {
    start: 2801,
    length: 1,
    convRule: rule3
  }, {
    start: 2809,
    length: 1,
    convRule: rule14
  }, {
    start: 2810,
    length: 6,
    convRule: rule92
  }, {
    start: 2817,
    length: 1,
    convRule: rule92
  }, {
    start: 2818,
    length: 2,
    convRule: rule124
  }, {
    start: 2821,
    length: 8,
    convRule: rule14
  }, {
    start: 2831,
    length: 2,
    convRule: rule14
  }, {
    start: 2835,
    length: 22,
    convRule: rule14
  }, {
    start: 2858,
    length: 7,
    convRule: rule14
  }, {
    start: 2866,
    length: 2,
    convRule: rule14
  }, {
    start: 2869,
    length: 5,
    convRule: rule14
  }, {
    start: 2876,
    length: 1,
    convRule: rule92
  }, {
    start: 2877,
    length: 1,
    convRule: rule14
  }, {
    start: 2878,
    length: 1,
    convRule: rule124
  }, {
    start: 2879,
    length: 1,
    convRule: rule92
  }, {
    start: 2880,
    length: 1,
    convRule: rule124
  }, {
    start: 2881,
    length: 4,
    convRule: rule92
  }, {
    start: 2887,
    length: 2,
    convRule: rule124
  }, {
    start: 2891,
    length: 2,
    convRule: rule124
  }, {
    start: 2893,
    length: 1,
    convRule: rule92
  }, {
    start: 2901,
    length: 2,
    convRule: rule92
  }, {
    start: 2903,
    length: 1,
    convRule: rule124
  }, {
    start: 2908,
    length: 2,
    convRule: rule14
  }, {
    start: 2911,
    length: 3,
    convRule: rule14
  }, {
    start: 2914,
    length: 2,
    convRule: rule92
  }, {
    start: 2918,
    length: 10,
    convRule: rule8
  }, {
    start: 2928,
    length: 1,
    convRule: rule13
  }, {
    start: 2929,
    length: 1,
    convRule: rule14
  }, {
    start: 2930,
    length: 6,
    convRule: rule17
  }, {
    start: 2946,
    length: 1,
    convRule: rule92
  }, {
    start: 2947,
    length: 1,
    convRule: rule14
  }, {
    start: 2949,
    length: 6,
    convRule: rule14
  }, {
    start: 2958,
    length: 3,
    convRule: rule14
  }, {
    start: 2962,
    length: 4,
    convRule: rule14
  }, {
    start: 2969,
    length: 2,
    convRule: rule14
  }, {
    start: 2972,
    length: 1,
    convRule: rule14
  }, {
    start: 2974,
    length: 2,
    convRule: rule14
  }, {
    start: 2979,
    length: 2,
    convRule: rule14
  }, {
    start: 2984,
    length: 3,
    convRule: rule14
  }, {
    start: 2990,
    length: 12,
    convRule: rule14
  }, {
    start: 3006,
    length: 2,
    convRule: rule124
  }, {
    start: 3008,
    length: 1,
    convRule: rule92
  }, {
    start: 3009,
    length: 2,
    convRule: rule124
  }, {
    start: 3014,
    length: 3,
    convRule: rule124
  }, {
    start: 3018,
    length: 3,
    convRule: rule124
  }, {
    start: 3021,
    length: 1,
    convRule: rule92
  }, {
    start: 3024,
    length: 1,
    convRule: rule14
  }, {
    start: 3031,
    length: 1,
    convRule: rule124
  }, {
    start: 3046,
    length: 10,
    convRule: rule8
  }, {
    start: 3056,
    length: 3,
    convRule: rule17
  }, {
    start: 3059,
    length: 6,
    convRule: rule13
  }, {
    start: 3065,
    length: 1,
    convRule: rule3
  }, {
    start: 3066,
    length: 1,
    convRule: rule13
  }, {
    start: 3072,
    length: 1,
    convRule: rule92
  }, {
    start: 3073,
    length: 3,
    convRule: rule124
  }, {
    start: 3076,
    length: 1,
    convRule: rule92
  }, {
    start: 3077,
    length: 8,
    convRule: rule14
  }, {
    start: 3086,
    length: 3,
    convRule: rule14
  }, {
    start: 3090,
    length: 23,
    convRule: rule14
  }, {
    start: 3114,
    length: 16,
    convRule: rule14
  }, {
    start: 3133,
    length: 1,
    convRule: rule14
  }, {
    start: 3134,
    length: 3,
    convRule: rule92
  }, {
    start: 3137,
    length: 4,
    convRule: rule124
  }, {
    start: 3142,
    length: 3,
    convRule: rule92
  }, {
    start: 3146,
    length: 4,
    convRule: rule92
  }, {
    start: 3157,
    length: 2,
    convRule: rule92
  }, {
    start: 3160,
    length: 3,
    convRule: rule14
  }, {
    start: 3168,
    length: 2,
    convRule: rule14
  }, {
    start: 3170,
    length: 2,
    convRule: rule92
  }, {
    start: 3174,
    length: 10,
    convRule: rule8
  }, {
    start: 3191,
    length: 1,
    convRule: rule2
  }, {
    start: 3192,
    length: 7,
    convRule: rule17
  }, {
    start: 3199,
    length: 1,
    convRule: rule13
  }, {
    start: 3200,
    length: 1,
    convRule: rule14
  }, {
    start: 3201,
    length: 1,
    convRule: rule92
  }, {
    start: 3202,
    length: 2,
    convRule: rule124
  }, {
    start: 3204,
    length: 1,
    convRule: rule2
  }, {
    start: 3205,
    length: 8,
    convRule: rule14
  }, {
    start: 3214,
    length: 3,
    convRule: rule14
  }, {
    start: 3218,
    length: 23,
    convRule: rule14
  }, {
    start: 3242,
    length: 10,
    convRule: rule14
  }, {
    start: 3253,
    length: 5,
    convRule: rule14
  }, {
    start: 3260,
    length: 1,
    convRule: rule92
  }, {
    start: 3261,
    length: 1,
    convRule: rule14
  }, {
    start: 3262,
    length: 1,
    convRule: rule124
  }, {
    start: 3263,
    length: 1,
    convRule: rule92
  }, {
    start: 3264,
    length: 5,
    convRule: rule124
  }, {
    start: 3270,
    length: 1,
    convRule: rule92
  }, {
    start: 3271,
    length: 2,
    convRule: rule124
  }, {
    start: 3274,
    length: 2,
    convRule: rule124
  }, {
    start: 3276,
    length: 2,
    convRule: rule92
  }, {
    start: 3285,
    length: 2,
    convRule: rule124
  }, {
    start: 3294,
    length: 1,
    convRule: rule14
  }, {
    start: 3296,
    length: 2,
    convRule: rule14
  }, {
    start: 3298,
    length: 2,
    convRule: rule92
  }, {
    start: 3302,
    length: 10,
    convRule: rule8
  }, {
    start: 3313,
    length: 2,
    convRule: rule14
  }, {
    start: 3328,
    length: 2,
    convRule: rule92
  }, {
    start: 3330,
    length: 2,
    convRule: rule124
  }, {
    start: 3332,
    length: 9,
    convRule: rule14
  }, {
    start: 3342,
    length: 3,
    convRule: rule14
  }, {
    start: 3346,
    length: 41,
    convRule: rule14
  }, {
    start: 3387,
    length: 2,
    convRule: rule92
  }, {
    start: 3389,
    length: 1,
    convRule: rule14
  }, {
    start: 3390,
    length: 3,
    convRule: rule124
  }, {
    start: 3393,
    length: 4,
    convRule: rule92
  }, {
    start: 3398,
    length: 3,
    convRule: rule124
  }, {
    start: 3402,
    length: 3,
    convRule: rule124
  }, {
    start: 3405,
    length: 1,
    convRule: rule92
  }, {
    start: 3406,
    length: 1,
    convRule: rule14
  }, {
    start: 3407,
    length: 1,
    convRule: rule13
  }, {
    start: 3412,
    length: 3,
    convRule: rule14
  }, {
    start: 3415,
    length: 1,
    convRule: rule124
  }, {
    start: 3416,
    length: 7,
    convRule: rule17
  }, {
    start: 3423,
    length: 3,
    convRule: rule14
  }, {
    start: 3426,
    length: 2,
    convRule: rule92
  }, {
    start: 3430,
    length: 10,
    convRule: rule8
  }, {
    start: 3440,
    length: 9,
    convRule: rule17
  }, {
    start: 3449,
    length: 1,
    convRule: rule13
  }, {
    start: 3450,
    length: 6,
    convRule: rule14
  }, {
    start: 3457,
    length: 1,
    convRule: rule92
  }, {
    start: 3458,
    length: 2,
    convRule: rule124
  }, {
    start: 3461,
    length: 18,
    convRule: rule14
  }, {
    start: 3482,
    length: 24,
    convRule: rule14
  }, {
    start: 3507,
    length: 9,
    convRule: rule14
  }, {
    start: 3517,
    length: 1,
    convRule: rule14
  }, {
    start: 3520,
    length: 7,
    convRule: rule14
  }, {
    start: 3530,
    length: 1,
    convRule: rule92
  }, {
    start: 3535,
    length: 3,
    convRule: rule124
  }, {
    start: 3538,
    length: 3,
    convRule: rule92
  }, {
    start: 3542,
    length: 1,
    convRule: rule92
  }, {
    start: 3544,
    length: 8,
    convRule: rule124
  }, {
    start: 3558,
    length: 10,
    convRule: rule8
  }, {
    start: 3570,
    length: 2,
    convRule: rule124
  }, {
    start: 3572,
    length: 1,
    convRule: rule2
  }, {
    start: 3585,
    length: 48,
    convRule: rule14
  }, {
    start: 3633,
    length: 1,
    convRule: rule92
  }, {
    start: 3634,
    length: 2,
    convRule: rule14
  }, {
    start: 3636,
    length: 7,
    convRule: rule92
  }, {
    start: 3647,
    length: 1,
    convRule: rule3
  }, {
    start: 3648,
    length: 6,
    convRule: rule14
  }, {
    start: 3654,
    length: 1,
    convRule: rule91
  }, {
    start: 3655,
    length: 8,
    convRule: rule92
  }, {
    start: 3663,
    length: 1,
    convRule: rule2
  }, {
    start: 3664,
    length: 10,
    convRule: rule8
  }, {
    start: 3674,
    length: 2,
    convRule: rule2
  }, {
    start: 3713,
    length: 2,
    convRule: rule14
  }, {
    start: 3716,
    length: 1,
    convRule: rule14
  }, {
    start: 3718,
    length: 5,
    convRule: rule14
  }, {
    start: 3724,
    length: 24,
    convRule: rule14
  }, {
    start: 3749,
    length: 1,
    convRule: rule14
  }, {
    start: 3751,
    length: 10,
    convRule: rule14
  }, {
    start: 3761,
    length: 1,
    convRule: rule92
  }, {
    start: 3762,
    length: 2,
    convRule: rule14
  }, {
    start: 3764,
    length: 9,
    convRule: rule92
  }, {
    start: 3773,
    length: 1,
    convRule: rule14
  }, {
    start: 3776,
    length: 5,
    convRule: rule14
  }, {
    start: 3782,
    length: 1,
    convRule: rule91
  }, {
    start: 3784,
    length: 6,
    convRule: rule92
  }, {
    start: 3792,
    length: 10,
    convRule: rule8
  }, {
    start: 3804,
    length: 4,
    convRule: rule14
  }, {
    start: 3840,
    length: 1,
    convRule: rule14
  }, {
    start: 3841,
    length: 3,
    convRule: rule13
  }, {
    start: 3844,
    length: 15,
    convRule: rule2
  }, {
    start: 3859,
    length: 1,
    convRule: rule13
  }, {
    start: 3860,
    length: 1,
    convRule: rule2
  }, {
    start: 3861,
    length: 3,
    convRule: rule13
  }, {
    start: 3864,
    length: 2,
    convRule: rule92
  }, {
    start: 3866,
    length: 6,
    convRule: rule13
  }, {
    start: 3872,
    length: 10,
    convRule: rule8
  }, {
    start: 3882,
    length: 10,
    convRule: rule17
  }, {
    start: 3892,
    length: 1,
    convRule: rule13
  }, {
    start: 3893,
    length: 1,
    convRule: rule92
  }, {
    start: 3894,
    length: 1,
    convRule: rule13
  }, {
    start: 3895,
    length: 1,
    convRule: rule92
  }, {
    start: 3896,
    length: 1,
    convRule: rule13
  }, {
    start: 3897,
    length: 1,
    convRule: rule92
  }, {
    start: 3898,
    length: 1,
    convRule: rule4
  }, {
    start: 3899,
    length: 1,
    convRule: rule5
  }, {
    start: 3900,
    length: 1,
    convRule: rule4
  }, {
    start: 3901,
    length: 1,
    convRule: rule5
  }, {
    start: 3902,
    length: 2,
    convRule: rule124
  }, {
    start: 3904,
    length: 8,
    convRule: rule14
  }, {
    start: 3913,
    length: 36,
    convRule: rule14
  }, {
    start: 3953,
    length: 14,
    convRule: rule92
  }, {
    start: 3967,
    length: 1,
    convRule: rule124
  }, {
    start: 3968,
    length: 5,
    convRule: rule92
  }, {
    start: 3973,
    length: 1,
    convRule: rule2
  }, {
    start: 3974,
    length: 2,
    convRule: rule92
  }, {
    start: 3976,
    length: 5,
    convRule: rule14
  }, {
    start: 3981,
    length: 11,
    convRule: rule92
  }, {
    start: 3993,
    length: 36,
    convRule: rule92
  }, {
    start: 4030,
    length: 8,
    convRule: rule13
  }, {
    start: 4038,
    length: 1,
    convRule: rule92
  }, {
    start: 4039,
    length: 6,
    convRule: rule13
  }, {
    start: 4046,
    length: 2,
    convRule: rule13
  }, {
    start: 4048,
    length: 5,
    convRule: rule2
  }, {
    start: 4053,
    length: 4,
    convRule: rule13
  }, {
    start: 4057,
    length: 2,
    convRule: rule2
  }, {
    start: 4096,
    length: 43,
    convRule: rule14
  }, {
    start: 4139,
    length: 2,
    convRule: rule124
  }, {
    start: 4141,
    length: 4,
    convRule: rule92
  }, {
    start: 4145,
    length: 1,
    convRule: rule124
  }, {
    start: 4146,
    length: 6,
    convRule: rule92
  }, {
    start: 4152,
    length: 1,
    convRule: rule124
  }, {
    start: 4153,
    length: 2,
    convRule: rule92
  }, {
    start: 4155,
    length: 2,
    convRule: rule124
  }, {
    start: 4157,
    length: 2,
    convRule: rule92
  }, {
    start: 4159,
    length: 1,
    convRule: rule14
  }, {
    start: 4160,
    length: 10,
    convRule: rule8
  }, {
    start: 4170,
    length: 6,
    convRule: rule2
  }, {
    start: 4176,
    length: 6,
    convRule: rule14
  }, {
    start: 4182,
    length: 2,
    convRule: rule124
  }, {
    start: 4184,
    length: 2,
    convRule: rule92
  }, {
    start: 4186,
    length: 4,
    convRule: rule14
  }, {
    start: 4190,
    length: 3,
    convRule: rule92
  }, {
    start: 4193,
    length: 1,
    convRule: rule14
  }, {
    start: 4194,
    length: 3,
    convRule: rule124
  }, {
    start: 4197,
    length: 2,
    convRule: rule14
  }, {
    start: 4199,
    length: 7,
    convRule: rule124
  }, {
    start: 4206,
    length: 3,
    convRule: rule14
  }, {
    start: 4209,
    length: 4,
    convRule: rule92
  }, {
    start: 4213,
    length: 13,
    convRule: rule14
  }, {
    start: 4226,
    length: 1,
    convRule: rule92
  }, {
    start: 4227,
    length: 2,
    convRule: rule124
  }, {
    start: 4229,
    length: 2,
    convRule: rule92
  }, {
    start: 4231,
    length: 6,
    convRule: rule124
  }, {
    start: 4237,
    length: 1,
    convRule: rule92
  }, {
    start: 4238,
    length: 1,
    convRule: rule14
  }, {
    start: 4239,
    length: 1,
    convRule: rule124
  }, {
    start: 4240,
    length: 10,
    convRule: rule8
  }, {
    start: 4250,
    length: 3,
    convRule: rule124
  }, {
    start: 4253,
    length: 1,
    convRule: rule92
  }, {
    start: 4254,
    length: 2,
    convRule: rule13
  }, {
    start: 4256,
    length: 38,
    convRule: rule125
  }, {
    start: 4295,
    length: 1,
    convRule: rule125
  }, {
    start: 4301,
    length: 1,
    convRule: rule125
  }, {
    start: 4304,
    length: 43,
    convRule: rule126
  }, {
    start: 4347,
    length: 1,
    convRule: rule2
  }, {
    start: 4348,
    length: 1,
    convRule: rule91
  }, {
    start: 4349,
    length: 3,
    convRule: rule126
  }, {
    start: 4352,
    length: 329,
    convRule: rule14
  }, {
    start: 4682,
    length: 4,
    convRule: rule14
  }, {
    start: 4688,
    length: 7,
    convRule: rule14
  }, {
    start: 4696,
    length: 1,
    convRule: rule14
  }, {
    start: 4698,
    length: 4,
    convRule: rule14
  }, {
    start: 4704,
    length: 41,
    convRule: rule14
  }, {
    start: 4746,
    length: 4,
    convRule: rule14
  }, {
    start: 4752,
    length: 33,
    convRule: rule14
  }, {
    start: 4786,
    length: 4,
    convRule: rule14
  }, {
    start: 4792,
    length: 7,
    convRule: rule14
  }, {
    start: 4800,
    length: 1,
    convRule: rule14
  }, {
    start: 4802,
    length: 4,
    convRule: rule14
  }, {
    start: 4808,
    length: 15,
    convRule: rule14
  }, {
    start: 4824,
    length: 57,
    convRule: rule14
  }, {
    start: 4882,
    length: 4,
    convRule: rule14
  }, {
    start: 4888,
    length: 67,
    convRule: rule14
  }, {
    start: 4957,
    length: 3,
    convRule: rule92
  }, {
    start: 4960,
    length: 9,
    convRule: rule2
  }, {
    start: 4969,
    length: 20,
    convRule: rule17
  }, {
    start: 4992,
    length: 16,
    convRule: rule14
  }, {
    start: 5008,
    length: 10,
    convRule: rule13
  }, {
    start: 5024,
    length: 80,
    convRule: rule127
  }, {
    start: 5104,
    length: 6,
    convRule: rule104
  }, {
    start: 5112,
    length: 6,
    convRule: rule110
  }, {
    start: 5120,
    length: 1,
    convRule: rule7
  }, {
    start: 5121,
    length: 620,
    convRule: rule14
  }, {
    start: 5741,
    length: 1,
    convRule: rule13
  }, {
    start: 5742,
    length: 1,
    convRule: rule2
  }, {
    start: 5743,
    length: 17,
    convRule: rule14
  }, {
    start: 5760,
    length: 1,
    convRule: rule1
  }, {
    start: 5761,
    length: 26,
    convRule: rule14
  }, {
    start: 5787,
    length: 1,
    convRule: rule4
  }, {
    start: 5788,
    length: 1,
    convRule: rule5
  }, {
    start: 5792,
    length: 75,
    convRule: rule14
  }, {
    start: 5867,
    length: 3,
    convRule: rule2
  }, {
    start: 5870,
    length: 3,
    convRule: rule128
  }, {
    start: 5873,
    length: 8,
    convRule: rule14
  }, {
    start: 5888,
    length: 13,
    convRule: rule14
  }, {
    start: 5902,
    length: 4,
    convRule: rule14
  }, {
    start: 5906,
    length: 3,
    convRule: rule92
  }, {
    start: 5920,
    length: 18,
    convRule: rule14
  }, {
    start: 5938,
    length: 3,
    convRule: rule92
  }, {
    start: 5941,
    length: 2,
    convRule: rule2
  }, {
    start: 5952,
    length: 18,
    convRule: rule14
  }, {
    start: 5970,
    length: 2,
    convRule: rule92
  }, {
    start: 5984,
    length: 13,
    convRule: rule14
  }, {
    start: 5998,
    length: 3,
    convRule: rule14
  }, {
    start: 6002,
    length: 2,
    convRule: rule92
  }, {
    start: 6016,
    length: 52,
    convRule: rule14
  }, {
    start: 6068,
    length: 2,
    convRule: rule92
  }, {
    start: 6070,
    length: 1,
    convRule: rule124
  }, {
    start: 6071,
    length: 7,
    convRule: rule92
  }, {
    start: 6078,
    length: 8,
    convRule: rule124
  }, {
    start: 6086,
    length: 1,
    convRule: rule92
  }, {
    start: 6087,
    length: 2,
    convRule: rule124
  }, {
    start: 6089,
    length: 11,
    convRule: rule92
  }, {
    start: 6100,
    length: 3,
    convRule: rule2
  }, {
    start: 6103,
    length: 1,
    convRule: rule91
  }, {
    start: 6104,
    length: 3,
    convRule: rule2
  }, {
    start: 6107,
    length: 1,
    convRule: rule3
  }, {
    start: 6108,
    length: 1,
    convRule: rule14
  }, {
    start: 6109,
    length: 1,
    convRule: rule92
  }, {
    start: 6112,
    length: 10,
    convRule: rule8
  }, {
    start: 6128,
    length: 10,
    convRule: rule17
  }, {
    start: 6144,
    length: 6,
    convRule: rule2
  }, {
    start: 6150,
    length: 1,
    convRule: rule7
  }, {
    start: 6151,
    length: 4,
    convRule: rule2
  }, {
    start: 6155,
    length: 3,
    convRule: rule92
  }, {
    start: 6158,
    length: 1,
    convRule: rule16
  }, {
    start: 6160,
    length: 10,
    convRule: rule8
  }, {
    start: 6176,
    length: 35,
    convRule: rule14
  }, {
    start: 6211,
    length: 1,
    convRule: rule91
  }, {
    start: 6212,
    length: 53,
    convRule: rule14
  }, {
    start: 6272,
    length: 5,
    convRule: rule14
  }, {
    start: 6277,
    length: 2,
    convRule: rule92
  }, {
    start: 6279,
    length: 34,
    convRule: rule14
  }, {
    start: 6313,
    length: 1,
    convRule: rule92
  }, {
    start: 6314,
    length: 1,
    convRule: rule14
  }, {
    start: 6320,
    length: 70,
    convRule: rule14
  }, {
    start: 6400,
    length: 31,
    convRule: rule14
  }, {
    start: 6432,
    length: 3,
    convRule: rule92
  }, {
    start: 6435,
    length: 4,
    convRule: rule124
  }, {
    start: 6439,
    length: 2,
    convRule: rule92
  }, {
    start: 6441,
    length: 3,
    convRule: rule124
  }, {
    start: 6448,
    length: 2,
    convRule: rule124
  }, {
    start: 6450,
    length: 1,
    convRule: rule92
  }, {
    start: 6451,
    length: 6,
    convRule: rule124
  }, {
    start: 6457,
    length: 3,
    convRule: rule92
  }, {
    start: 6464,
    length: 1,
    convRule: rule13
  }, {
    start: 6468,
    length: 2,
    convRule: rule2
  }, {
    start: 6470,
    length: 10,
    convRule: rule8
  }, {
    start: 6480,
    length: 30,
    convRule: rule14
  }, {
    start: 6512,
    length: 5,
    convRule: rule14
  }, {
    start: 6528,
    length: 44,
    convRule: rule14
  }, {
    start: 6576,
    length: 26,
    convRule: rule14
  }, {
    start: 6608,
    length: 10,
    convRule: rule8
  }, {
    start: 6618,
    length: 1,
    convRule: rule17
  }, {
    start: 6622,
    length: 34,
    convRule: rule13
  }, {
    start: 6656,
    length: 23,
    convRule: rule14
  }, {
    start: 6679,
    length: 2,
    convRule: rule92
  }, {
    start: 6681,
    length: 2,
    convRule: rule124
  }, {
    start: 6683,
    length: 1,
    convRule: rule92
  }, {
    start: 6686,
    length: 2,
    convRule: rule2
  }, {
    start: 6688,
    length: 53,
    convRule: rule14
  }, {
    start: 6741,
    length: 1,
    convRule: rule124
  }, {
    start: 6742,
    length: 1,
    convRule: rule92
  }, {
    start: 6743,
    length: 1,
    convRule: rule124
  }, {
    start: 6744,
    length: 7,
    convRule: rule92
  }, {
    start: 6752,
    length: 1,
    convRule: rule92
  }, {
    start: 6753,
    length: 1,
    convRule: rule124
  }, {
    start: 6754,
    length: 1,
    convRule: rule92
  }, {
    start: 6755,
    length: 2,
    convRule: rule124
  }, {
    start: 6757,
    length: 8,
    convRule: rule92
  }, {
    start: 6765,
    length: 6,
    convRule: rule124
  }, {
    start: 6771,
    length: 10,
    convRule: rule92
  }, {
    start: 6783,
    length: 1,
    convRule: rule92
  }, {
    start: 6784,
    length: 10,
    convRule: rule8
  }, {
    start: 6800,
    length: 10,
    convRule: rule8
  }, {
    start: 6816,
    length: 7,
    convRule: rule2
  }, {
    start: 6823,
    length: 1,
    convRule: rule91
  }, {
    start: 6824,
    length: 6,
    convRule: rule2
  }, {
    start: 6832,
    length: 14,
    convRule: rule92
  }, {
    start: 6846,
    length: 1,
    convRule: rule119
  }, {
    start: 6847,
    length: 2,
    convRule: rule92
  }, {
    start: 6912,
    length: 4,
    convRule: rule92
  }, {
    start: 6916,
    length: 1,
    convRule: rule124
  }, {
    start: 6917,
    length: 47,
    convRule: rule14
  }, {
    start: 6964,
    length: 1,
    convRule: rule92
  }, {
    start: 6965,
    length: 1,
    convRule: rule124
  }, {
    start: 6966,
    length: 5,
    convRule: rule92
  }, {
    start: 6971,
    length: 1,
    convRule: rule124
  }, {
    start: 6972,
    length: 1,
    convRule: rule92
  }, {
    start: 6973,
    length: 5,
    convRule: rule124
  }, {
    start: 6978,
    length: 1,
    convRule: rule92
  }, {
    start: 6979,
    length: 2,
    convRule: rule124
  }, {
    start: 6981,
    length: 7,
    convRule: rule14
  }, {
    start: 6992,
    length: 10,
    convRule: rule8
  }, {
    start: 7002,
    length: 7,
    convRule: rule2
  }, {
    start: 7009,
    length: 10,
    convRule: rule13
  }, {
    start: 7019,
    length: 9,
    convRule: rule92
  }, {
    start: 7028,
    length: 9,
    convRule: rule13
  }, {
    start: 7040,
    length: 2,
    convRule: rule92
  }, {
    start: 7042,
    length: 1,
    convRule: rule124
  }, {
    start: 7043,
    length: 30,
    convRule: rule14
  }, {
    start: 7073,
    length: 1,
    convRule: rule124
  }, {
    start: 7074,
    length: 4,
    convRule: rule92
  }, {
    start: 7078,
    length: 2,
    convRule: rule124
  }, {
    start: 7080,
    length: 2,
    convRule: rule92
  }, {
    start: 7082,
    length: 1,
    convRule: rule124
  }, {
    start: 7083,
    length: 3,
    convRule: rule92
  }, {
    start: 7086,
    length: 2,
    convRule: rule14
  }, {
    start: 7088,
    length: 10,
    convRule: rule8
  }, {
    start: 7098,
    length: 44,
    convRule: rule14
  }, {
    start: 7142,
    length: 1,
    convRule: rule92
  }, {
    start: 7143,
    length: 1,
    convRule: rule124
  }, {
    start: 7144,
    length: 2,
    convRule: rule92
  }, {
    start: 7146,
    length: 3,
    convRule: rule124
  }, {
    start: 7149,
    length: 1,
    convRule: rule92
  }, {
    start: 7150,
    length: 1,
    convRule: rule124
  }, {
    start: 7151,
    length: 3,
    convRule: rule92
  }, {
    start: 7154,
    length: 2,
    convRule: rule124
  }, {
    start: 7164,
    length: 4,
    convRule: rule2
  }, {
    start: 7168,
    length: 36,
    convRule: rule14
  }, {
    start: 7204,
    length: 8,
    convRule: rule124
  }, {
    start: 7212,
    length: 8,
    convRule: rule92
  }, {
    start: 7220,
    length: 2,
    convRule: rule124
  }, {
    start: 7222,
    length: 2,
    convRule: rule92
  }, {
    start: 7227,
    length: 5,
    convRule: rule2
  }, {
    start: 7232,
    length: 10,
    convRule: rule8
  }, {
    start: 7245,
    length: 3,
    convRule: rule14
  }, {
    start: 7248,
    length: 10,
    convRule: rule8
  }, {
    start: 7258,
    length: 30,
    convRule: rule14
  }, {
    start: 7288,
    length: 6,
    convRule: rule91
  }, {
    start: 7294,
    length: 2,
    convRule: rule2
  }, {
    start: 7296,
    length: 1,
    convRule: rule129
  }, {
    start: 7297,
    length: 1,
    convRule: rule130
  }, {
    start: 7298,
    length: 1,
    convRule: rule131
  }, {
    start: 7299,
    length: 2,
    convRule: rule132
  }, {
    start: 7301,
    length: 1,
    convRule: rule133
  }, {
    start: 7302,
    length: 1,
    convRule: rule134
  }, {
    start: 7303,
    length: 1,
    convRule: rule135
  }, {
    start: 7304,
    length: 1,
    convRule: rule136
  }, {
    start: 7312,
    length: 43,
    convRule: rule137
  }, {
    start: 7357,
    length: 3,
    convRule: rule137
  }, {
    start: 7360,
    length: 8,
    convRule: rule2
  }, {
    start: 7376,
    length: 3,
    convRule: rule92
  }, {
    start: 7379,
    length: 1,
    convRule: rule2
  }, {
    start: 7380,
    length: 13,
    convRule: rule92
  }, {
    start: 7393,
    length: 1,
    convRule: rule124
  }, {
    start: 7394,
    length: 7,
    convRule: rule92
  }, {
    start: 7401,
    length: 4,
    convRule: rule14
  }, {
    start: 7405,
    length: 1,
    convRule: rule92
  }, {
    start: 7406,
    length: 6,
    convRule: rule14
  }, {
    start: 7412,
    length: 1,
    convRule: rule92
  }, {
    start: 7413,
    length: 2,
    convRule: rule14
  }, {
    start: 7415,
    length: 1,
    convRule: rule124
  }, {
    start: 7416,
    length: 2,
    convRule: rule92
  }, {
    start: 7418,
    length: 1,
    convRule: rule14
  }, {
    start: 7424,
    length: 44,
    convRule: rule20
  }, {
    start: 7468,
    length: 63,
    convRule: rule91
  }, {
    start: 7531,
    length: 13,
    convRule: rule20
  }, {
    start: 7544,
    length: 1,
    convRule: rule91
  }, {
    start: 7545,
    length: 1,
    convRule: rule138
  }, {
    start: 7546,
    length: 3,
    convRule: rule20
  }, {
    start: 7549,
    length: 1,
    convRule: rule139
  }, {
    start: 7550,
    length: 16,
    convRule: rule20
  }, {
    start: 7566,
    length: 1,
    convRule: rule140
  }, {
    start: 7567,
    length: 12,
    convRule: rule20
  }, {
    start: 7579,
    length: 37,
    convRule: rule91
  }, {
    start: 7616,
    length: 58,
    convRule: rule92
  }, {
    start: 7675,
    length: 5,
    convRule: rule92
  }, {
    start: 7680,
    length: 1,
    convRule: rule22
  }, {
    start: 7681,
    length: 1,
    convRule: rule23
  }, {
    start: 7682,
    length: 1,
    convRule: rule22
  }, {
    start: 7683,
    length: 1,
    convRule: rule23
  }, {
    start: 7684,
    length: 1,
    convRule: rule22
  }, {
    start: 7685,
    length: 1,
    convRule: rule23
  }, {
    start: 7686,
    length: 1,
    convRule: rule22
  }, {
    start: 7687,
    length: 1,
    convRule: rule23
  }, {
    start: 7688,
    length: 1,
    convRule: rule22
  }, {
    start: 7689,
    length: 1,
    convRule: rule23
  }, {
    start: 7690,
    length: 1,
    convRule: rule22
  }, {
    start: 7691,
    length: 1,
    convRule: rule23
  }, {
    start: 7692,
    length: 1,
    convRule: rule22
  }, {
    start: 7693,
    length: 1,
    convRule: rule23
  }, {
    start: 7694,
    length: 1,
    convRule: rule22
  }, {
    start: 7695,
    length: 1,
    convRule: rule23
  }, {
    start: 7696,
    length: 1,
    convRule: rule22
  }, {
    start: 7697,
    length: 1,
    convRule: rule23
  }, {
    start: 7698,
    length: 1,
    convRule: rule22
  }, {
    start: 7699,
    length: 1,
    convRule: rule23
  }, {
    start: 7700,
    length: 1,
    convRule: rule22
  }, {
    start: 7701,
    length: 1,
    convRule: rule23
  }, {
    start: 7702,
    length: 1,
    convRule: rule22
  }, {
    start: 7703,
    length: 1,
    convRule: rule23
  }, {
    start: 7704,
    length: 1,
    convRule: rule22
  }, {
    start: 7705,
    length: 1,
    convRule: rule23
  }, {
    start: 7706,
    length: 1,
    convRule: rule22
  }, {
    start: 7707,
    length: 1,
    convRule: rule23
  }, {
    start: 7708,
    length: 1,
    convRule: rule22
  }, {
    start: 7709,
    length: 1,
    convRule: rule23
  }, {
    start: 7710,
    length: 1,
    convRule: rule22
  }, {
    start: 7711,
    length: 1,
    convRule: rule23
  }, {
    start: 7712,
    length: 1,
    convRule: rule22
  }, {
    start: 7713,
    length: 1,
    convRule: rule23
  }, {
    start: 7714,
    length: 1,
    convRule: rule22
  }, {
    start: 7715,
    length: 1,
    convRule: rule23
  }, {
    start: 7716,
    length: 1,
    convRule: rule22
  }, {
    start: 7717,
    length: 1,
    convRule: rule23
  }, {
    start: 7718,
    length: 1,
    convRule: rule22
  }, {
    start: 7719,
    length: 1,
    convRule: rule23
  }, {
    start: 7720,
    length: 1,
    convRule: rule22
  }, {
    start: 7721,
    length: 1,
    convRule: rule23
  }, {
    start: 7722,
    length: 1,
    convRule: rule22
  }, {
    start: 7723,
    length: 1,
    convRule: rule23
  }, {
    start: 7724,
    length: 1,
    convRule: rule22
  }, {
    start: 7725,
    length: 1,
    convRule: rule23
  }, {
    start: 7726,
    length: 1,
    convRule: rule22
  }, {
    start: 7727,
    length: 1,
    convRule: rule23
  }, {
    start: 7728,
    length: 1,
    convRule: rule22
  }, {
    start: 7729,
    length: 1,
    convRule: rule23
  }, {
    start: 7730,
    length: 1,
    convRule: rule22
  }, {
    start: 7731,
    length: 1,
    convRule: rule23
  }, {
    start: 7732,
    length: 1,
    convRule: rule22
  }, {
    start: 7733,
    length: 1,
    convRule: rule23
  }, {
    start: 7734,
    length: 1,
    convRule: rule22
  }, {
    start: 7735,
    length: 1,
    convRule: rule23
  }, {
    start: 7736,
    length: 1,
    convRule: rule22
  }, {
    start: 7737,
    length: 1,
    convRule: rule23
  }, {
    start: 7738,
    length: 1,
    convRule: rule22
  }, {
    start: 7739,
    length: 1,
    convRule: rule23
  }, {
    start: 7740,
    length: 1,
    convRule: rule22
  }, {
    start: 7741,
    length: 1,
    convRule: rule23
  }, {
    start: 7742,
    length: 1,
    convRule: rule22
  }, {
    start: 7743,
    length: 1,
    convRule: rule23
  }, {
    start: 7744,
    length: 1,
    convRule: rule22
  }, {
    start: 7745,
    length: 1,
    convRule: rule23
  }, {
    start: 7746,
    length: 1,
    convRule: rule22
  }, {
    start: 7747,
    length: 1,
    convRule: rule23
  }, {
    start: 7748,
    length: 1,
    convRule: rule22
  }, {
    start: 7749,
    length: 1,
    convRule: rule23
  }, {
    start: 7750,
    length: 1,
    convRule: rule22
  }, {
    start: 7751,
    length: 1,
    convRule: rule23
  }, {
    start: 7752,
    length: 1,
    convRule: rule22
  }, {
    start: 7753,
    length: 1,
    convRule: rule23
  }, {
    start: 7754,
    length: 1,
    convRule: rule22
  }, {
    start: 7755,
    length: 1,
    convRule: rule23
  }, {
    start: 7756,
    length: 1,
    convRule: rule22
  }, {
    start: 7757,
    length: 1,
    convRule: rule23
  }, {
    start: 7758,
    length: 1,
    convRule: rule22
  }, {
    start: 7759,
    length: 1,
    convRule: rule23
  }, {
    start: 7760,
    length: 1,
    convRule: rule22
  }, {
    start: 7761,
    length: 1,
    convRule: rule23
  }, {
    start: 7762,
    length: 1,
    convRule: rule22
  }, {
    start: 7763,
    length: 1,
    convRule: rule23
  }, {
    start: 7764,
    length: 1,
    convRule: rule22
  }, {
    start: 7765,
    length: 1,
    convRule: rule23
  }, {
    start: 7766,
    length: 1,
    convRule: rule22
  }, {
    start: 7767,
    length: 1,
    convRule: rule23
  }, {
    start: 7768,
    length: 1,
    convRule: rule22
  }, {
    start: 7769,
    length: 1,
    convRule: rule23
  }, {
    start: 7770,
    length: 1,
    convRule: rule22
  }, {
    start: 7771,
    length: 1,
    convRule: rule23
  }, {
    start: 7772,
    length: 1,
    convRule: rule22
  }, {
    start: 7773,
    length: 1,
    convRule: rule23
  }, {
    start: 7774,
    length: 1,
    convRule: rule22
  }, {
    start: 7775,
    length: 1,
    convRule: rule23
  }, {
    start: 7776,
    length: 1,
    convRule: rule22
  }, {
    start: 7777,
    length: 1,
    convRule: rule23
  }, {
    start: 7778,
    length: 1,
    convRule: rule22
  }, {
    start: 7779,
    length: 1,
    convRule: rule23
  }, {
    start: 7780,
    length: 1,
    convRule: rule22
  }, {
    start: 7781,
    length: 1,
    convRule: rule23
  }, {
    start: 7782,
    length: 1,
    convRule: rule22
  }, {
    start: 7783,
    length: 1,
    convRule: rule23
  }, {
    start: 7784,
    length: 1,
    convRule: rule22
  }, {
    start: 7785,
    length: 1,
    convRule: rule23
  }, {
    start: 7786,
    length: 1,
    convRule: rule22
  }, {
    start: 7787,
    length: 1,
    convRule: rule23
  }, {
    start: 7788,
    length: 1,
    convRule: rule22
  }, {
    start: 7789,
    length: 1,
    convRule: rule23
  }, {
    start: 7790,
    length: 1,
    convRule: rule22
  }, {
    start: 7791,
    length: 1,
    convRule: rule23
  }, {
    start: 7792,
    length: 1,
    convRule: rule22
  }, {
    start: 7793,
    length: 1,
    convRule: rule23
  }, {
    start: 7794,
    length: 1,
    convRule: rule22
  }, {
    start: 7795,
    length: 1,
    convRule: rule23
  }, {
    start: 7796,
    length: 1,
    convRule: rule22
  }, {
    start: 7797,
    length: 1,
    convRule: rule23
  }, {
    start: 7798,
    length: 1,
    convRule: rule22
  }, {
    start: 7799,
    length: 1,
    convRule: rule23
  }, {
    start: 7800,
    length: 1,
    convRule: rule22
  }, {
    start: 7801,
    length: 1,
    convRule: rule23
  }, {
    start: 7802,
    length: 1,
    convRule: rule22
  }, {
    start: 7803,
    length: 1,
    convRule: rule23
  }, {
    start: 7804,
    length: 1,
    convRule: rule22
  }, {
    start: 7805,
    length: 1,
    convRule: rule23
  }, {
    start: 7806,
    length: 1,
    convRule: rule22
  }, {
    start: 7807,
    length: 1,
    convRule: rule23
  }, {
    start: 7808,
    length: 1,
    convRule: rule22
  }, {
    start: 7809,
    length: 1,
    convRule: rule23
  }, {
    start: 7810,
    length: 1,
    convRule: rule22
  }, {
    start: 7811,
    length: 1,
    convRule: rule23
  }, {
    start: 7812,
    length: 1,
    convRule: rule22
  }, {
    start: 7813,
    length: 1,
    convRule: rule23
  }, {
    start: 7814,
    length: 1,
    convRule: rule22
  }, {
    start: 7815,
    length: 1,
    convRule: rule23
  }, {
    start: 7816,
    length: 1,
    convRule: rule22
  }, {
    start: 7817,
    length: 1,
    convRule: rule23
  }, {
    start: 7818,
    length: 1,
    convRule: rule22
  }, {
    start: 7819,
    length: 1,
    convRule: rule23
  }, {
    start: 7820,
    length: 1,
    convRule: rule22
  }, {
    start: 7821,
    length: 1,
    convRule: rule23
  }, {
    start: 7822,
    length: 1,
    convRule: rule22
  }, {
    start: 7823,
    length: 1,
    convRule: rule23
  }, {
    start: 7824,
    length: 1,
    convRule: rule22
  }, {
    start: 7825,
    length: 1,
    convRule: rule23
  }, {
    start: 7826,
    length: 1,
    convRule: rule22
  }, {
    start: 7827,
    length: 1,
    convRule: rule23
  }, {
    start: 7828,
    length: 1,
    convRule: rule22
  }, {
    start: 7829,
    length: 1,
    convRule: rule23
  }, {
    start: 7830,
    length: 5,
    convRule: rule20
  }, {
    start: 7835,
    length: 1,
    convRule: rule141
  }, {
    start: 7836,
    length: 2,
    convRule: rule20
  }, {
    start: 7838,
    length: 1,
    convRule: rule142
  }, {
    start: 7839,
    length: 1,
    convRule: rule20
  }, {
    start: 7840,
    length: 1,
    convRule: rule22
  }, {
    start: 7841,
    length: 1,
    convRule: rule23
  }, {
    start: 7842,
    length: 1,
    convRule: rule22
  }, {
    start: 7843,
    length: 1,
    convRule: rule23
  }, {
    start: 7844,
    length: 1,
    convRule: rule22
  }, {
    start: 7845,
    length: 1,
    convRule: rule23
  }, {
    start: 7846,
    length: 1,
    convRule: rule22
  }, {
    start: 7847,
    length: 1,
    convRule: rule23
  }, {
    start: 7848,
    length: 1,
    convRule: rule22
  }, {
    start: 7849,
    length: 1,
    convRule: rule23
  }, {
    start: 7850,
    length: 1,
    convRule: rule22
  }, {
    start: 7851,
    length: 1,
    convRule: rule23
  }, {
    start: 7852,
    length: 1,
    convRule: rule22
  }, {
    start: 7853,
    length: 1,
    convRule: rule23
  }, {
    start: 7854,
    length: 1,
    convRule: rule22
  }, {
    start: 7855,
    length: 1,
    convRule: rule23
  }, {
    start: 7856,
    length: 1,
    convRule: rule22
  }, {
    start: 7857,
    length: 1,
    convRule: rule23
  }, {
    start: 7858,
    length: 1,
    convRule: rule22
  }, {
    start: 7859,
    length: 1,
    convRule: rule23
  }, {
    start: 7860,
    length: 1,
    convRule: rule22
  }, {
    start: 7861,
    length: 1,
    convRule: rule23
  }, {
    start: 7862,
    length: 1,
    convRule: rule22
  }, {
    start: 7863,
    length: 1,
    convRule: rule23
  }, {
    start: 7864,
    length: 1,
    convRule: rule22
  }, {
    start: 7865,
    length: 1,
    convRule: rule23
  }, {
    start: 7866,
    length: 1,
    convRule: rule22
  }, {
    start: 7867,
    length: 1,
    convRule: rule23
  }, {
    start: 7868,
    length: 1,
    convRule: rule22
  }, {
    start: 7869,
    length: 1,
    convRule: rule23
  }, {
    start: 7870,
    length: 1,
    convRule: rule22
  }, {
    start: 7871,
    length: 1,
    convRule: rule23
  }, {
    start: 7872,
    length: 1,
    convRule: rule22
  }, {
    start: 7873,
    length: 1,
    convRule: rule23
  }, {
    start: 7874,
    length: 1,
    convRule: rule22
  }, {
    start: 7875,
    length: 1,
    convRule: rule23
  }, {
    start: 7876,
    length: 1,
    convRule: rule22
  }, {
    start: 7877,
    length: 1,
    convRule: rule23
  }, {
    start: 7878,
    length: 1,
    convRule: rule22
  }, {
    start: 7879,
    length: 1,
    convRule: rule23
  }, {
    start: 7880,
    length: 1,
    convRule: rule22
  }, {
    start: 7881,
    length: 1,
    convRule: rule23
  }, {
    start: 7882,
    length: 1,
    convRule: rule22
  }, {
    start: 7883,
    length: 1,
    convRule: rule23
  }, {
    start: 7884,
    length: 1,
    convRule: rule22
  }, {
    start: 7885,
    length: 1,
    convRule: rule23
  }, {
    start: 7886,
    length: 1,
    convRule: rule22
  }, {
    start: 7887,
    length: 1,
    convRule: rule23
  }, {
    start: 7888,
    length: 1,
    convRule: rule22
  }, {
    start: 7889,
    length: 1,
    convRule: rule23
  }, {
    start: 7890,
    length: 1,
    convRule: rule22
  }, {
    start: 7891,
    length: 1,
    convRule: rule23
  }, {
    start: 7892,
    length: 1,
    convRule: rule22
  }, {
    start: 7893,
    length: 1,
    convRule: rule23
  }, {
    start: 7894,
    length: 1,
    convRule: rule22
  }, {
    start: 7895,
    length: 1,
    convRule: rule23
  }, {
    start: 7896,
    length: 1,
    convRule: rule22
  }, {
    start: 7897,
    length: 1,
    convRule: rule23
  }, {
    start: 7898,
    length: 1,
    convRule: rule22
  }, {
    start: 7899,
    length: 1,
    convRule: rule23
  }, {
    start: 7900,
    length: 1,
    convRule: rule22
  }, {
    start: 7901,
    length: 1,
    convRule: rule23
  }, {
    start: 7902,
    length: 1,
    convRule: rule22
  }, {
    start: 7903,
    length: 1,
    convRule: rule23
  }, {
    start: 7904,
    length: 1,
    convRule: rule22
  }, {
    start: 7905,
    length: 1,
    convRule: rule23
  }, {
    start: 7906,
    length: 1,
    convRule: rule22
  }, {
    start: 7907,
    length: 1,
    convRule: rule23
  }, {
    start: 7908,
    length: 1,
    convRule: rule22
  }, {
    start: 7909,
    length: 1,
    convRule: rule23
  }, {
    start: 7910,
    length: 1,
    convRule: rule22
  }, {
    start: 7911,
    length: 1,
    convRule: rule23
  }, {
    start: 7912,
    length: 1,
    convRule: rule22
  }, {
    start: 7913,
    length: 1,
    convRule: rule23
  }, {
    start: 7914,
    length: 1,
    convRule: rule22
  }, {
    start: 7915,
    length: 1,
    convRule: rule23
  }, {
    start: 7916,
    length: 1,
    convRule: rule22
  }, {
    start: 7917,
    length: 1,
    convRule: rule23
  }, {
    start: 7918,
    length: 1,
    convRule: rule22
  }, {
    start: 7919,
    length: 1,
    convRule: rule23
  }, {
    start: 7920,
    length: 1,
    convRule: rule22
  }, {
    start: 7921,
    length: 1,
    convRule: rule23
  }, {
    start: 7922,
    length: 1,
    convRule: rule22
  }, {
    start: 7923,
    length: 1,
    convRule: rule23
  }, {
    start: 7924,
    length: 1,
    convRule: rule22
  }, {
    start: 7925,
    length: 1,
    convRule: rule23
  }, {
    start: 7926,
    length: 1,
    convRule: rule22
  }, {
    start: 7927,
    length: 1,
    convRule: rule23
  }, {
    start: 7928,
    length: 1,
    convRule: rule22
  }, {
    start: 7929,
    length: 1,
    convRule: rule23
  }, {
    start: 7930,
    length: 1,
    convRule: rule22
  }, {
    start: 7931,
    length: 1,
    convRule: rule23
  }, {
    start: 7932,
    length: 1,
    convRule: rule22
  }, {
    start: 7933,
    length: 1,
    convRule: rule23
  }, {
    start: 7934,
    length: 1,
    convRule: rule22
  }, {
    start: 7935,
    length: 1,
    convRule: rule23
  }, {
    start: 7936,
    length: 8,
    convRule: rule143
  }, {
    start: 7944,
    length: 8,
    convRule: rule144
  }, {
    start: 7952,
    length: 6,
    convRule: rule143
  }, {
    start: 7960,
    length: 6,
    convRule: rule144
  }, {
    start: 7968,
    length: 8,
    convRule: rule143
  }, {
    start: 7976,
    length: 8,
    convRule: rule144
  }, {
    start: 7984,
    length: 8,
    convRule: rule143
  }, {
    start: 7992,
    length: 8,
    convRule: rule144
  }, {
    start: 8e3,
    length: 6,
    convRule: rule143
  }, {
    start: 8008,
    length: 6,
    convRule: rule144
  }, {
    start: 8016,
    length: 1,
    convRule: rule20
  }, {
    start: 8017,
    length: 1,
    convRule: rule143
  }, {
    start: 8018,
    length: 1,
    convRule: rule20
  }, {
    start: 8019,
    length: 1,
    convRule: rule143
  }, {
    start: 8020,
    length: 1,
    convRule: rule20
  }, {
    start: 8021,
    length: 1,
    convRule: rule143
  }, {
    start: 8022,
    length: 1,
    convRule: rule20
  }, {
    start: 8023,
    length: 1,
    convRule: rule143
  }, {
    start: 8025,
    length: 1,
    convRule: rule144
  }, {
    start: 8027,
    length: 1,
    convRule: rule144
  }, {
    start: 8029,
    length: 1,
    convRule: rule144
  }, {
    start: 8031,
    length: 1,
    convRule: rule144
  }, {
    start: 8032,
    length: 8,
    convRule: rule143
  }, {
    start: 8040,
    length: 8,
    convRule: rule144
  }, {
    start: 8048,
    length: 2,
    convRule: rule145
  }, {
    start: 8050,
    length: 4,
    convRule: rule146
  }, {
    start: 8054,
    length: 2,
    convRule: rule147
  }, {
    start: 8056,
    length: 2,
    convRule: rule148
  }, {
    start: 8058,
    length: 2,
    convRule: rule149
  }, {
    start: 8060,
    length: 2,
    convRule: rule150
  }, {
    start: 8064,
    length: 8,
    convRule: rule143
  }, {
    start: 8072,
    length: 8,
    convRule: rule151
  }, {
    start: 8080,
    length: 8,
    convRule: rule143
  }, {
    start: 8088,
    length: 8,
    convRule: rule151
  }, {
    start: 8096,
    length: 8,
    convRule: rule143
  }, {
    start: 8104,
    length: 8,
    convRule: rule151
  }, {
    start: 8112,
    length: 2,
    convRule: rule143
  }, {
    start: 8114,
    length: 1,
    convRule: rule20
  }, {
    start: 8115,
    length: 1,
    convRule: rule152
  }, {
    start: 8116,
    length: 1,
    convRule: rule20
  }, {
    start: 8118,
    length: 2,
    convRule: rule20
  }, {
    start: 8120,
    length: 2,
    convRule: rule144
  }, {
    start: 8122,
    length: 2,
    convRule: rule153
  }, {
    start: 8124,
    length: 1,
    convRule: rule154
  }, {
    start: 8125,
    length: 1,
    convRule: rule10
  }, {
    start: 8126,
    length: 1,
    convRule: rule155
  }, {
    start: 8127,
    length: 3,
    convRule: rule10
  }, {
    start: 8130,
    length: 1,
    convRule: rule20
  }, {
    start: 8131,
    length: 1,
    convRule: rule152
  }, {
    start: 8132,
    length: 1,
    convRule: rule20
  }, {
    start: 8134,
    length: 2,
    convRule: rule20
  }, {
    start: 8136,
    length: 4,
    convRule: rule156
  }, {
    start: 8140,
    length: 1,
    convRule: rule154
  }, {
    start: 8141,
    length: 3,
    convRule: rule10
  }, {
    start: 8144,
    length: 2,
    convRule: rule143
  }, {
    start: 8146,
    length: 2,
    convRule: rule20
  }, {
    start: 8150,
    length: 2,
    convRule: rule20
  }, {
    start: 8152,
    length: 2,
    convRule: rule144
  }, {
    start: 8154,
    length: 2,
    convRule: rule157
  }, {
    start: 8157,
    length: 3,
    convRule: rule10
  }, {
    start: 8160,
    length: 2,
    convRule: rule143
  }, {
    start: 8162,
    length: 3,
    convRule: rule20
  }, {
    start: 8165,
    length: 1,
    convRule: rule113
  }, {
    start: 8166,
    length: 2,
    convRule: rule20
  }, {
    start: 8168,
    length: 2,
    convRule: rule144
  }, {
    start: 8170,
    length: 2,
    convRule: rule158
  }, {
    start: 8172,
    length: 1,
    convRule: rule117
  }, {
    start: 8173,
    length: 3,
    convRule: rule10
  }, {
    start: 8178,
    length: 1,
    convRule: rule20
  }, {
    start: 8179,
    length: 1,
    convRule: rule152
  }, {
    start: 8180,
    length: 1,
    convRule: rule20
  }, {
    start: 8182,
    length: 2,
    convRule: rule20
  }, {
    start: 8184,
    length: 2,
    convRule: rule159
  }, {
    start: 8186,
    length: 2,
    convRule: rule160
  }, {
    start: 8188,
    length: 1,
    convRule: rule154
  }, {
    start: 8189,
    length: 2,
    convRule: rule10
  }, {
    start: 8192,
    length: 11,
    convRule: rule1
  }, {
    start: 8203,
    length: 5,
    convRule: rule16
  }, {
    start: 8208,
    length: 6,
    convRule: rule7
  }, {
    start: 8214,
    length: 2,
    convRule: rule2
  }, {
    start: 8216,
    length: 1,
    convRule: rule15
  }, {
    start: 8217,
    length: 1,
    convRule: rule19
  }, {
    start: 8218,
    length: 1,
    convRule: rule4
  }, {
    start: 8219,
    length: 2,
    convRule: rule15
  }, {
    start: 8221,
    length: 1,
    convRule: rule19
  }, {
    start: 8222,
    length: 1,
    convRule: rule4
  }, {
    start: 8223,
    length: 1,
    convRule: rule15
  }, {
    start: 8224,
    length: 8,
    convRule: rule2
  }, {
    start: 8232,
    length: 1,
    convRule: rule161
  }, {
    start: 8233,
    length: 1,
    convRule: rule162
  }, {
    start: 8234,
    length: 5,
    convRule: rule16
  }, {
    start: 8239,
    length: 1,
    convRule: rule1
  }, {
    start: 8240,
    length: 9,
    convRule: rule2
  }, {
    start: 8249,
    length: 1,
    convRule: rule15
  }, {
    start: 8250,
    length: 1,
    convRule: rule19
  }, {
    start: 8251,
    length: 4,
    convRule: rule2
  }, {
    start: 8255,
    length: 2,
    convRule: rule11
  }, {
    start: 8257,
    length: 3,
    convRule: rule2
  }, {
    start: 8260,
    length: 1,
    convRule: rule6
  }, {
    start: 8261,
    length: 1,
    convRule: rule4
  }, {
    start: 8262,
    length: 1,
    convRule: rule5
  }, {
    start: 8263,
    length: 11,
    convRule: rule2
  }, {
    start: 8274,
    length: 1,
    convRule: rule6
  }, {
    start: 8275,
    length: 1,
    convRule: rule2
  }, {
    start: 8276,
    length: 1,
    convRule: rule11
  }, {
    start: 8277,
    length: 10,
    convRule: rule2
  }, {
    start: 8287,
    length: 1,
    convRule: rule1
  }, {
    start: 8288,
    length: 5,
    convRule: rule16
  }, {
    start: 8294,
    length: 10,
    convRule: rule16
  }, {
    start: 8304,
    length: 1,
    convRule: rule17
  }, {
    start: 8305,
    length: 1,
    convRule: rule91
  }, {
    start: 8308,
    length: 6,
    convRule: rule17
  }, {
    start: 8314,
    length: 3,
    convRule: rule6
  }, {
    start: 8317,
    length: 1,
    convRule: rule4
  }, {
    start: 8318,
    length: 1,
    convRule: rule5
  }, {
    start: 8319,
    length: 1,
    convRule: rule91
  }, {
    start: 8320,
    length: 10,
    convRule: rule17
  }, {
    start: 8330,
    length: 3,
    convRule: rule6
  }, {
    start: 8333,
    length: 1,
    convRule: rule4
  }, {
    start: 8334,
    length: 1,
    convRule: rule5
  }, {
    start: 8336,
    length: 13,
    convRule: rule91
  }, {
    start: 8352,
    length: 32,
    convRule: rule3
  }, {
    start: 8400,
    length: 13,
    convRule: rule92
  }, {
    start: 8413,
    length: 4,
    convRule: rule119
  }, {
    start: 8417,
    length: 1,
    convRule: rule92
  }, {
    start: 8418,
    length: 3,
    convRule: rule119
  }, {
    start: 8421,
    length: 12,
    convRule: rule92
  }, {
    start: 8448,
    length: 2,
    convRule: rule13
  }, {
    start: 8450,
    length: 1,
    convRule: rule107
  }, {
    start: 8451,
    length: 4,
    convRule: rule13
  }, {
    start: 8455,
    length: 1,
    convRule: rule107
  }, {
    start: 8456,
    length: 2,
    convRule: rule13
  }, {
    start: 8458,
    length: 1,
    convRule: rule20
  }, {
    start: 8459,
    length: 3,
    convRule: rule107
  }, {
    start: 8462,
    length: 2,
    convRule: rule20
  }, {
    start: 8464,
    length: 3,
    convRule: rule107
  }, {
    start: 8467,
    length: 1,
    convRule: rule20
  }, {
    start: 8468,
    length: 1,
    convRule: rule13
  }, {
    start: 8469,
    length: 1,
    convRule: rule107
  }, {
    start: 8470,
    length: 2,
    convRule: rule13
  }, {
    start: 8472,
    length: 1,
    convRule: rule6
  }, {
    start: 8473,
    length: 5,
    convRule: rule107
  }, {
    start: 8478,
    length: 6,
    convRule: rule13
  }, {
    start: 8484,
    length: 1,
    convRule: rule107
  }, {
    start: 8485,
    length: 1,
    convRule: rule13
  }, {
    start: 8486,
    length: 1,
    convRule: rule163
  }, {
    start: 8487,
    length: 1,
    convRule: rule13
  }, {
    start: 8488,
    length: 1,
    convRule: rule107
  }, {
    start: 8489,
    length: 1,
    convRule: rule13
  }, {
    start: 8490,
    length: 1,
    convRule: rule164
  }, {
    start: 8491,
    length: 1,
    convRule: rule165
  }, {
    start: 8492,
    length: 2,
    convRule: rule107
  }, {
    start: 8494,
    length: 1,
    convRule: rule13
  }, {
    start: 8495,
    length: 1,
    convRule: rule20
  }, {
    start: 8496,
    length: 2,
    convRule: rule107
  }, {
    start: 8498,
    length: 1,
    convRule: rule166
  }, {
    start: 8499,
    length: 1,
    convRule: rule107
  }, {
    start: 8500,
    length: 1,
    convRule: rule20
  }, {
    start: 8501,
    length: 4,
    convRule: rule14
  }, {
    start: 8505,
    length: 1,
    convRule: rule20
  }, {
    start: 8506,
    length: 2,
    convRule: rule13
  }, {
    start: 8508,
    length: 2,
    convRule: rule20
  }, {
    start: 8510,
    length: 2,
    convRule: rule107
  }, {
    start: 8512,
    length: 5,
    convRule: rule6
  }, {
    start: 8517,
    length: 1,
    convRule: rule107
  }, {
    start: 8518,
    length: 4,
    convRule: rule20
  }, {
    start: 8522,
    length: 1,
    convRule: rule13
  }, {
    start: 8523,
    length: 1,
    convRule: rule6
  }, {
    start: 8524,
    length: 2,
    convRule: rule13
  }, {
    start: 8526,
    length: 1,
    convRule: rule167
  }, {
    start: 8527,
    length: 1,
    convRule: rule13
  }, {
    start: 8528,
    length: 16,
    convRule: rule17
  }, {
    start: 8544,
    length: 16,
    convRule: rule168
  }, {
    start: 8560,
    length: 16,
    convRule: rule169
  }, {
    start: 8576,
    length: 3,
    convRule: rule128
  }, {
    start: 8579,
    length: 1,
    convRule: rule22
  }, {
    start: 8580,
    length: 1,
    convRule: rule23
  }, {
    start: 8581,
    length: 4,
    convRule: rule128
  }, {
    start: 8585,
    length: 1,
    convRule: rule17
  }, {
    start: 8586,
    length: 2,
    convRule: rule13
  }, {
    start: 8592,
    length: 5,
    convRule: rule6
  }, {
    start: 8597,
    length: 5,
    convRule: rule13
  }, {
    start: 8602,
    length: 2,
    convRule: rule6
  }, {
    start: 8604,
    length: 4,
    convRule: rule13
  }, {
    start: 8608,
    length: 1,
    convRule: rule6
  }, {
    start: 8609,
    length: 2,
    convRule: rule13
  }, {
    start: 8611,
    length: 1,
    convRule: rule6
  }, {
    start: 8612,
    length: 2,
    convRule: rule13
  }, {
    start: 8614,
    length: 1,
    convRule: rule6
  }, {
    start: 8615,
    length: 7,
    convRule: rule13
  }, {
    start: 8622,
    length: 1,
    convRule: rule6
  }, {
    start: 8623,
    length: 31,
    convRule: rule13
  }, {
    start: 8654,
    length: 2,
    convRule: rule6
  }, {
    start: 8656,
    length: 2,
    convRule: rule13
  }, {
    start: 8658,
    length: 1,
    convRule: rule6
  }, {
    start: 8659,
    length: 1,
    convRule: rule13
  }, {
    start: 8660,
    length: 1,
    convRule: rule6
  }, {
    start: 8661,
    length: 31,
    convRule: rule13
  }, {
    start: 8692,
    length: 268,
    convRule: rule6
  }, {
    start: 8960,
    length: 8,
    convRule: rule13
  }, {
    start: 8968,
    length: 1,
    convRule: rule4
  }, {
    start: 8969,
    length: 1,
    convRule: rule5
  }, {
    start: 8970,
    length: 1,
    convRule: rule4
  }, {
    start: 8971,
    length: 1,
    convRule: rule5
  }, {
    start: 8972,
    length: 20,
    convRule: rule13
  }, {
    start: 8992,
    length: 2,
    convRule: rule6
  }, {
    start: 8994,
    length: 7,
    convRule: rule13
  }, {
    start: 9001,
    length: 1,
    convRule: rule4
  }, {
    start: 9002,
    length: 1,
    convRule: rule5
  }, {
    start: 9003,
    length: 81,
    convRule: rule13
  }, {
    start: 9084,
    length: 1,
    convRule: rule6
  }, {
    start: 9085,
    length: 30,
    convRule: rule13
  }, {
    start: 9115,
    length: 25,
    convRule: rule6
  }, {
    start: 9140,
    length: 40,
    convRule: rule13
  }, {
    start: 9180,
    length: 6,
    convRule: rule6
  }, {
    start: 9186,
    length: 69,
    convRule: rule13
  }, {
    start: 9280,
    length: 11,
    convRule: rule13
  }, {
    start: 9312,
    length: 60,
    convRule: rule17
  }, {
    start: 9372,
    length: 26,
    convRule: rule13
  }, {
    start: 9398,
    length: 26,
    convRule: rule170
  }, {
    start: 9424,
    length: 26,
    convRule: rule171
  }, {
    start: 9450,
    length: 22,
    convRule: rule17
  }, {
    start: 9472,
    length: 183,
    convRule: rule13
  }, {
    start: 9655,
    length: 1,
    convRule: rule6
  }, {
    start: 9656,
    length: 9,
    convRule: rule13
  }, {
    start: 9665,
    length: 1,
    convRule: rule6
  }, {
    start: 9666,
    length: 54,
    convRule: rule13
  }, {
    start: 9720,
    length: 8,
    convRule: rule6
  }, {
    start: 9728,
    length: 111,
    convRule: rule13
  }, {
    start: 9839,
    length: 1,
    convRule: rule6
  }, {
    start: 9840,
    length: 248,
    convRule: rule13
  }, {
    start: 10088,
    length: 1,
    convRule: rule4
  }, {
    start: 10089,
    length: 1,
    convRule: rule5
  }, {
    start: 10090,
    length: 1,
    convRule: rule4
  }, {
    start: 10091,
    length: 1,
    convRule: rule5
  }, {
    start: 10092,
    length: 1,
    convRule: rule4
  }, {
    start: 10093,
    length: 1,
    convRule: rule5
  }, {
    start: 10094,
    length: 1,
    convRule: rule4
  }, {
    start: 10095,
    length: 1,
    convRule: rule5
  }, {
    start: 10096,
    length: 1,
    convRule: rule4
  }, {
    start: 10097,
    length: 1,
    convRule: rule5
  }, {
    start: 10098,
    length: 1,
    convRule: rule4
  }, {
    start: 10099,
    length: 1,
    convRule: rule5
  }, {
    start: 10100,
    length: 1,
    convRule: rule4
  }, {
    start: 10101,
    length: 1,
    convRule: rule5
  }, {
    start: 10102,
    length: 30,
    convRule: rule17
  }, {
    start: 10132,
    length: 44,
    convRule: rule13
  }, {
    start: 10176,
    length: 5,
    convRule: rule6
  }, {
    start: 10181,
    length: 1,
    convRule: rule4
  }, {
    start: 10182,
    length: 1,
    convRule: rule5
  }, {
    start: 10183,
    length: 31,
    convRule: rule6
  }, {
    start: 10214,
    length: 1,
    convRule: rule4
  }, {
    start: 10215,
    length: 1,
    convRule: rule5
  }, {
    start: 10216,
    length: 1,
    convRule: rule4
  }, {
    start: 10217,
    length: 1,
    convRule: rule5
  }, {
    start: 10218,
    length: 1,
    convRule: rule4
  }, {
    start: 10219,
    length: 1,
    convRule: rule5
  }, {
    start: 10220,
    length: 1,
    convRule: rule4
  }, {
    start: 10221,
    length: 1,
    convRule: rule5
  }, {
    start: 10222,
    length: 1,
    convRule: rule4
  }, {
    start: 10223,
    length: 1,
    convRule: rule5
  }, {
    start: 10224,
    length: 16,
    convRule: rule6
  }, {
    start: 10240,
    length: 256,
    convRule: rule13
  }, {
    start: 10496,
    length: 131,
    convRule: rule6
  }, {
    start: 10627,
    length: 1,
    convRule: rule4
  }, {
    start: 10628,
    length: 1,
    convRule: rule5
  }, {
    start: 10629,
    length: 1,
    convRule: rule4
  }, {
    start: 10630,
    length: 1,
    convRule: rule5
  }, {
    start: 10631,
    length: 1,
    convRule: rule4
  }, {
    start: 10632,
    length: 1,
    convRule: rule5
  }, {
    start: 10633,
    length: 1,
    convRule: rule4
  }, {
    start: 10634,
    length: 1,
    convRule: rule5
  }, {
    start: 10635,
    length: 1,
    convRule: rule4
  }, {
    start: 10636,
    length: 1,
    convRule: rule5
  }, {
    start: 10637,
    length: 1,
    convRule: rule4
  }, {
    start: 10638,
    length: 1,
    convRule: rule5
  }, {
    start: 10639,
    length: 1,
    convRule: rule4
  }, {
    start: 10640,
    length: 1,
    convRule: rule5
  }, {
    start: 10641,
    length: 1,
    convRule: rule4
  }, {
    start: 10642,
    length: 1,
    convRule: rule5
  }, {
    start: 10643,
    length: 1,
    convRule: rule4
  }, {
    start: 10644,
    length: 1,
    convRule: rule5
  }, {
    start: 10645,
    length: 1,
    convRule: rule4
  }, {
    start: 10646,
    length: 1,
    convRule: rule5
  }, {
    start: 10647,
    length: 1,
    convRule: rule4
  }, {
    start: 10648,
    length: 1,
    convRule: rule5
  }, {
    start: 10649,
    length: 63,
    convRule: rule6
  }, {
    start: 10712,
    length: 1,
    convRule: rule4
  }, {
    start: 10713,
    length: 1,
    convRule: rule5
  }, {
    start: 10714,
    length: 1,
    convRule: rule4
  }, {
    start: 10715,
    length: 1,
    convRule: rule5
  }, {
    start: 10716,
    length: 32,
    convRule: rule6
  }, {
    start: 10748,
    length: 1,
    convRule: rule4
  }, {
    start: 10749,
    length: 1,
    convRule: rule5
  }, {
    start: 10750,
    length: 258,
    convRule: rule6
  }, {
    start: 11008,
    length: 48,
    convRule: rule13
  }, {
    start: 11056,
    length: 21,
    convRule: rule6
  }, {
    start: 11077,
    length: 2,
    convRule: rule13
  }, {
    start: 11079,
    length: 6,
    convRule: rule6
  }, {
    start: 11085,
    length: 39,
    convRule: rule13
  }, {
    start: 11126,
    length: 32,
    convRule: rule13
  }, {
    start: 11159,
    length: 105,
    convRule: rule13
  }, {
    start: 11264,
    length: 47,
    convRule: rule122
  }, {
    start: 11312,
    length: 47,
    convRule: rule123
  }, {
    start: 11360,
    length: 1,
    convRule: rule22
  }, {
    start: 11361,
    length: 1,
    convRule: rule23
  }, {
    start: 11362,
    length: 1,
    convRule: rule172
  }, {
    start: 11363,
    length: 1,
    convRule: rule173
  }, {
    start: 11364,
    length: 1,
    convRule: rule174
  }, {
    start: 11365,
    length: 1,
    convRule: rule175
  }, {
    start: 11366,
    length: 1,
    convRule: rule176
  }, {
    start: 11367,
    length: 1,
    convRule: rule22
  }, {
    start: 11368,
    length: 1,
    convRule: rule23
  }, {
    start: 11369,
    length: 1,
    convRule: rule22
  }, {
    start: 11370,
    length: 1,
    convRule: rule23
  }, {
    start: 11371,
    length: 1,
    convRule: rule22
  }, {
    start: 11372,
    length: 1,
    convRule: rule23
  }, {
    start: 11373,
    length: 1,
    convRule: rule177
  }, {
    start: 11374,
    length: 1,
    convRule: rule178
  }, {
    start: 11375,
    length: 1,
    convRule: rule179
  }, {
    start: 11376,
    length: 1,
    convRule: rule180
  }, {
    start: 11377,
    length: 1,
    convRule: rule20
  }, {
    start: 11378,
    length: 1,
    convRule: rule22
  }, {
    start: 11379,
    length: 1,
    convRule: rule23
  }, {
    start: 11380,
    length: 1,
    convRule: rule20
  }, {
    start: 11381,
    length: 1,
    convRule: rule22
  }, {
    start: 11382,
    length: 1,
    convRule: rule23
  }, {
    start: 11383,
    length: 5,
    convRule: rule20
  }, {
    start: 11388,
    length: 2,
    convRule: rule91
  }, {
    start: 11390,
    length: 2,
    convRule: rule181
  }, {
    start: 11392,
    length: 1,
    convRule: rule22
  }, {
    start: 11393,
    length: 1,
    convRule: rule23
  }, {
    start: 11394,
    length: 1,
    convRule: rule22
  }, {
    start: 11395,
    length: 1,
    convRule: rule23
  }, {
    start: 11396,
    length: 1,
    convRule: rule22
  }, {
    start: 11397,
    length: 1,
    convRule: rule23
  }, {
    start: 11398,
    length: 1,
    convRule: rule22
  }, {
    start: 11399,
    length: 1,
    convRule: rule23
  }, {
    start: 11400,
    length: 1,
    convRule: rule22
  }, {
    start: 11401,
    length: 1,
    convRule: rule23
  }, {
    start: 11402,
    length: 1,
    convRule: rule22
  }, {
    start: 11403,
    length: 1,
    convRule: rule23
  }, {
    start: 11404,
    length: 1,
    convRule: rule22
  }, {
    start: 11405,
    length: 1,
    convRule: rule23
  }, {
    start: 11406,
    length: 1,
    convRule: rule22
  }, {
    start: 11407,
    length: 1,
    convRule: rule23
  }, {
    start: 11408,
    length: 1,
    convRule: rule22
  }, {
    start: 11409,
    length: 1,
    convRule: rule23
  }, {
    start: 11410,
    length: 1,
    convRule: rule22
  }, {
    start: 11411,
    length: 1,
    convRule: rule23
  }, {
    start: 11412,
    length: 1,
    convRule: rule22
  }, {
    start: 11413,
    length: 1,
    convRule: rule23
  }, {
    start: 11414,
    length: 1,
    convRule: rule22
  }, {
    start: 11415,
    length: 1,
    convRule: rule23
  }, {
    start: 11416,
    length: 1,
    convRule: rule22
  }, {
    start: 11417,
    length: 1,
    convRule: rule23
  }, {
    start: 11418,
    length: 1,
    convRule: rule22
  }, {
    start: 11419,
    length: 1,
    convRule: rule23
  }, {
    start: 11420,
    length: 1,
    convRule: rule22
  }, {
    start: 11421,
    length: 1,
    convRule: rule23
  }, {
    start: 11422,
    length: 1,
    convRule: rule22
  }, {
    start: 11423,
    length: 1,
    convRule: rule23
  }, {
    start: 11424,
    length: 1,
    convRule: rule22
  }, {
    start: 11425,
    length: 1,
    convRule: rule23
  }, {
    start: 11426,
    length: 1,
    convRule: rule22
  }, {
    start: 11427,
    length: 1,
    convRule: rule23
  }, {
    start: 11428,
    length: 1,
    convRule: rule22
  }, {
    start: 11429,
    length: 1,
    convRule: rule23
  }, {
    start: 11430,
    length: 1,
    convRule: rule22
  }, {
    start: 11431,
    length: 1,
    convRule: rule23
  }, {
    start: 11432,
    length: 1,
    convRule: rule22
  }, {
    start: 11433,
    length: 1,
    convRule: rule23
  }, {
    start: 11434,
    length: 1,
    convRule: rule22
  }, {
    start: 11435,
    length: 1,
    convRule: rule23
  }, {
    start: 11436,
    length: 1,
    convRule: rule22
  }, {
    start: 11437,
    length: 1,
    convRule: rule23
  }, {
    start: 11438,
    length: 1,
    convRule: rule22
  }, {
    start: 11439,
    length: 1,
    convRule: rule23
  }, {
    start: 11440,
    length: 1,
    convRule: rule22
  }, {
    start: 11441,
    length: 1,
    convRule: rule23
  }, {
    start: 11442,
    length: 1,
    convRule: rule22
  }, {
    start: 11443,
    length: 1,
    convRule: rule23
  }, {
    start: 11444,
    length: 1,
    convRule: rule22
  }, {
    start: 11445,
    length: 1,
    convRule: rule23
  }, {
    start: 11446,
    length: 1,
    convRule: rule22
  }, {
    start: 11447,
    length: 1,
    convRule: rule23
  }, {
    start: 11448,
    length: 1,
    convRule: rule22
  }, {
    start: 11449,
    length: 1,
    convRule: rule23
  }, {
    start: 11450,
    length: 1,
    convRule: rule22
  }, {
    start: 11451,
    length: 1,
    convRule: rule23
  }, {
    start: 11452,
    length: 1,
    convRule: rule22
  }, {
    start: 11453,
    length: 1,
    convRule: rule23
  }, {
    start: 11454,
    length: 1,
    convRule: rule22
  }, {
    start: 11455,
    length: 1,
    convRule: rule23
  }, {
    start: 11456,
    length: 1,
    convRule: rule22
  }, {
    start: 11457,
    length: 1,
    convRule: rule23
  }, {
    start: 11458,
    length: 1,
    convRule: rule22
  }, {
    start: 11459,
    length: 1,
    convRule: rule23
  }, {
    start: 11460,
    length: 1,
    convRule: rule22
  }, {
    start: 11461,
    length: 1,
    convRule: rule23
  }, {
    start: 11462,
    length: 1,
    convRule: rule22
  }, {
    start: 11463,
    length: 1,
    convRule: rule23
  }, {
    start: 11464,
    length: 1,
    convRule: rule22
  }, {
    start: 11465,
    length: 1,
    convRule: rule23
  }, {
    start: 11466,
    length: 1,
    convRule: rule22
  }, {
    start: 11467,
    length: 1,
    convRule: rule23
  }, {
    start: 11468,
    length: 1,
    convRule: rule22
  }, {
    start: 11469,
    length: 1,
    convRule: rule23
  }, {
    start: 11470,
    length: 1,
    convRule: rule22
  }, {
    start: 11471,
    length: 1,
    convRule: rule23
  }, {
    start: 11472,
    length: 1,
    convRule: rule22
  }, {
    start: 11473,
    length: 1,
    convRule: rule23
  }, {
    start: 11474,
    length: 1,
    convRule: rule22
  }, {
    start: 11475,
    length: 1,
    convRule: rule23
  }, {
    start: 11476,
    length: 1,
    convRule: rule22
  }, {
    start: 11477,
    length: 1,
    convRule: rule23
  }, {
    start: 11478,
    length: 1,
    convRule: rule22
  }, {
    start: 11479,
    length: 1,
    convRule: rule23
  }, {
    start: 11480,
    length: 1,
    convRule: rule22
  }, {
    start: 11481,
    length: 1,
    convRule: rule23
  }, {
    start: 11482,
    length: 1,
    convRule: rule22
  }, {
    start: 11483,
    length: 1,
    convRule: rule23
  }, {
    start: 11484,
    length: 1,
    convRule: rule22
  }, {
    start: 11485,
    length: 1,
    convRule: rule23
  }, {
    start: 11486,
    length: 1,
    convRule: rule22
  }, {
    start: 11487,
    length: 1,
    convRule: rule23
  }, {
    start: 11488,
    length: 1,
    convRule: rule22
  }, {
    start: 11489,
    length: 1,
    convRule: rule23
  }, {
    start: 11490,
    length: 1,
    convRule: rule22
  }, {
    start: 11491,
    length: 1,
    convRule: rule23
  }, {
    start: 11492,
    length: 1,
    convRule: rule20
  }, {
    start: 11493,
    length: 6,
    convRule: rule13
  }, {
    start: 11499,
    length: 1,
    convRule: rule22
  }, {
    start: 11500,
    length: 1,
    convRule: rule23
  }, {
    start: 11501,
    length: 1,
    convRule: rule22
  }, {
    start: 11502,
    length: 1,
    convRule: rule23
  }, {
    start: 11503,
    length: 3,
    convRule: rule92
  }, {
    start: 11506,
    length: 1,
    convRule: rule22
  }, {
    start: 11507,
    length: 1,
    convRule: rule23
  }, {
    start: 11513,
    length: 4,
    convRule: rule2
  }, {
    start: 11517,
    length: 1,
    convRule: rule17
  }, {
    start: 11518,
    length: 2,
    convRule: rule2
  }, {
    start: 11520,
    length: 38,
    convRule: rule182
  }, {
    start: 11559,
    length: 1,
    convRule: rule182
  }, {
    start: 11565,
    length: 1,
    convRule: rule182
  }, {
    start: 11568,
    length: 56,
    convRule: rule14
  }, {
    start: 11631,
    length: 1,
    convRule: rule91
  }, {
    start: 11632,
    length: 1,
    convRule: rule2
  }, {
    start: 11647,
    length: 1,
    convRule: rule92
  }, {
    start: 11648,
    length: 23,
    convRule: rule14
  }, {
    start: 11680,
    length: 7,
    convRule: rule14
  }, {
    start: 11688,
    length: 7,
    convRule: rule14
  }, {
    start: 11696,
    length: 7,
    convRule: rule14
  }, {
    start: 11704,
    length: 7,
    convRule: rule14
  }, {
    start: 11712,
    length: 7,
    convRule: rule14
  }, {
    start: 11720,
    length: 7,
    convRule: rule14
  }, {
    start: 11728,
    length: 7,
    convRule: rule14
  }, {
    start: 11736,
    length: 7,
    convRule: rule14
  }, {
    start: 11744,
    length: 32,
    convRule: rule92
  }, {
    start: 11776,
    length: 2,
    convRule: rule2
  }, {
    start: 11778,
    length: 1,
    convRule: rule15
  }, {
    start: 11779,
    length: 1,
    convRule: rule19
  }, {
    start: 11780,
    length: 1,
    convRule: rule15
  }, {
    start: 11781,
    length: 1,
    convRule: rule19
  }, {
    start: 11782,
    length: 3,
    convRule: rule2
  }, {
    start: 11785,
    length: 1,
    convRule: rule15
  }, {
    start: 11786,
    length: 1,
    convRule: rule19
  }, {
    start: 11787,
    length: 1,
    convRule: rule2
  }, {
    start: 11788,
    length: 1,
    convRule: rule15
  }, {
    start: 11789,
    length: 1,
    convRule: rule19
  }, {
    start: 11790,
    length: 9,
    convRule: rule2
  }, {
    start: 11799,
    length: 1,
    convRule: rule7
  }, {
    start: 11800,
    length: 2,
    convRule: rule2
  }, {
    start: 11802,
    length: 1,
    convRule: rule7
  }, {
    start: 11803,
    length: 1,
    convRule: rule2
  }, {
    start: 11804,
    length: 1,
    convRule: rule15
  }, {
    start: 11805,
    length: 1,
    convRule: rule19
  }, {
    start: 11806,
    length: 2,
    convRule: rule2
  }, {
    start: 11808,
    length: 1,
    convRule: rule15
  }, {
    start: 11809,
    length: 1,
    convRule: rule19
  }, {
    start: 11810,
    length: 1,
    convRule: rule4
  }, {
    start: 11811,
    length: 1,
    convRule: rule5
  }, {
    start: 11812,
    length: 1,
    convRule: rule4
  }, {
    start: 11813,
    length: 1,
    convRule: rule5
  }, {
    start: 11814,
    length: 1,
    convRule: rule4
  }, {
    start: 11815,
    length: 1,
    convRule: rule5
  }, {
    start: 11816,
    length: 1,
    convRule: rule4
  }, {
    start: 11817,
    length: 1,
    convRule: rule5
  }, {
    start: 11818,
    length: 5,
    convRule: rule2
  }, {
    start: 11823,
    length: 1,
    convRule: rule91
  }, {
    start: 11824,
    length: 10,
    convRule: rule2
  }, {
    start: 11834,
    length: 2,
    convRule: rule7
  }, {
    start: 11836,
    length: 4,
    convRule: rule2
  }, {
    start: 11840,
    length: 1,
    convRule: rule7
  }, {
    start: 11841,
    length: 1,
    convRule: rule2
  }, {
    start: 11842,
    length: 1,
    convRule: rule4
  }, {
    start: 11843,
    length: 13,
    convRule: rule2
  }, {
    start: 11856,
    length: 2,
    convRule: rule13
  }, {
    start: 11858,
    length: 1,
    convRule: rule2
  }, {
    start: 11904,
    length: 26,
    convRule: rule13
  }, {
    start: 11931,
    length: 89,
    convRule: rule13
  }, {
    start: 12032,
    length: 214,
    convRule: rule13
  }, {
    start: 12272,
    length: 12,
    convRule: rule13
  }, {
    start: 12288,
    length: 1,
    convRule: rule1
  }, {
    start: 12289,
    length: 3,
    convRule: rule2
  }, {
    start: 12292,
    length: 1,
    convRule: rule13
  }, {
    start: 12293,
    length: 1,
    convRule: rule91
  }, {
    start: 12294,
    length: 1,
    convRule: rule14
  }, {
    start: 12295,
    length: 1,
    convRule: rule128
  }, {
    start: 12296,
    length: 1,
    convRule: rule4
  }, {
    start: 12297,
    length: 1,
    convRule: rule5
  }, {
    start: 12298,
    length: 1,
    convRule: rule4
  }, {
    start: 12299,
    length: 1,
    convRule: rule5
  }, {
    start: 12300,
    length: 1,
    convRule: rule4
  }, {
    start: 12301,
    length: 1,
    convRule: rule5
  }, {
    start: 12302,
    length: 1,
    convRule: rule4
  }, {
    start: 12303,
    length: 1,
    convRule: rule5
  }, {
    start: 12304,
    length: 1,
    convRule: rule4
  }, {
    start: 12305,
    length: 1,
    convRule: rule5
  }, {
    start: 12306,
    length: 2,
    convRule: rule13
  }, {
    start: 12308,
    length: 1,
    convRule: rule4
  }, {
    start: 12309,
    length: 1,
    convRule: rule5
  }, {
    start: 12310,
    length: 1,
    convRule: rule4
  }, {
    start: 12311,
    length: 1,
    convRule: rule5
  }, {
    start: 12312,
    length: 1,
    convRule: rule4
  }, {
    start: 12313,
    length: 1,
    convRule: rule5
  }, {
    start: 12314,
    length: 1,
    convRule: rule4
  }, {
    start: 12315,
    length: 1,
    convRule: rule5
  }, {
    start: 12316,
    length: 1,
    convRule: rule7
  }, {
    start: 12317,
    length: 1,
    convRule: rule4
  }, {
    start: 12318,
    length: 2,
    convRule: rule5
  }, {
    start: 12320,
    length: 1,
    convRule: rule13
  }, {
    start: 12321,
    length: 9,
    convRule: rule128
  }, {
    start: 12330,
    length: 4,
    convRule: rule92
  }, {
    start: 12334,
    length: 2,
    convRule: rule124
  }, {
    start: 12336,
    length: 1,
    convRule: rule7
  }, {
    start: 12337,
    length: 5,
    convRule: rule91
  }, {
    start: 12342,
    length: 2,
    convRule: rule13
  }, {
    start: 12344,
    length: 3,
    convRule: rule128
  }, {
    start: 12347,
    length: 1,
    convRule: rule91
  }, {
    start: 12348,
    length: 1,
    convRule: rule14
  }, {
    start: 12349,
    length: 1,
    convRule: rule2
  }, {
    start: 12350,
    length: 2,
    convRule: rule13
  }, {
    start: 12353,
    length: 86,
    convRule: rule14
  }, {
    start: 12441,
    length: 2,
    convRule: rule92
  }, {
    start: 12443,
    length: 2,
    convRule: rule10
  }, {
    start: 12445,
    length: 2,
    convRule: rule91
  }, {
    start: 12447,
    length: 1,
    convRule: rule14
  }, {
    start: 12448,
    length: 1,
    convRule: rule7
  }, {
    start: 12449,
    length: 90,
    convRule: rule14
  }, {
    start: 12539,
    length: 1,
    convRule: rule2
  }, {
    start: 12540,
    length: 3,
    convRule: rule91
  }, {
    start: 12543,
    length: 1,
    convRule: rule14
  }, {
    start: 12549,
    length: 43,
    convRule: rule14
  }, {
    start: 12593,
    length: 94,
    convRule: rule14
  }, {
    start: 12688,
    length: 2,
    convRule: rule13
  }, {
    start: 12690,
    length: 4,
    convRule: rule17
  }, {
    start: 12694,
    length: 10,
    convRule: rule13
  }, {
    start: 12704,
    length: 32,
    convRule: rule14
  }, {
    start: 12736,
    length: 36,
    convRule: rule13
  }, {
    start: 12784,
    length: 16,
    convRule: rule14
  }, {
    start: 12800,
    length: 31,
    convRule: rule13
  }, {
    start: 12832,
    length: 10,
    convRule: rule17
  }, {
    start: 12842,
    length: 30,
    convRule: rule13
  }, {
    start: 12872,
    length: 8,
    convRule: rule17
  }, {
    start: 12880,
    length: 1,
    convRule: rule13
  }, {
    start: 12881,
    length: 15,
    convRule: rule17
  }, {
    start: 12896,
    length: 32,
    convRule: rule13
  }, {
    start: 12928,
    length: 10,
    convRule: rule17
  }, {
    start: 12938,
    length: 39,
    convRule: rule13
  }, {
    start: 12977,
    length: 15,
    convRule: rule17
  }, {
    start: 12992,
    length: 320,
    convRule: rule13
  }, {
    start: 13312,
    length: 6592,
    convRule: rule14
  }, {
    start: 19904,
    length: 64,
    convRule: rule13
  }, {
    start: 19968,
    length: 20989,
    convRule: rule14
  }, {
    start: 40960,
    length: 21,
    convRule: rule14
  }, {
    start: 40981,
    length: 1,
    convRule: rule91
  }, {
    start: 40982,
    length: 1143,
    convRule: rule14
  }, {
    start: 42128,
    length: 55,
    convRule: rule13
  }, {
    start: 42192,
    length: 40,
    convRule: rule14
  }, {
    start: 42232,
    length: 6,
    convRule: rule91
  }, {
    start: 42238,
    length: 2,
    convRule: rule2
  }, {
    start: 42240,
    length: 268,
    convRule: rule14
  }, {
    start: 42508,
    length: 1,
    convRule: rule91
  }, {
    start: 42509,
    length: 3,
    convRule: rule2
  }, {
    start: 42512,
    length: 16,
    convRule: rule14
  }, {
    start: 42528,
    length: 10,
    convRule: rule8
  }, {
    start: 42538,
    length: 2,
    convRule: rule14
  }, {
    start: 42560,
    length: 1,
    convRule: rule22
  }, {
    start: 42561,
    length: 1,
    convRule: rule23
  }, {
    start: 42562,
    length: 1,
    convRule: rule22
  }, {
    start: 42563,
    length: 1,
    convRule: rule23
  }, {
    start: 42564,
    length: 1,
    convRule: rule22
  }, {
    start: 42565,
    length: 1,
    convRule: rule23
  }, {
    start: 42566,
    length: 1,
    convRule: rule22
  }, {
    start: 42567,
    length: 1,
    convRule: rule23
  }, {
    start: 42568,
    length: 1,
    convRule: rule22
  }, {
    start: 42569,
    length: 1,
    convRule: rule23
  }, {
    start: 42570,
    length: 1,
    convRule: rule22
  }, {
    start: 42571,
    length: 1,
    convRule: rule23
  }, {
    start: 42572,
    length: 1,
    convRule: rule22
  }, {
    start: 42573,
    length: 1,
    convRule: rule23
  }, {
    start: 42574,
    length: 1,
    convRule: rule22
  }, {
    start: 42575,
    length: 1,
    convRule: rule23
  }, {
    start: 42576,
    length: 1,
    convRule: rule22
  }, {
    start: 42577,
    length: 1,
    convRule: rule23
  }, {
    start: 42578,
    length: 1,
    convRule: rule22
  }, {
    start: 42579,
    length: 1,
    convRule: rule23
  }, {
    start: 42580,
    length: 1,
    convRule: rule22
  }, {
    start: 42581,
    length: 1,
    convRule: rule23
  }, {
    start: 42582,
    length: 1,
    convRule: rule22
  }, {
    start: 42583,
    length: 1,
    convRule: rule23
  }, {
    start: 42584,
    length: 1,
    convRule: rule22
  }, {
    start: 42585,
    length: 1,
    convRule: rule23
  }, {
    start: 42586,
    length: 1,
    convRule: rule22
  }, {
    start: 42587,
    length: 1,
    convRule: rule23
  }, {
    start: 42588,
    length: 1,
    convRule: rule22
  }, {
    start: 42589,
    length: 1,
    convRule: rule23
  }, {
    start: 42590,
    length: 1,
    convRule: rule22
  }, {
    start: 42591,
    length: 1,
    convRule: rule23
  }, {
    start: 42592,
    length: 1,
    convRule: rule22
  }, {
    start: 42593,
    length: 1,
    convRule: rule23
  }, {
    start: 42594,
    length: 1,
    convRule: rule22
  }, {
    start: 42595,
    length: 1,
    convRule: rule23
  }, {
    start: 42596,
    length: 1,
    convRule: rule22
  }, {
    start: 42597,
    length: 1,
    convRule: rule23
  }, {
    start: 42598,
    length: 1,
    convRule: rule22
  }, {
    start: 42599,
    length: 1,
    convRule: rule23
  }, {
    start: 42600,
    length: 1,
    convRule: rule22
  }, {
    start: 42601,
    length: 1,
    convRule: rule23
  }, {
    start: 42602,
    length: 1,
    convRule: rule22
  }, {
    start: 42603,
    length: 1,
    convRule: rule23
  }, {
    start: 42604,
    length: 1,
    convRule: rule22
  }, {
    start: 42605,
    length: 1,
    convRule: rule23
  }, {
    start: 42606,
    length: 1,
    convRule: rule14
  }, {
    start: 42607,
    length: 1,
    convRule: rule92
  }, {
    start: 42608,
    length: 3,
    convRule: rule119
  }, {
    start: 42611,
    length: 1,
    convRule: rule2
  }, {
    start: 42612,
    length: 10,
    convRule: rule92
  }, {
    start: 42622,
    length: 1,
    convRule: rule2
  }, {
    start: 42623,
    length: 1,
    convRule: rule91
  }, {
    start: 42624,
    length: 1,
    convRule: rule22
  }, {
    start: 42625,
    length: 1,
    convRule: rule23
  }, {
    start: 42626,
    length: 1,
    convRule: rule22
  }, {
    start: 42627,
    length: 1,
    convRule: rule23
  }, {
    start: 42628,
    length: 1,
    convRule: rule22
  }, {
    start: 42629,
    length: 1,
    convRule: rule23
  }, {
    start: 42630,
    length: 1,
    convRule: rule22
  }, {
    start: 42631,
    length: 1,
    convRule: rule23
  }, {
    start: 42632,
    length: 1,
    convRule: rule22
  }, {
    start: 42633,
    length: 1,
    convRule: rule23
  }, {
    start: 42634,
    length: 1,
    convRule: rule22
  }, {
    start: 42635,
    length: 1,
    convRule: rule23
  }, {
    start: 42636,
    length: 1,
    convRule: rule22
  }, {
    start: 42637,
    length: 1,
    convRule: rule23
  }, {
    start: 42638,
    length: 1,
    convRule: rule22
  }, {
    start: 42639,
    length: 1,
    convRule: rule23
  }, {
    start: 42640,
    length: 1,
    convRule: rule22
  }, {
    start: 42641,
    length: 1,
    convRule: rule23
  }, {
    start: 42642,
    length: 1,
    convRule: rule22
  }, {
    start: 42643,
    length: 1,
    convRule: rule23
  }, {
    start: 42644,
    length: 1,
    convRule: rule22
  }, {
    start: 42645,
    length: 1,
    convRule: rule23
  }, {
    start: 42646,
    length: 1,
    convRule: rule22
  }, {
    start: 42647,
    length: 1,
    convRule: rule23
  }, {
    start: 42648,
    length: 1,
    convRule: rule22
  }, {
    start: 42649,
    length: 1,
    convRule: rule23
  }, {
    start: 42650,
    length: 1,
    convRule: rule22
  }, {
    start: 42651,
    length: 1,
    convRule: rule23
  }, {
    start: 42652,
    length: 2,
    convRule: rule91
  }, {
    start: 42654,
    length: 2,
    convRule: rule92
  }, {
    start: 42656,
    length: 70,
    convRule: rule14
  }, {
    start: 42726,
    length: 10,
    convRule: rule128
  }, {
    start: 42736,
    length: 2,
    convRule: rule92
  }, {
    start: 42738,
    length: 6,
    convRule: rule2
  }, {
    start: 42752,
    length: 23,
    convRule: rule10
  }, {
    start: 42775,
    length: 9,
    convRule: rule91
  }, {
    start: 42784,
    length: 2,
    convRule: rule10
  }, {
    start: 42786,
    length: 1,
    convRule: rule22
  }, {
    start: 42787,
    length: 1,
    convRule: rule23
  }, {
    start: 42788,
    length: 1,
    convRule: rule22
  }, {
    start: 42789,
    length: 1,
    convRule: rule23
  }, {
    start: 42790,
    length: 1,
    convRule: rule22
  }, {
    start: 42791,
    length: 1,
    convRule: rule23
  }, {
    start: 42792,
    length: 1,
    convRule: rule22
  }, {
    start: 42793,
    length: 1,
    convRule: rule23
  }, {
    start: 42794,
    length: 1,
    convRule: rule22
  }, {
    start: 42795,
    length: 1,
    convRule: rule23
  }, {
    start: 42796,
    length: 1,
    convRule: rule22
  }, {
    start: 42797,
    length: 1,
    convRule: rule23
  }, {
    start: 42798,
    length: 1,
    convRule: rule22
  }, {
    start: 42799,
    length: 1,
    convRule: rule23
  }, {
    start: 42800,
    length: 2,
    convRule: rule20
  }, {
    start: 42802,
    length: 1,
    convRule: rule22
  }, {
    start: 42803,
    length: 1,
    convRule: rule23
  }, {
    start: 42804,
    length: 1,
    convRule: rule22
  }, {
    start: 42805,
    length: 1,
    convRule: rule23
  }, {
    start: 42806,
    length: 1,
    convRule: rule22
  }, {
    start: 42807,
    length: 1,
    convRule: rule23
  }, {
    start: 42808,
    length: 1,
    convRule: rule22
  }, {
    start: 42809,
    length: 1,
    convRule: rule23
  }, {
    start: 42810,
    length: 1,
    convRule: rule22
  }, {
    start: 42811,
    length: 1,
    convRule: rule23
  }, {
    start: 42812,
    length: 1,
    convRule: rule22
  }, {
    start: 42813,
    length: 1,
    convRule: rule23
  }, {
    start: 42814,
    length: 1,
    convRule: rule22
  }, {
    start: 42815,
    length: 1,
    convRule: rule23
  }, {
    start: 42816,
    length: 1,
    convRule: rule22
  }, {
    start: 42817,
    length: 1,
    convRule: rule23
  }, {
    start: 42818,
    length: 1,
    convRule: rule22
  }, {
    start: 42819,
    length: 1,
    convRule: rule23
  }, {
    start: 42820,
    length: 1,
    convRule: rule22
  }, {
    start: 42821,
    length: 1,
    convRule: rule23
  }, {
    start: 42822,
    length: 1,
    convRule: rule22
  }, {
    start: 42823,
    length: 1,
    convRule: rule23
  }, {
    start: 42824,
    length: 1,
    convRule: rule22
  }, {
    start: 42825,
    length: 1,
    convRule: rule23
  }, {
    start: 42826,
    length: 1,
    convRule: rule22
  }, {
    start: 42827,
    length: 1,
    convRule: rule23
  }, {
    start: 42828,
    length: 1,
    convRule: rule22
  }, {
    start: 42829,
    length: 1,
    convRule: rule23
  }, {
    start: 42830,
    length: 1,
    convRule: rule22
  }, {
    start: 42831,
    length: 1,
    convRule: rule23
  }, {
    start: 42832,
    length: 1,
    convRule: rule22
  }, {
    start: 42833,
    length: 1,
    convRule: rule23
  }, {
    start: 42834,
    length: 1,
    convRule: rule22
  }, {
    start: 42835,
    length: 1,
    convRule: rule23
  }, {
    start: 42836,
    length: 1,
    convRule: rule22
  }, {
    start: 42837,
    length: 1,
    convRule: rule23
  }, {
    start: 42838,
    length: 1,
    convRule: rule22
  }, {
    start: 42839,
    length: 1,
    convRule: rule23
  }, {
    start: 42840,
    length: 1,
    convRule: rule22
  }, {
    start: 42841,
    length: 1,
    convRule: rule23
  }, {
    start: 42842,
    length: 1,
    convRule: rule22
  }, {
    start: 42843,
    length: 1,
    convRule: rule23
  }, {
    start: 42844,
    length: 1,
    convRule: rule22
  }, {
    start: 42845,
    length: 1,
    convRule: rule23
  }, {
    start: 42846,
    length: 1,
    convRule: rule22
  }, {
    start: 42847,
    length: 1,
    convRule: rule23
  }, {
    start: 42848,
    length: 1,
    convRule: rule22
  }, {
    start: 42849,
    length: 1,
    convRule: rule23
  }, {
    start: 42850,
    length: 1,
    convRule: rule22
  }, {
    start: 42851,
    length: 1,
    convRule: rule23
  }, {
    start: 42852,
    length: 1,
    convRule: rule22
  }, {
    start: 42853,
    length: 1,
    convRule: rule23
  }, {
    start: 42854,
    length: 1,
    convRule: rule22
  }, {
    start: 42855,
    length: 1,
    convRule: rule23
  }, {
    start: 42856,
    length: 1,
    convRule: rule22
  }, {
    start: 42857,
    length: 1,
    convRule: rule23
  }, {
    start: 42858,
    length: 1,
    convRule: rule22
  }, {
    start: 42859,
    length: 1,
    convRule: rule23
  }, {
    start: 42860,
    length: 1,
    convRule: rule22
  }, {
    start: 42861,
    length: 1,
    convRule: rule23
  }, {
    start: 42862,
    length: 1,
    convRule: rule22
  }, {
    start: 42863,
    length: 1,
    convRule: rule23
  }, {
    start: 42864,
    length: 1,
    convRule: rule91
  }, {
    start: 42865,
    length: 8,
    convRule: rule20
  }, {
    start: 42873,
    length: 1,
    convRule: rule22
  }, {
    start: 42874,
    length: 1,
    convRule: rule23
  }, {
    start: 42875,
    length: 1,
    convRule: rule22
  }, {
    start: 42876,
    length: 1,
    convRule: rule23
  }, {
    start: 42877,
    length: 1,
    convRule: rule183
  }, {
    start: 42878,
    length: 1,
    convRule: rule22
  }, {
    start: 42879,
    length: 1,
    convRule: rule23
  }, {
    start: 42880,
    length: 1,
    convRule: rule22
  }, {
    start: 42881,
    length: 1,
    convRule: rule23
  }, {
    start: 42882,
    length: 1,
    convRule: rule22
  }, {
    start: 42883,
    length: 1,
    convRule: rule23
  }, {
    start: 42884,
    length: 1,
    convRule: rule22
  }, {
    start: 42885,
    length: 1,
    convRule: rule23
  }, {
    start: 42886,
    length: 1,
    convRule: rule22
  }, {
    start: 42887,
    length: 1,
    convRule: rule23
  }, {
    start: 42888,
    length: 1,
    convRule: rule91
  }, {
    start: 42889,
    length: 2,
    convRule: rule10
  }, {
    start: 42891,
    length: 1,
    convRule: rule22
  }, {
    start: 42892,
    length: 1,
    convRule: rule23
  }, {
    start: 42893,
    length: 1,
    convRule: rule184
  }, {
    start: 42894,
    length: 1,
    convRule: rule20
  }, {
    start: 42895,
    length: 1,
    convRule: rule14
  }, {
    start: 42896,
    length: 1,
    convRule: rule22
  }, {
    start: 42897,
    length: 1,
    convRule: rule23
  }, {
    start: 42898,
    length: 1,
    convRule: rule22
  }, {
    start: 42899,
    length: 1,
    convRule: rule23
  }, {
    start: 42900,
    length: 1,
    convRule: rule185
  }, {
    start: 42901,
    length: 1,
    convRule: rule20
  }, {
    start: 42902,
    length: 1,
    convRule: rule22
  }, {
    start: 42903,
    length: 1,
    convRule: rule23
  }, {
    start: 42904,
    length: 1,
    convRule: rule22
  }, {
    start: 42905,
    length: 1,
    convRule: rule23
  }, {
    start: 42906,
    length: 1,
    convRule: rule22
  }, {
    start: 42907,
    length: 1,
    convRule: rule23
  }, {
    start: 42908,
    length: 1,
    convRule: rule22
  }, {
    start: 42909,
    length: 1,
    convRule: rule23
  }, {
    start: 42910,
    length: 1,
    convRule: rule22
  }, {
    start: 42911,
    length: 1,
    convRule: rule23
  }, {
    start: 42912,
    length: 1,
    convRule: rule22
  }, {
    start: 42913,
    length: 1,
    convRule: rule23
  }, {
    start: 42914,
    length: 1,
    convRule: rule22
  }, {
    start: 42915,
    length: 1,
    convRule: rule23
  }, {
    start: 42916,
    length: 1,
    convRule: rule22
  }, {
    start: 42917,
    length: 1,
    convRule: rule23
  }, {
    start: 42918,
    length: 1,
    convRule: rule22
  }, {
    start: 42919,
    length: 1,
    convRule: rule23
  }, {
    start: 42920,
    length: 1,
    convRule: rule22
  }, {
    start: 42921,
    length: 1,
    convRule: rule23
  }, {
    start: 42922,
    length: 1,
    convRule: rule186
  }, {
    start: 42923,
    length: 1,
    convRule: rule187
  }, {
    start: 42924,
    length: 1,
    convRule: rule188
  }, {
    start: 42925,
    length: 1,
    convRule: rule189
  }, {
    start: 42926,
    length: 1,
    convRule: rule186
  }, {
    start: 42927,
    length: 1,
    convRule: rule20
  }, {
    start: 42928,
    length: 1,
    convRule: rule190
  }, {
    start: 42929,
    length: 1,
    convRule: rule191
  }, {
    start: 42930,
    length: 1,
    convRule: rule192
  }, {
    start: 42931,
    length: 1,
    convRule: rule193
  }, {
    start: 42932,
    length: 1,
    convRule: rule22
  }, {
    start: 42933,
    length: 1,
    convRule: rule23
  }, {
    start: 42934,
    length: 1,
    convRule: rule22
  }, {
    start: 42935,
    length: 1,
    convRule: rule23
  }, {
    start: 42936,
    length: 1,
    convRule: rule22
  }, {
    start: 42937,
    length: 1,
    convRule: rule23
  }, {
    start: 42938,
    length: 1,
    convRule: rule22
  }, {
    start: 42939,
    length: 1,
    convRule: rule23
  }, {
    start: 42940,
    length: 1,
    convRule: rule22
  }, {
    start: 42941,
    length: 1,
    convRule: rule23
  }, {
    start: 42942,
    length: 1,
    convRule: rule22
  }, {
    start: 42943,
    length: 1,
    convRule: rule23
  }, {
    start: 42946,
    length: 1,
    convRule: rule22
  }, {
    start: 42947,
    length: 1,
    convRule: rule23
  }, {
    start: 42948,
    length: 1,
    convRule: rule194
  }, {
    start: 42949,
    length: 1,
    convRule: rule195
  }, {
    start: 42950,
    length: 1,
    convRule: rule196
  }, {
    start: 42951,
    length: 1,
    convRule: rule22
  }, {
    start: 42952,
    length: 1,
    convRule: rule23
  }, {
    start: 42953,
    length: 1,
    convRule: rule22
  }, {
    start: 42954,
    length: 1,
    convRule: rule23
  }, {
    start: 42997,
    length: 1,
    convRule: rule22
  }, {
    start: 42998,
    length: 1,
    convRule: rule23
  }, {
    start: 42999,
    length: 1,
    convRule: rule14
  }, {
    start: 43e3,
    length: 2,
    convRule: rule91
  }, {
    start: 43002,
    length: 1,
    convRule: rule20
  }, {
    start: 43003,
    length: 7,
    convRule: rule14
  }, {
    start: 43010,
    length: 1,
    convRule: rule92
  }, {
    start: 43011,
    length: 3,
    convRule: rule14
  }, {
    start: 43014,
    length: 1,
    convRule: rule92
  }, {
    start: 43015,
    length: 4,
    convRule: rule14
  }, {
    start: 43019,
    length: 1,
    convRule: rule92
  }, {
    start: 43020,
    length: 23,
    convRule: rule14
  }, {
    start: 43043,
    length: 2,
    convRule: rule124
  }, {
    start: 43045,
    length: 2,
    convRule: rule92
  }, {
    start: 43047,
    length: 1,
    convRule: rule124
  }, {
    start: 43048,
    length: 4,
    convRule: rule13
  }, {
    start: 43052,
    length: 1,
    convRule: rule92
  }, {
    start: 43056,
    length: 6,
    convRule: rule17
  }, {
    start: 43062,
    length: 2,
    convRule: rule13
  }, {
    start: 43064,
    length: 1,
    convRule: rule3
  }, {
    start: 43065,
    length: 1,
    convRule: rule13
  }, {
    start: 43072,
    length: 52,
    convRule: rule14
  }, {
    start: 43124,
    length: 4,
    convRule: rule2
  }, {
    start: 43136,
    length: 2,
    convRule: rule124
  }, {
    start: 43138,
    length: 50,
    convRule: rule14
  }, {
    start: 43188,
    length: 16,
    convRule: rule124
  }, {
    start: 43204,
    length: 2,
    convRule: rule92
  }, {
    start: 43214,
    length: 2,
    convRule: rule2
  }, {
    start: 43216,
    length: 10,
    convRule: rule8
  }, {
    start: 43232,
    length: 18,
    convRule: rule92
  }, {
    start: 43250,
    length: 6,
    convRule: rule14
  }, {
    start: 43256,
    length: 3,
    convRule: rule2
  }, {
    start: 43259,
    length: 1,
    convRule: rule14
  }, {
    start: 43260,
    length: 1,
    convRule: rule2
  }, {
    start: 43261,
    length: 2,
    convRule: rule14
  }, {
    start: 43263,
    length: 1,
    convRule: rule92
  }, {
    start: 43264,
    length: 10,
    convRule: rule8
  }, {
    start: 43274,
    length: 28,
    convRule: rule14
  }, {
    start: 43302,
    length: 8,
    convRule: rule92
  }, {
    start: 43310,
    length: 2,
    convRule: rule2
  }, {
    start: 43312,
    length: 23,
    convRule: rule14
  }, {
    start: 43335,
    length: 11,
    convRule: rule92
  }, {
    start: 43346,
    length: 2,
    convRule: rule124
  }, {
    start: 43359,
    length: 1,
    convRule: rule2
  }, {
    start: 43360,
    length: 29,
    convRule: rule14
  }, {
    start: 43392,
    length: 3,
    convRule: rule92
  }, {
    start: 43395,
    length: 1,
    convRule: rule124
  }, {
    start: 43396,
    length: 47,
    convRule: rule14
  }, {
    start: 43443,
    length: 1,
    convRule: rule92
  }, {
    start: 43444,
    length: 2,
    convRule: rule124
  }, {
    start: 43446,
    length: 4,
    convRule: rule92
  }, {
    start: 43450,
    length: 2,
    convRule: rule124
  }, {
    start: 43452,
    length: 2,
    convRule: rule92
  }, {
    start: 43454,
    length: 3,
    convRule: rule124
  }, {
    start: 43457,
    length: 13,
    convRule: rule2
  }, {
    start: 43471,
    length: 1,
    convRule: rule91
  }, {
    start: 43472,
    length: 10,
    convRule: rule8
  }, {
    start: 43486,
    length: 2,
    convRule: rule2
  }, {
    start: 43488,
    length: 5,
    convRule: rule14
  }, {
    start: 43493,
    length: 1,
    convRule: rule92
  }, {
    start: 43494,
    length: 1,
    convRule: rule91
  }, {
    start: 43495,
    length: 9,
    convRule: rule14
  }, {
    start: 43504,
    length: 10,
    convRule: rule8
  }, {
    start: 43514,
    length: 5,
    convRule: rule14
  }, {
    start: 43520,
    length: 41,
    convRule: rule14
  }, {
    start: 43561,
    length: 6,
    convRule: rule92
  }, {
    start: 43567,
    length: 2,
    convRule: rule124
  }, {
    start: 43569,
    length: 2,
    convRule: rule92
  }, {
    start: 43571,
    length: 2,
    convRule: rule124
  }, {
    start: 43573,
    length: 2,
    convRule: rule92
  }, {
    start: 43584,
    length: 3,
    convRule: rule14
  }, {
    start: 43587,
    length: 1,
    convRule: rule92
  }, {
    start: 43588,
    length: 8,
    convRule: rule14
  }, {
    start: 43596,
    length: 1,
    convRule: rule92
  }, {
    start: 43597,
    length: 1,
    convRule: rule124
  }, {
    start: 43600,
    length: 10,
    convRule: rule8
  }, {
    start: 43612,
    length: 4,
    convRule: rule2
  }, {
    start: 43616,
    length: 16,
    convRule: rule14
  }, {
    start: 43632,
    length: 1,
    convRule: rule91
  }, {
    start: 43633,
    length: 6,
    convRule: rule14
  }, {
    start: 43639,
    length: 3,
    convRule: rule13
  }, {
    start: 43642,
    length: 1,
    convRule: rule14
  }, {
    start: 43643,
    length: 1,
    convRule: rule124
  }, {
    start: 43644,
    length: 1,
    convRule: rule92
  }, {
    start: 43645,
    length: 1,
    convRule: rule124
  }, {
    start: 43646,
    length: 50,
    convRule: rule14
  }, {
    start: 43696,
    length: 1,
    convRule: rule92
  }, {
    start: 43697,
    length: 1,
    convRule: rule14
  }, {
    start: 43698,
    length: 3,
    convRule: rule92
  }, {
    start: 43701,
    length: 2,
    convRule: rule14
  }, {
    start: 43703,
    length: 2,
    convRule: rule92
  }, {
    start: 43705,
    length: 5,
    convRule: rule14
  }, {
    start: 43710,
    length: 2,
    convRule: rule92
  }, {
    start: 43712,
    length: 1,
    convRule: rule14
  }, {
    start: 43713,
    length: 1,
    convRule: rule92
  }, {
    start: 43714,
    length: 1,
    convRule: rule14
  }, {
    start: 43739,
    length: 2,
    convRule: rule14
  }, {
    start: 43741,
    length: 1,
    convRule: rule91
  }, {
    start: 43742,
    length: 2,
    convRule: rule2
  }, {
    start: 43744,
    length: 11,
    convRule: rule14
  }, {
    start: 43755,
    length: 1,
    convRule: rule124
  }, {
    start: 43756,
    length: 2,
    convRule: rule92
  }, {
    start: 43758,
    length: 2,
    convRule: rule124
  }, {
    start: 43760,
    length: 2,
    convRule: rule2
  }, {
    start: 43762,
    length: 1,
    convRule: rule14
  }, {
    start: 43763,
    length: 2,
    convRule: rule91
  }, {
    start: 43765,
    length: 1,
    convRule: rule124
  }, {
    start: 43766,
    length: 1,
    convRule: rule92
  }, {
    start: 43777,
    length: 6,
    convRule: rule14
  }, {
    start: 43785,
    length: 6,
    convRule: rule14
  }, {
    start: 43793,
    length: 6,
    convRule: rule14
  }, {
    start: 43808,
    length: 7,
    convRule: rule14
  }, {
    start: 43816,
    length: 7,
    convRule: rule14
  }, {
    start: 43824,
    length: 35,
    convRule: rule20
  }, {
    start: 43859,
    length: 1,
    convRule: rule197
  }, {
    start: 43860,
    length: 7,
    convRule: rule20
  }, {
    start: 43867,
    length: 1,
    convRule: rule10
  }, {
    start: 43868,
    length: 4,
    convRule: rule91
  }, {
    start: 43872,
    length: 9,
    convRule: rule20
  }, {
    start: 43881,
    length: 1,
    convRule: rule91
  }, {
    start: 43882,
    length: 2,
    convRule: rule10
  }, {
    start: 43888,
    length: 80,
    convRule: rule198
  }, {
    start: 43968,
    length: 35,
    convRule: rule14
  }, {
    start: 44003,
    length: 2,
    convRule: rule124
  }, {
    start: 44005,
    length: 1,
    convRule: rule92
  }, {
    start: 44006,
    length: 2,
    convRule: rule124
  }, {
    start: 44008,
    length: 1,
    convRule: rule92
  }, {
    start: 44009,
    length: 2,
    convRule: rule124
  }, {
    start: 44011,
    length: 1,
    convRule: rule2
  }, {
    start: 44012,
    length: 1,
    convRule: rule124
  }, {
    start: 44013,
    length: 1,
    convRule: rule92
  }, {
    start: 44016,
    length: 10,
    convRule: rule8
  }, {
    start: 44032,
    length: 11172,
    convRule: rule14
  }, {
    start: 55216,
    length: 23,
    convRule: rule14
  }, {
    start: 55243,
    length: 49,
    convRule: rule14
  }, {
    start: 55296,
    length: 896,
    convRule: rule199
  }, {
    start: 56192,
    length: 128,
    convRule: rule199
  }, {
    start: 56320,
    length: 1024,
    convRule: rule199
  }, {
    start: 57344,
    length: 6400,
    convRule: rule200
  }, {
    start: 63744,
    length: 366,
    convRule: rule14
  }, {
    start: 64112,
    length: 106,
    convRule: rule14
  }, {
    start: 64256,
    length: 7,
    convRule: rule20
  }, {
    start: 64275,
    length: 5,
    convRule: rule20
  }, {
    start: 64285,
    length: 1,
    convRule: rule14
  }, {
    start: 64286,
    length: 1,
    convRule: rule92
  }, {
    start: 64287,
    length: 10,
    convRule: rule14
  }, {
    start: 64297,
    length: 1,
    convRule: rule6
  }, {
    start: 64298,
    length: 13,
    convRule: rule14
  }, {
    start: 64312,
    length: 5,
    convRule: rule14
  }, {
    start: 64318,
    length: 1,
    convRule: rule14
  }, {
    start: 64320,
    length: 2,
    convRule: rule14
  }, {
    start: 64323,
    length: 2,
    convRule: rule14
  }, {
    start: 64326,
    length: 108,
    convRule: rule14
  }, {
    start: 64434,
    length: 16,
    convRule: rule10
  }, {
    start: 64467,
    length: 363,
    convRule: rule14
  }, {
    start: 64830,
    length: 1,
    convRule: rule5
  }, {
    start: 64831,
    length: 1,
    convRule: rule4
  }, {
    start: 64848,
    length: 64,
    convRule: rule14
  }, {
    start: 64914,
    length: 54,
    convRule: rule14
  }, {
    start: 65008,
    length: 12,
    convRule: rule14
  }, {
    start: 65020,
    length: 1,
    convRule: rule3
  }, {
    start: 65021,
    length: 1,
    convRule: rule13
  }, {
    start: 65024,
    length: 16,
    convRule: rule92
  }, {
    start: 65040,
    length: 7,
    convRule: rule2
  }, {
    start: 65047,
    length: 1,
    convRule: rule4
  }, {
    start: 65048,
    length: 1,
    convRule: rule5
  }, {
    start: 65049,
    length: 1,
    convRule: rule2
  }, {
    start: 65056,
    length: 16,
    convRule: rule92
  }, {
    start: 65072,
    length: 1,
    convRule: rule2
  }, {
    start: 65073,
    length: 2,
    convRule: rule7
  }, {
    start: 65075,
    length: 2,
    convRule: rule11
  }, {
    start: 65077,
    length: 1,
    convRule: rule4
  }, {
    start: 65078,
    length: 1,
    convRule: rule5
  }, {
    start: 65079,
    length: 1,
    convRule: rule4
  }, {
    start: 65080,
    length: 1,
    convRule: rule5
  }, {
    start: 65081,
    length: 1,
    convRule: rule4
  }, {
    start: 65082,
    length: 1,
    convRule: rule5
  }, {
    start: 65083,
    length: 1,
    convRule: rule4
  }, {
    start: 65084,
    length: 1,
    convRule: rule5
  }, {
    start: 65085,
    length: 1,
    convRule: rule4
  }, {
    start: 65086,
    length: 1,
    convRule: rule5
  }, {
    start: 65087,
    length: 1,
    convRule: rule4
  }, {
    start: 65088,
    length: 1,
    convRule: rule5
  }, {
    start: 65089,
    length: 1,
    convRule: rule4
  }, {
    start: 65090,
    length: 1,
    convRule: rule5
  }, {
    start: 65091,
    length: 1,
    convRule: rule4
  }, {
    start: 65092,
    length: 1,
    convRule: rule5
  }, {
    start: 65093,
    length: 2,
    convRule: rule2
  }, {
    start: 65095,
    length: 1,
    convRule: rule4
  }, {
    start: 65096,
    length: 1,
    convRule: rule5
  }, {
    start: 65097,
    length: 4,
    convRule: rule2
  }, {
    start: 65101,
    length: 3,
    convRule: rule11
  }, {
    start: 65104,
    length: 3,
    convRule: rule2
  }, {
    start: 65108,
    length: 4,
    convRule: rule2
  }, {
    start: 65112,
    length: 1,
    convRule: rule7
  }, {
    start: 65113,
    length: 1,
    convRule: rule4
  }, {
    start: 65114,
    length: 1,
    convRule: rule5
  }, {
    start: 65115,
    length: 1,
    convRule: rule4
  }, {
    start: 65116,
    length: 1,
    convRule: rule5
  }, {
    start: 65117,
    length: 1,
    convRule: rule4
  }, {
    start: 65118,
    length: 1,
    convRule: rule5
  }, {
    start: 65119,
    length: 3,
    convRule: rule2
  }, {
    start: 65122,
    length: 1,
    convRule: rule6
  }, {
    start: 65123,
    length: 1,
    convRule: rule7
  }, {
    start: 65124,
    length: 3,
    convRule: rule6
  }, {
    start: 65128,
    length: 1,
    convRule: rule2
  }, {
    start: 65129,
    length: 1,
    convRule: rule3
  }, {
    start: 65130,
    length: 2,
    convRule: rule2
  }, {
    start: 65136,
    length: 5,
    convRule: rule14
  }, {
    start: 65142,
    length: 135,
    convRule: rule14
  }, {
    start: 65279,
    length: 1,
    convRule: rule16
  }, {
    start: 65281,
    length: 3,
    convRule: rule2
  }, {
    start: 65284,
    length: 1,
    convRule: rule3
  }, {
    start: 65285,
    length: 3,
    convRule: rule2
  }, {
    start: 65288,
    length: 1,
    convRule: rule4
  }, {
    start: 65289,
    length: 1,
    convRule: rule5
  }, {
    start: 65290,
    length: 1,
    convRule: rule2
  }, {
    start: 65291,
    length: 1,
    convRule: rule6
  }, {
    start: 65292,
    length: 1,
    convRule: rule2
  }, {
    start: 65293,
    length: 1,
    convRule: rule7
  }, {
    start: 65294,
    length: 2,
    convRule: rule2
  }, {
    start: 65296,
    length: 10,
    convRule: rule8
  }, {
    start: 65306,
    length: 2,
    convRule: rule2
  }, {
    start: 65308,
    length: 3,
    convRule: rule6
  }, {
    start: 65311,
    length: 2,
    convRule: rule2
  }, {
    start: 65313,
    length: 26,
    convRule: rule9
  }, {
    start: 65339,
    length: 1,
    convRule: rule4
  }, {
    start: 65340,
    length: 1,
    convRule: rule2
  }, {
    start: 65341,
    length: 1,
    convRule: rule5
  }, {
    start: 65342,
    length: 1,
    convRule: rule10
  }, {
    start: 65343,
    length: 1,
    convRule: rule11
  }, {
    start: 65344,
    length: 1,
    convRule: rule10
  }, {
    start: 65345,
    length: 26,
    convRule: rule12
  }, {
    start: 65371,
    length: 1,
    convRule: rule4
  }, {
    start: 65372,
    length: 1,
    convRule: rule6
  }, {
    start: 65373,
    length: 1,
    convRule: rule5
  }, {
    start: 65374,
    length: 1,
    convRule: rule6
  }, {
    start: 65375,
    length: 1,
    convRule: rule4
  }, {
    start: 65376,
    length: 1,
    convRule: rule5
  }, {
    start: 65377,
    length: 1,
    convRule: rule2
  }, {
    start: 65378,
    length: 1,
    convRule: rule4
  }, {
    start: 65379,
    length: 1,
    convRule: rule5
  }, {
    start: 65380,
    length: 2,
    convRule: rule2
  }, {
    start: 65382,
    length: 10,
    convRule: rule14
  }, {
    start: 65392,
    length: 1,
    convRule: rule91
  }, {
    start: 65393,
    length: 45,
    convRule: rule14
  }, {
    start: 65438,
    length: 2,
    convRule: rule91
  }, {
    start: 65440,
    length: 31,
    convRule: rule14
  }, {
    start: 65474,
    length: 6,
    convRule: rule14
  }, {
    start: 65482,
    length: 6,
    convRule: rule14
  }, {
    start: 65490,
    length: 6,
    convRule: rule14
  }, {
    start: 65498,
    length: 3,
    convRule: rule14
  }, {
    start: 65504,
    length: 2,
    convRule: rule3
  }, {
    start: 65506,
    length: 1,
    convRule: rule6
  }, {
    start: 65507,
    length: 1,
    convRule: rule10
  }, {
    start: 65508,
    length: 1,
    convRule: rule13
  }, {
    start: 65509,
    length: 2,
    convRule: rule3
  }, {
    start: 65512,
    length: 1,
    convRule: rule13
  }, {
    start: 65513,
    length: 4,
    convRule: rule6
  }, {
    start: 65517,
    length: 2,
    convRule: rule13
  }, {
    start: 65529,
    length: 3,
    convRule: rule16
  }, {
    start: 65532,
    length: 2,
    convRule: rule13
  }, {
    start: 65536,
    length: 12,
    convRule: rule14
  }, {
    start: 65549,
    length: 26,
    convRule: rule14
  }, {
    start: 65576,
    length: 19,
    convRule: rule14
  }, {
    start: 65596,
    length: 2,
    convRule: rule14
  }, {
    start: 65599,
    length: 15,
    convRule: rule14
  }, {
    start: 65616,
    length: 14,
    convRule: rule14
  }, {
    start: 65664,
    length: 123,
    convRule: rule14
  }, {
    start: 65792,
    length: 3,
    convRule: rule2
  }, {
    start: 65799,
    length: 45,
    convRule: rule17
  }, {
    start: 65847,
    length: 9,
    convRule: rule13
  }, {
    start: 65856,
    length: 53,
    convRule: rule128
  }, {
    start: 65909,
    length: 4,
    convRule: rule17
  }, {
    start: 65913,
    length: 17,
    convRule: rule13
  }, {
    start: 65930,
    length: 2,
    convRule: rule17
  }, {
    start: 65932,
    length: 3,
    convRule: rule13
  }, {
    start: 65936,
    length: 13,
    convRule: rule13
  }, {
    start: 65952,
    length: 1,
    convRule: rule13
  }, {
    start: 66e3,
    length: 45,
    convRule: rule13
  }, {
    start: 66045,
    length: 1,
    convRule: rule92
  }, {
    start: 66176,
    length: 29,
    convRule: rule14
  }, {
    start: 66208,
    length: 49,
    convRule: rule14
  }, {
    start: 66272,
    length: 1,
    convRule: rule92
  }, {
    start: 66273,
    length: 27,
    convRule: rule17
  }, {
    start: 66304,
    length: 32,
    convRule: rule14
  }, {
    start: 66336,
    length: 4,
    convRule: rule17
  }, {
    start: 66349,
    length: 20,
    convRule: rule14
  }, {
    start: 66369,
    length: 1,
    convRule: rule128
  }, {
    start: 66370,
    length: 8,
    convRule: rule14
  }, {
    start: 66378,
    length: 1,
    convRule: rule128
  }, {
    start: 66384,
    length: 38,
    convRule: rule14
  }, {
    start: 66422,
    length: 5,
    convRule: rule92
  }, {
    start: 66432,
    length: 30,
    convRule: rule14
  }, {
    start: 66463,
    length: 1,
    convRule: rule2
  }, {
    start: 66464,
    length: 36,
    convRule: rule14
  }, {
    start: 66504,
    length: 8,
    convRule: rule14
  }, {
    start: 66512,
    length: 1,
    convRule: rule2
  }, {
    start: 66513,
    length: 5,
    convRule: rule128
  }, {
    start: 66560,
    length: 40,
    convRule: rule201
  }, {
    start: 66600,
    length: 40,
    convRule: rule202
  }, {
    start: 66640,
    length: 78,
    convRule: rule14
  }, {
    start: 66720,
    length: 10,
    convRule: rule8
  }, {
    start: 66736,
    length: 36,
    convRule: rule201
  }, {
    start: 66776,
    length: 36,
    convRule: rule202
  }, {
    start: 66816,
    length: 40,
    convRule: rule14
  }, {
    start: 66864,
    length: 52,
    convRule: rule14
  }, {
    start: 66927,
    length: 1,
    convRule: rule2
  }, {
    start: 67072,
    length: 311,
    convRule: rule14
  }, {
    start: 67392,
    length: 22,
    convRule: rule14
  }, {
    start: 67424,
    length: 8,
    convRule: rule14
  }, {
    start: 67584,
    length: 6,
    convRule: rule14
  }, {
    start: 67592,
    length: 1,
    convRule: rule14
  }, {
    start: 67594,
    length: 44,
    convRule: rule14
  }, {
    start: 67639,
    length: 2,
    convRule: rule14
  }, {
    start: 67644,
    length: 1,
    convRule: rule14
  }, {
    start: 67647,
    length: 23,
    convRule: rule14
  }, {
    start: 67671,
    length: 1,
    convRule: rule2
  }, {
    start: 67672,
    length: 8,
    convRule: rule17
  }, {
    start: 67680,
    length: 23,
    convRule: rule14
  }, {
    start: 67703,
    length: 2,
    convRule: rule13
  }, {
    start: 67705,
    length: 7,
    convRule: rule17
  }, {
    start: 67712,
    length: 31,
    convRule: rule14
  }, {
    start: 67751,
    length: 9,
    convRule: rule17
  }, {
    start: 67808,
    length: 19,
    convRule: rule14
  }, {
    start: 67828,
    length: 2,
    convRule: rule14
  }, {
    start: 67835,
    length: 5,
    convRule: rule17
  }, {
    start: 67840,
    length: 22,
    convRule: rule14
  }, {
    start: 67862,
    length: 6,
    convRule: rule17
  }, {
    start: 67871,
    length: 1,
    convRule: rule2
  }, {
    start: 67872,
    length: 26,
    convRule: rule14
  }, {
    start: 67903,
    length: 1,
    convRule: rule2
  }, {
    start: 67968,
    length: 56,
    convRule: rule14
  }, {
    start: 68028,
    length: 2,
    convRule: rule17
  }, {
    start: 68030,
    length: 2,
    convRule: rule14
  }, {
    start: 68032,
    length: 16,
    convRule: rule17
  }, {
    start: 68050,
    length: 46,
    convRule: rule17
  }, {
    start: 68096,
    length: 1,
    convRule: rule14
  }, {
    start: 68097,
    length: 3,
    convRule: rule92
  }, {
    start: 68101,
    length: 2,
    convRule: rule92
  }, {
    start: 68108,
    length: 4,
    convRule: rule92
  }, {
    start: 68112,
    length: 4,
    convRule: rule14
  }, {
    start: 68117,
    length: 3,
    convRule: rule14
  }, {
    start: 68121,
    length: 29,
    convRule: rule14
  }, {
    start: 68152,
    length: 3,
    convRule: rule92
  }, {
    start: 68159,
    length: 1,
    convRule: rule92
  }, {
    start: 68160,
    length: 9,
    convRule: rule17
  }, {
    start: 68176,
    length: 9,
    convRule: rule2
  }, {
    start: 68192,
    length: 29,
    convRule: rule14
  }, {
    start: 68221,
    length: 2,
    convRule: rule17
  }, {
    start: 68223,
    length: 1,
    convRule: rule2
  }, {
    start: 68224,
    length: 29,
    convRule: rule14
  }, {
    start: 68253,
    length: 3,
    convRule: rule17
  }, {
    start: 68288,
    length: 8,
    convRule: rule14
  }, {
    start: 68296,
    length: 1,
    convRule: rule13
  }, {
    start: 68297,
    length: 28,
    convRule: rule14
  }, {
    start: 68325,
    length: 2,
    convRule: rule92
  }, {
    start: 68331,
    length: 5,
    convRule: rule17
  }, {
    start: 68336,
    length: 7,
    convRule: rule2
  }, {
    start: 68352,
    length: 54,
    convRule: rule14
  }, {
    start: 68409,
    length: 7,
    convRule: rule2
  }, {
    start: 68416,
    length: 22,
    convRule: rule14
  }, {
    start: 68440,
    length: 8,
    convRule: rule17
  }, {
    start: 68448,
    length: 19,
    convRule: rule14
  }, {
    start: 68472,
    length: 8,
    convRule: rule17
  }, {
    start: 68480,
    length: 18,
    convRule: rule14
  }, {
    start: 68505,
    length: 4,
    convRule: rule2
  }, {
    start: 68521,
    length: 7,
    convRule: rule17
  }, {
    start: 68608,
    length: 73,
    convRule: rule14
  }, {
    start: 68736,
    length: 51,
    convRule: rule97
  }, {
    start: 68800,
    length: 51,
    convRule: rule102
  }, {
    start: 68858,
    length: 6,
    convRule: rule17
  }, {
    start: 68864,
    length: 36,
    convRule: rule14
  }, {
    start: 68900,
    length: 4,
    convRule: rule92
  }, {
    start: 68912,
    length: 10,
    convRule: rule8
  }, {
    start: 69216,
    length: 31,
    convRule: rule17
  }, {
    start: 69248,
    length: 42,
    convRule: rule14
  }, {
    start: 69291,
    length: 2,
    convRule: rule92
  }, {
    start: 69293,
    length: 1,
    convRule: rule7
  }, {
    start: 69296,
    length: 2,
    convRule: rule14
  }, {
    start: 69376,
    length: 29,
    convRule: rule14
  }, {
    start: 69405,
    length: 10,
    convRule: rule17
  }, {
    start: 69415,
    length: 1,
    convRule: rule14
  }, {
    start: 69424,
    length: 22,
    convRule: rule14
  }, {
    start: 69446,
    length: 11,
    convRule: rule92
  }, {
    start: 69457,
    length: 4,
    convRule: rule17
  }, {
    start: 69461,
    length: 5,
    convRule: rule2
  }, {
    start: 69552,
    length: 21,
    convRule: rule14
  }, {
    start: 69573,
    length: 7,
    convRule: rule17
  }, {
    start: 69600,
    length: 23,
    convRule: rule14
  }, {
    start: 69632,
    length: 1,
    convRule: rule124
  }, {
    start: 69633,
    length: 1,
    convRule: rule92
  }, {
    start: 69634,
    length: 1,
    convRule: rule124
  }, {
    start: 69635,
    length: 53,
    convRule: rule14
  }, {
    start: 69688,
    length: 15,
    convRule: rule92
  }, {
    start: 69703,
    length: 7,
    convRule: rule2
  }, {
    start: 69714,
    length: 20,
    convRule: rule17
  }, {
    start: 69734,
    length: 10,
    convRule: rule8
  }, {
    start: 69759,
    length: 3,
    convRule: rule92
  }, {
    start: 69762,
    length: 1,
    convRule: rule124
  }, {
    start: 69763,
    length: 45,
    convRule: rule14
  }, {
    start: 69808,
    length: 3,
    convRule: rule124
  }, {
    start: 69811,
    length: 4,
    convRule: rule92
  }, {
    start: 69815,
    length: 2,
    convRule: rule124
  }, {
    start: 69817,
    length: 2,
    convRule: rule92
  }, {
    start: 69819,
    length: 2,
    convRule: rule2
  }, {
    start: 69821,
    length: 1,
    convRule: rule16
  }, {
    start: 69822,
    length: 4,
    convRule: rule2
  }, {
    start: 69837,
    length: 1,
    convRule: rule16
  }, {
    start: 69840,
    length: 25,
    convRule: rule14
  }, {
    start: 69872,
    length: 10,
    convRule: rule8
  }, {
    start: 69888,
    length: 3,
    convRule: rule92
  }, {
    start: 69891,
    length: 36,
    convRule: rule14
  }, {
    start: 69927,
    length: 5,
    convRule: rule92
  }, {
    start: 69932,
    length: 1,
    convRule: rule124
  }, {
    start: 69933,
    length: 8,
    convRule: rule92
  }, {
    start: 69942,
    length: 10,
    convRule: rule8
  }, {
    start: 69952,
    length: 4,
    convRule: rule2
  }, {
    start: 69956,
    length: 1,
    convRule: rule14
  }, {
    start: 69957,
    length: 2,
    convRule: rule124
  }, {
    start: 69959,
    length: 1,
    convRule: rule14
  }, {
    start: 69968,
    length: 35,
    convRule: rule14
  }, {
    start: 70003,
    length: 1,
    convRule: rule92
  }, {
    start: 70004,
    length: 2,
    convRule: rule2
  }, {
    start: 70006,
    length: 1,
    convRule: rule14
  }, {
    start: 70016,
    length: 2,
    convRule: rule92
  }, {
    start: 70018,
    length: 1,
    convRule: rule124
  }, {
    start: 70019,
    length: 48,
    convRule: rule14
  }, {
    start: 70067,
    length: 3,
    convRule: rule124
  }, {
    start: 70070,
    length: 9,
    convRule: rule92
  }, {
    start: 70079,
    length: 2,
    convRule: rule124
  }, {
    start: 70081,
    length: 4,
    convRule: rule14
  }, {
    start: 70085,
    length: 4,
    convRule: rule2
  }, {
    start: 70089,
    length: 4,
    convRule: rule92
  }, {
    start: 70093,
    length: 1,
    convRule: rule2
  }, {
    start: 70094,
    length: 1,
    convRule: rule124
  }, {
    start: 70095,
    length: 1,
    convRule: rule92
  }, {
    start: 70096,
    length: 10,
    convRule: rule8
  }, {
    start: 70106,
    length: 1,
    convRule: rule14
  }, {
    start: 70107,
    length: 1,
    convRule: rule2
  }, {
    start: 70108,
    length: 1,
    convRule: rule14
  }, {
    start: 70109,
    length: 3,
    convRule: rule2
  }, {
    start: 70113,
    length: 20,
    convRule: rule17
  }, {
    start: 70144,
    length: 18,
    convRule: rule14
  }, {
    start: 70163,
    length: 25,
    convRule: rule14
  }, {
    start: 70188,
    length: 3,
    convRule: rule124
  }, {
    start: 70191,
    length: 3,
    convRule: rule92
  }, {
    start: 70194,
    length: 2,
    convRule: rule124
  }, {
    start: 70196,
    length: 1,
    convRule: rule92
  }, {
    start: 70197,
    length: 1,
    convRule: rule124
  }, {
    start: 70198,
    length: 2,
    convRule: rule92
  }, {
    start: 70200,
    length: 6,
    convRule: rule2
  }, {
    start: 70206,
    length: 1,
    convRule: rule92
  }, {
    start: 70272,
    length: 7,
    convRule: rule14
  }, {
    start: 70280,
    length: 1,
    convRule: rule14
  }, {
    start: 70282,
    length: 4,
    convRule: rule14
  }, {
    start: 70287,
    length: 15,
    convRule: rule14
  }, {
    start: 70303,
    length: 10,
    convRule: rule14
  }, {
    start: 70313,
    length: 1,
    convRule: rule2
  }, {
    start: 70320,
    length: 47,
    convRule: rule14
  }, {
    start: 70367,
    length: 1,
    convRule: rule92
  }, {
    start: 70368,
    length: 3,
    convRule: rule124
  }, {
    start: 70371,
    length: 8,
    convRule: rule92
  }, {
    start: 70384,
    length: 10,
    convRule: rule8
  }, {
    start: 70400,
    length: 2,
    convRule: rule92
  }, {
    start: 70402,
    length: 2,
    convRule: rule124
  }, {
    start: 70405,
    length: 8,
    convRule: rule14
  }, {
    start: 70415,
    length: 2,
    convRule: rule14
  }, {
    start: 70419,
    length: 22,
    convRule: rule14
  }, {
    start: 70442,
    length: 7,
    convRule: rule14
  }, {
    start: 70450,
    length: 2,
    convRule: rule14
  }, {
    start: 70453,
    length: 5,
    convRule: rule14
  }, {
    start: 70459,
    length: 2,
    convRule: rule92
  }, {
    start: 70461,
    length: 1,
    convRule: rule14
  }, {
    start: 70462,
    length: 2,
    convRule: rule124
  }, {
    start: 70464,
    length: 1,
    convRule: rule92
  }, {
    start: 70465,
    length: 4,
    convRule: rule124
  }, {
    start: 70471,
    length: 2,
    convRule: rule124
  }, {
    start: 70475,
    length: 3,
    convRule: rule124
  }, {
    start: 70480,
    length: 1,
    convRule: rule14
  }, {
    start: 70487,
    length: 1,
    convRule: rule124
  }, {
    start: 70493,
    length: 5,
    convRule: rule14
  }, {
    start: 70498,
    length: 2,
    convRule: rule124
  }, {
    start: 70502,
    length: 7,
    convRule: rule92
  }, {
    start: 70512,
    length: 5,
    convRule: rule92
  }, {
    start: 70656,
    length: 53,
    convRule: rule14
  }, {
    start: 70709,
    length: 3,
    convRule: rule124
  }, {
    start: 70712,
    length: 8,
    convRule: rule92
  }, {
    start: 70720,
    length: 2,
    convRule: rule124
  }, {
    start: 70722,
    length: 3,
    convRule: rule92
  }, {
    start: 70725,
    length: 1,
    convRule: rule124
  }, {
    start: 70726,
    length: 1,
    convRule: rule92
  }, {
    start: 70727,
    length: 4,
    convRule: rule14
  }, {
    start: 70731,
    length: 5,
    convRule: rule2
  }, {
    start: 70736,
    length: 10,
    convRule: rule8
  }, {
    start: 70746,
    length: 2,
    convRule: rule2
  }, {
    start: 70749,
    length: 1,
    convRule: rule2
  }, {
    start: 70750,
    length: 1,
    convRule: rule92
  }, {
    start: 70751,
    length: 3,
    convRule: rule14
  }, {
    start: 70784,
    length: 48,
    convRule: rule14
  }, {
    start: 70832,
    length: 3,
    convRule: rule124
  }, {
    start: 70835,
    length: 6,
    convRule: rule92
  }, {
    start: 70841,
    length: 1,
    convRule: rule124
  }, {
    start: 70842,
    length: 1,
    convRule: rule92
  }, {
    start: 70843,
    length: 4,
    convRule: rule124
  }, {
    start: 70847,
    length: 2,
    convRule: rule92
  }, {
    start: 70849,
    length: 1,
    convRule: rule124
  }, {
    start: 70850,
    length: 2,
    convRule: rule92
  }, {
    start: 70852,
    length: 2,
    convRule: rule14
  }, {
    start: 70854,
    length: 1,
    convRule: rule2
  }, {
    start: 70855,
    length: 1,
    convRule: rule14
  }, {
    start: 70864,
    length: 10,
    convRule: rule8
  }, {
    start: 71040,
    length: 47,
    convRule: rule14
  }, {
    start: 71087,
    length: 3,
    convRule: rule124
  }, {
    start: 71090,
    length: 4,
    convRule: rule92
  }, {
    start: 71096,
    length: 4,
    convRule: rule124
  }, {
    start: 71100,
    length: 2,
    convRule: rule92
  }, {
    start: 71102,
    length: 1,
    convRule: rule124
  }, {
    start: 71103,
    length: 2,
    convRule: rule92
  }, {
    start: 71105,
    length: 23,
    convRule: rule2
  }, {
    start: 71128,
    length: 4,
    convRule: rule14
  }, {
    start: 71132,
    length: 2,
    convRule: rule92
  }, {
    start: 71168,
    length: 48,
    convRule: rule14
  }, {
    start: 71216,
    length: 3,
    convRule: rule124
  }, {
    start: 71219,
    length: 8,
    convRule: rule92
  }, {
    start: 71227,
    length: 2,
    convRule: rule124
  }, {
    start: 71229,
    length: 1,
    convRule: rule92
  }, {
    start: 71230,
    length: 1,
    convRule: rule124
  }, {
    start: 71231,
    length: 2,
    convRule: rule92
  }, {
    start: 71233,
    length: 3,
    convRule: rule2
  }, {
    start: 71236,
    length: 1,
    convRule: rule14
  }, {
    start: 71248,
    length: 10,
    convRule: rule8
  }, {
    start: 71264,
    length: 13,
    convRule: rule2
  }, {
    start: 71296,
    length: 43,
    convRule: rule14
  }, {
    start: 71339,
    length: 1,
    convRule: rule92
  }, {
    start: 71340,
    length: 1,
    convRule: rule124
  }, {
    start: 71341,
    length: 1,
    convRule: rule92
  }, {
    start: 71342,
    length: 2,
    convRule: rule124
  }, {
    start: 71344,
    length: 6,
    convRule: rule92
  }, {
    start: 71350,
    length: 1,
    convRule: rule124
  }, {
    start: 71351,
    length: 1,
    convRule: rule92
  }, {
    start: 71352,
    length: 1,
    convRule: rule14
  }, {
    start: 71360,
    length: 10,
    convRule: rule8
  }, {
    start: 71424,
    length: 27,
    convRule: rule14
  }, {
    start: 71453,
    length: 3,
    convRule: rule92
  }, {
    start: 71456,
    length: 2,
    convRule: rule124
  }, {
    start: 71458,
    length: 4,
    convRule: rule92
  }, {
    start: 71462,
    length: 1,
    convRule: rule124
  }, {
    start: 71463,
    length: 5,
    convRule: rule92
  }, {
    start: 71472,
    length: 10,
    convRule: rule8
  }, {
    start: 71482,
    length: 2,
    convRule: rule17
  }, {
    start: 71484,
    length: 3,
    convRule: rule2
  }, {
    start: 71487,
    length: 1,
    convRule: rule13
  }, {
    start: 71680,
    length: 44,
    convRule: rule14
  }, {
    start: 71724,
    length: 3,
    convRule: rule124
  }, {
    start: 71727,
    length: 9,
    convRule: rule92
  }, {
    start: 71736,
    length: 1,
    convRule: rule124
  }, {
    start: 71737,
    length: 2,
    convRule: rule92
  }, {
    start: 71739,
    length: 1,
    convRule: rule2
  }, {
    start: 71840,
    length: 32,
    convRule: rule9
  }, {
    start: 71872,
    length: 32,
    convRule: rule12
  }, {
    start: 71904,
    length: 10,
    convRule: rule8
  }, {
    start: 71914,
    length: 9,
    convRule: rule17
  }, {
    start: 71935,
    length: 8,
    convRule: rule14
  }, {
    start: 71945,
    length: 1,
    convRule: rule14
  }, {
    start: 71948,
    length: 8,
    convRule: rule14
  }, {
    start: 71957,
    length: 2,
    convRule: rule14
  }, {
    start: 71960,
    length: 24,
    convRule: rule14
  }, {
    start: 71984,
    length: 6,
    convRule: rule124
  }, {
    start: 71991,
    length: 2,
    convRule: rule124
  }, {
    start: 71995,
    length: 2,
    convRule: rule92
  }, {
    start: 71997,
    length: 1,
    convRule: rule124
  }, {
    start: 71998,
    length: 1,
    convRule: rule92
  }, {
    start: 71999,
    length: 1,
    convRule: rule14
  }, {
    start: 72e3,
    length: 1,
    convRule: rule124
  }, {
    start: 72001,
    length: 1,
    convRule: rule14
  }, {
    start: 72002,
    length: 1,
    convRule: rule124
  }, {
    start: 72003,
    length: 1,
    convRule: rule92
  }, {
    start: 72004,
    length: 3,
    convRule: rule2
  }, {
    start: 72016,
    length: 10,
    convRule: rule8
  }, {
    start: 72096,
    length: 8,
    convRule: rule14
  }, {
    start: 72106,
    length: 39,
    convRule: rule14
  }, {
    start: 72145,
    length: 3,
    convRule: rule124
  }, {
    start: 72148,
    length: 4,
    convRule: rule92
  }, {
    start: 72154,
    length: 2,
    convRule: rule92
  }, {
    start: 72156,
    length: 4,
    convRule: rule124
  }, {
    start: 72160,
    length: 1,
    convRule: rule92
  }, {
    start: 72161,
    length: 1,
    convRule: rule14
  }, {
    start: 72162,
    length: 1,
    convRule: rule2
  }, {
    start: 72163,
    length: 1,
    convRule: rule14
  }, {
    start: 72164,
    length: 1,
    convRule: rule124
  }, {
    start: 72192,
    length: 1,
    convRule: rule14
  }, {
    start: 72193,
    length: 10,
    convRule: rule92
  }, {
    start: 72203,
    length: 40,
    convRule: rule14
  }, {
    start: 72243,
    length: 6,
    convRule: rule92
  }, {
    start: 72249,
    length: 1,
    convRule: rule124
  }, {
    start: 72250,
    length: 1,
    convRule: rule14
  }, {
    start: 72251,
    length: 4,
    convRule: rule92
  }, {
    start: 72255,
    length: 8,
    convRule: rule2
  }, {
    start: 72263,
    length: 1,
    convRule: rule92
  }, {
    start: 72272,
    length: 1,
    convRule: rule14
  }, {
    start: 72273,
    length: 6,
    convRule: rule92
  }, {
    start: 72279,
    length: 2,
    convRule: rule124
  }, {
    start: 72281,
    length: 3,
    convRule: rule92
  }, {
    start: 72284,
    length: 46,
    convRule: rule14
  }, {
    start: 72330,
    length: 13,
    convRule: rule92
  }, {
    start: 72343,
    length: 1,
    convRule: rule124
  }, {
    start: 72344,
    length: 2,
    convRule: rule92
  }, {
    start: 72346,
    length: 3,
    convRule: rule2
  }, {
    start: 72349,
    length: 1,
    convRule: rule14
  }, {
    start: 72350,
    length: 5,
    convRule: rule2
  }, {
    start: 72384,
    length: 57,
    convRule: rule14
  }, {
    start: 72704,
    length: 9,
    convRule: rule14
  }, {
    start: 72714,
    length: 37,
    convRule: rule14
  }, {
    start: 72751,
    length: 1,
    convRule: rule124
  }, {
    start: 72752,
    length: 7,
    convRule: rule92
  }, {
    start: 72760,
    length: 6,
    convRule: rule92
  }, {
    start: 72766,
    length: 1,
    convRule: rule124
  }, {
    start: 72767,
    length: 1,
    convRule: rule92
  }, {
    start: 72768,
    length: 1,
    convRule: rule14
  }, {
    start: 72769,
    length: 5,
    convRule: rule2
  }, {
    start: 72784,
    length: 10,
    convRule: rule8
  }, {
    start: 72794,
    length: 19,
    convRule: rule17
  }, {
    start: 72816,
    length: 2,
    convRule: rule2
  }, {
    start: 72818,
    length: 30,
    convRule: rule14
  }, {
    start: 72850,
    length: 22,
    convRule: rule92
  }, {
    start: 72873,
    length: 1,
    convRule: rule124
  }, {
    start: 72874,
    length: 7,
    convRule: rule92
  }, {
    start: 72881,
    length: 1,
    convRule: rule124
  }, {
    start: 72882,
    length: 2,
    convRule: rule92
  }, {
    start: 72884,
    length: 1,
    convRule: rule124
  }, {
    start: 72885,
    length: 2,
    convRule: rule92
  }, {
    start: 72960,
    length: 7,
    convRule: rule14
  }, {
    start: 72968,
    length: 2,
    convRule: rule14
  }, {
    start: 72971,
    length: 38,
    convRule: rule14
  }, {
    start: 73009,
    length: 6,
    convRule: rule92
  }, {
    start: 73018,
    length: 1,
    convRule: rule92
  }, {
    start: 73020,
    length: 2,
    convRule: rule92
  }, {
    start: 73023,
    length: 7,
    convRule: rule92
  }, {
    start: 73030,
    length: 1,
    convRule: rule14
  }, {
    start: 73031,
    length: 1,
    convRule: rule92
  }, {
    start: 73040,
    length: 10,
    convRule: rule8
  }, {
    start: 73056,
    length: 6,
    convRule: rule14
  }, {
    start: 73063,
    length: 2,
    convRule: rule14
  }, {
    start: 73066,
    length: 32,
    convRule: rule14
  }, {
    start: 73098,
    length: 5,
    convRule: rule124
  }, {
    start: 73104,
    length: 2,
    convRule: rule92
  }, {
    start: 73107,
    length: 2,
    convRule: rule124
  }, {
    start: 73109,
    length: 1,
    convRule: rule92
  }, {
    start: 73110,
    length: 1,
    convRule: rule124
  }, {
    start: 73111,
    length: 1,
    convRule: rule92
  }, {
    start: 73112,
    length: 1,
    convRule: rule14
  }, {
    start: 73120,
    length: 10,
    convRule: rule8
  }, {
    start: 73440,
    length: 19,
    convRule: rule14
  }, {
    start: 73459,
    length: 2,
    convRule: rule92
  }, {
    start: 73461,
    length: 2,
    convRule: rule124
  }, {
    start: 73463,
    length: 2,
    convRule: rule2
  }, {
    start: 73648,
    length: 1,
    convRule: rule14
  }, {
    start: 73664,
    length: 21,
    convRule: rule17
  }, {
    start: 73685,
    length: 8,
    convRule: rule13
  }, {
    start: 73693,
    length: 4,
    convRule: rule3
  }, {
    start: 73697,
    length: 17,
    convRule: rule13
  }, {
    start: 73727,
    length: 1,
    convRule: rule2
  }, {
    start: 73728,
    length: 922,
    convRule: rule14
  }, {
    start: 74752,
    length: 111,
    convRule: rule128
  }, {
    start: 74864,
    length: 5,
    convRule: rule2
  }, {
    start: 74880,
    length: 196,
    convRule: rule14
  }, {
    start: 77824,
    length: 1071,
    convRule: rule14
  }, {
    start: 78896,
    length: 9,
    convRule: rule16
  }, {
    start: 82944,
    length: 583,
    convRule: rule14
  }, {
    start: 92160,
    length: 569,
    convRule: rule14
  }, {
    start: 92736,
    length: 31,
    convRule: rule14
  }, {
    start: 92768,
    length: 10,
    convRule: rule8
  }, {
    start: 92782,
    length: 2,
    convRule: rule2
  }, {
    start: 92880,
    length: 30,
    convRule: rule14
  }, {
    start: 92912,
    length: 5,
    convRule: rule92
  }, {
    start: 92917,
    length: 1,
    convRule: rule2
  }, {
    start: 92928,
    length: 48,
    convRule: rule14
  }, {
    start: 92976,
    length: 7,
    convRule: rule92
  }, {
    start: 92983,
    length: 5,
    convRule: rule2
  }, {
    start: 92988,
    length: 4,
    convRule: rule13
  }, {
    start: 92992,
    length: 4,
    convRule: rule91
  }, {
    start: 92996,
    length: 1,
    convRule: rule2
  }, {
    start: 92997,
    length: 1,
    convRule: rule13
  }, {
    start: 93008,
    length: 10,
    convRule: rule8
  }, {
    start: 93019,
    length: 7,
    convRule: rule17
  }, {
    start: 93027,
    length: 21,
    convRule: rule14
  }, {
    start: 93053,
    length: 19,
    convRule: rule14
  }, {
    start: 93760,
    length: 32,
    convRule: rule9
  }, {
    start: 93792,
    length: 32,
    convRule: rule12
  }, {
    start: 93824,
    length: 23,
    convRule: rule17
  }, {
    start: 93847,
    length: 4,
    convRule: rule2
  }, {
    start: 93952,
    length: 75,
    convRule: rule14
  }, {
    start: 94031,
    length: 1,
    convRule: rule92
  }, {
    start: 94032,
    length: 1,
    convRule: rule14
  }, {
    start: 94033,
    length: 55,
    convRule: rule124
  }, {
    start: 94095,
    length: 4,
    convRule: rule92
  }, {
    start: 94099,
    length: 13,
    convRule: rule91
  }, {
    start: 94176,
    length: 2,
    convRule: rule91
  }, {
    start: 94178,
    length: 1,
    convRule: rule2
  }, {
    start: 94179,
    length: 1,
    convRule: rule91
  }, {
    start: 94180,
    length: 1,
    convRule: rule92
  }, {
    start: 94192,
    length: 2,
    convRule: rule124
  }, {
    start: 94208,
    length: 6136,
    convRule: rule14
  }, {
    start: 100352,
    length: 1238,
    convRule: rule14
  }, {
    start: 101632,
    length: 9,
    convRule: rule14
  }, {
    start: 110592,
    length: 287,
    convRule: rule14
  }, {
    start: 110928,
    length: 3,
    convRule: rule14
  }, {
    start: 110948,
    length: 4,
    convRule: rule14
  }, {
    start: 110960,
    length: 396,
    convRule: rule14
  }, {
    start: 113664,
    length: 107,
    convRule: rule14
  }, {
    start: 113776,
    length: 13,
    convRule: rule14
  }, {
    start: 113792,
    length: 9,
    convRule: rule14
  }, {
    start: 113808,
    length: 10,
    convRule: rule14
  }, {
    start: 113820,
    length: 1,
    convRule: rule13
  }, {
    start: 113821,
    length: 2,
    convRule: rule92
  }, {
    start: 113823,
    length: 1,
    convRule: rule2
  }, {
    start: 113824,
    length: 4,
    convRule: rule16
  }, {
    start: 118784,
    length: 246,
    convRule: rule13
  }, {
    start: 119040,
    length: 39,
    convRule: rule13
  }, {
    start: 119081,
    length: 60,
    convRule: rule13
  }, {
    start: 119141,
    length: 2,
    convRule: rule124
  }, {
    start: 119143,
    length: 3,
    convRule: rule92
  }, {
    start: 119146,
    length: 3,
    convRule: rule13
  }, {
    start: 119149,
    length: 6,
    convRule: rule124
  }, {
    start: 119155,
    length: 8,
    convRule: rule16
  }, {
    start: 119163,
    length: 8,
    convRule: rule92
  }, {
    start: 119171,
    length: 2,
    convRule: rule13
  }, {
    start: 119173,
    length: 7,
    convRule: rule92
  }, {
    start: 119180,
    length: 30,
    convRule: rule13
  }, {
    start: 119210,
    length: 4,
    convRule: rule92
  }, {
    start: 119214,
    length: 59,
    convRule: rule13
  }, {
    start: 119296,
    length: 66,
    convRule: rule13
  }, {
    start: 119362,
    length: 3,
    convRule: rule92
  }, {
    start: 119365,
    length: 1,
    convRule: rule13
  }, {
    start: 119520,
    length: 20,
    convRule: rule17
  }, {
    start: 119552,
    length: 87,
    convRule: rule13
  }, {
    start: 119648,
    length: 25,
    convRule: rule17
  }, {
    start: 119808,
    length: 26,
    convRule: rule107
  }, {
    start: 119834,
    length: 26,
    convRule: rule20
  }, {
    start: 119860,
    length: 26,
    convRule: rule107
  }, {
    start: 119886,
    length: 7,
    convRule: rule20
  }, {
    start: 119894,
    length: 18,
    convRule: rule20
  }, {
    start: 119912,
    length: 26,
    convRule: rule107
  }, {
    start: 119938,
    length: 26,
    convRule: rule20
  }, {
    start: 119964,
    length: 1,
    convRule: rule107
  }, {
    start: 119966,
    length: 2,
    convRule: rule107
  }, {
    start: 119970,
    length: 1,
    convRule: rule107
  }, {
    start: 119973,
    length: 2,
    convRule: rule107
  }, {
    start: 119977,
    length: 4,
    convRule: rule107
  }, {
    start: 119982,
    length: 8,
    convRule: rule107
  }, {
    start: 119990,
    length: 4,
    convRule: rule20
  }, {
    start: 119995,
    length: 1,
    convRule: rule20
  }, {
    start: 119997,
    length: 7,
    convRule: rule20
  }, {
    start: 120005,
    length: 11,
    convRule: rule20
  }, {
    start: 120016,
    length: 26,
    convRule: rule107
  }, {
    start: 120042,
    length: 26,
    convRule: rule20
  }, {
    start: 120068,
    length: 2,
    convRule: rule107
  }, {
    start: 120071,
    length: 4,
    convRule: rule107
  }, {
    start: 120077,
    length: 8,
    convRule: rule107
  }, {
    start: 120086,
    length: 7,
    convRule: rule107
  }, {
    start: 120094,
    length: 26,
    convRule: rule20
  }, {
    start: 120120,
    length: 2,
    convRule: rule107
  }, {
    start: 120123,
    length: 4,
    convRule: rule107
  }, {
    start: 120128,
    length: 5,
    convRule: rule107
  }, {
    start: 120134,
    length: 1,
    convRule: rule107
  }, {
    start: 120138,
    length: 7,
    convRule: rule107
  }, {
    start: 120146,
    length: 26,
    convRule: rule20
  }, {
    start: 120172,
    length: 26,
    convRule: rule107
  }, {
    start: 120198,
    length: 26,
    convRule: rule20
  }, {
    start: 120224,
    length: 26,
    convRule: rule107
  }, {
    start: 120250,
    length: 26,
    convRule: rule20
  }, {
    start: 120276,
    length: 26,
    convRule: rule107
  }, {
    start: 120302,
    length: 26,
    convRule: rule20
  }, {
    start: 120328,
    length: 26,
    convRule: rule107
  }, {
    start: 120354,
    length: 26,
    convRule: rule20
  }, {
    start: 120380,
    length: 26,
    convRule: rule107
  }, {
    start: 120406,
    length: 26,
    convRule: rule20
  }, {
    start: 120432,
    length: 26,
    convRule: rule107
  }, {
    start: 120458,
    length: 28,
    convRule: rule20
  }, {
    start: 120488,
    length: 25,
    convRule: rule107
  }, {
    start: 120513,
    length: 1,
    convRule: rule6
  }, {
    start: 120514,
    length: 25,
    convRule: rule20
  }, {
    start: 120539,
    length: 1,
    convRule: rule6
  }, {
    start: 120540,
    length: 6,
    convRule: rule20
  }, {
    start: 120546,
    length: 25,
    convRule: rule107
  }, {
    start: 120571,
    length: 1,
    convRule: rule6
  }, {
    start: 120572,
    length: 25,
    convRule: rule20
  }, {
    start: 120597,
    length: 1,
    convRule: rule6
  }, {
    start: 120598,
    length: 6,
    convRule: rule20
  }, {
    start: 120604,
    length: 25,
    convRule: rule107
  }, {
    start: 120629,
    length: 1,
    convRule: rule6
  }, {
    start: 120630,
    length: 25,
    convRule: rule20
  }, {
    start: 120655,
    length: 1,
    convRule: rule6
  }, {
    start: 120656,
    length: 6,
    convRule: rule20
  }, {
    start: 120662,
    length: 25,
    convRule: rule107
  }, {
    start: 120687,
    length: 1,
    convRule: rule6
  }, {
    start: 120688,
    length: 25,
    convRule: rule20
  }, {
    start: 120713,
    length: 1,
    convRule: rule6
  }, {
    start: 120714,
    length: 6,
    convRule: rule20
  }, {
    start: 120720,
    length: 25,
    convRule: rule107
  }, {
    start: 120745,
    length: 1,
    convRule: rule6
  }, {
    start: 120746,
    length: 25,
    convRule: rule20
  }, {
    start: 120771,
    length: 1,
    convRule: rule6
  }, {
    start: 120772,
    length: 6,
    convRule: rule20
  }, {
    start: 120778,
    length: 1,
    convRule: rule107
  }, {
    start: 120779,
    length: 1,
    convRule: rule20
  }, {
    start: 120782,
    length: 50,
    convRule: rule8
  }, {
    start: 120832,
    length: 512,
    convRule: rule13
  }, {
    start: 121344,
    length: 55,
    convRule: rule92
  }, {
    start: 121399,
    length: 4,
    convRule: rule13
  }, {
    start: 121403,
    length: 50,
    convRule: rule92
  }, {
    start: 121453,
    length: 8,
    convRule: rule13
  }, {
    start: 121461,
    length: 1,
    convRule: rule92
  }, {
    start: 121462,
    length: 14,
    convRule: rule13
  }, {
    start: 121476,
    length: 1,
    convRule: rule92
  }, {
    start: 121477,
    length: 2,
    convRule: rule13
  }, {
    start: 121479,
    length: 5,
    convRule: rule2
  }, {
    start: 121499,
    length: 5,
    convRule: rule92
  }, {
    start: 121505,
    length: 15,
    convRule: rule92
  }, {
    start: 122880,
    length: 7,
    convRule: rule92
  }, {
    start: 122888,
    length: 17,
    convRule: rule92
  }, {
    start: 122907,
    length: 7,
    convRule: rule92
  }, {
    start: 122915,
    length: 2,
    convRule: rule92
  }, {
    start: 122918,
    length: 5,
    convRule: rule92
  }, {
    start: 123136,
    length: 45,
    convRule: rule14
  }, {
    start: 123184,
    length: 7,
    convRule: rule92
  }, {
    start: 123191,
    length: 7,
    convRule: rule91
  }, {
    start: 123200,
    length: 10,
    convRule: rule8
  }, {
    start: 123214,
    length: 1,
    convRule: rule14
  }, {
    start: 123215,
    length: 1,
    convRule: rule13
  }, {
    start: 123584,
    length: 44,
    convRule: rule14
  }, {
    start: 123628,
    length: 4,
    convRule: rule92
  }, {
    start: 123632,
    length: 10,
    convRule: rule8
  }, {
    start: 123647,
    length: 1,
    convRule: rule3
  }, {
    start: 124928,
    length: 197,
    convRule: rule14
  }, {
    start: 125127,
    length: 9,
    convRule: rule17
  }, {
    start: 125136,
    length: 7,
    convRule: rule92
  }, {
    start: 125184,
    length: 34,
    convRule: rule203
  }, {
    start: 125218,
    length: 34,
    convRule: rule204
  }, {
    start: 125252,
    length: 7,
    convRule: rule92
  }, {
    start: 125259,
    length: 1,
    convRule: rule91
  }, {
    start: 125264,
    length: 10,
    convRule: rule8
  }, {
    start: 125278,
    length: 2,
    convRule: rule2
  }, {
    start: 126065,
    length: 59,
    convRule: rule17
  }, {
    start: 126124,
    length: 1,
    convRule: rule13
  }, {
    start: 126125,
    length: 3,
    convRule: rule17
  }, {
    start: 126128,
    length: 1,
    convRule: rule3
  }, {
    start: 126129,
    length: 4,
    convRule: rule17
  }, {
    start: 126209,
    length: 45,
    convRule: rule17
  }, {
    start: 126254,
    length: 1,
    convRule: rule13
  }, {
    start: 126255,
    length: 15,
    convRule: rule17
  }, {
    start: 126464,
    length: 4,
    convRule: rule14
  }, {
    start: 126469,
    length: 27,
    convRule: rule14
  }, {
    start: 126497,
    length: 2,
    convRule: rule14
  }, {
    start: 126500,
    length: 1,
    convRule: rule14
  }, {
    start: 126503,
    length: 1,
    convRule: rule14
  }, {
    start: 126505,
    length: 10,
    convRule: rule14
  }, {
    start: 126516,
    length: 4,
    convRule: rule14
  }, {
    start: 126521,
    length: 1,
    convRule: rule14
  }, {
    start: 126523,
    length: 1,
    convRule: rule14
  }, {
    start: 126530,
    length: 1,
    convRule: rule14
  }, {
    start: 126535,
    length: 1,
    convRule: rule14
  }, {
    start: 126537,
    length: 1,
    convRule: rule14
  }, {
    start: 126539,
    length: 1,
    convRule: rule14
  }, {
    start: 126541,
    length: 3,
    convRule: rule14
  }, {
    start: 126545,
    length: 2,
    convRule: rule14
  }, {
    start: 126548,
    length: 1,
    convRule: rule14
  }, {
    start: 126551,
    length: 1,
    convRule: rule14
  }, {
    start: 126553,
    length: 1,
    convRule: rule14
  }, {
    start: 126555,
    length: 1,
    convRule: rule14
  }, {
    start: 126557,
    length: 1,
    convRule: rule14
  }, {
    start: 126559,
    length: 1,
    convRule: rule14
  }, {
    start: 126561,
    length: 2,
    convRule: rule14
  }, {
    start: 126564,
    length: 1,
    convRule: rule14
  }, {
    start: 126567,
    length: 4,
    convRule: rule14
  }, {
    start: 126572,
    length: 7,
    convRule: rule14
  }, {
    start: 126580,
    length: 4,
    convRule: rule14
  }, {
    start: 126585,
    length: 4,
    convRule: rule14
  }, {
    start: 126590,
    length: 1,
    convRule: rule14
  }, {
    start: 126592,
    length: 10,
    convRule: rule14
  }, {
    start: 126603,
    length: 17,
    convRule: rule14
  }, {
    start: 126625,
    length: 3,
    convRule: rule14
  }, {
    start: 126629,
    length: 5,
    convRule: rule14
  }, {
    start: 126635,
    length: 17,
    convRule: rule14
  }, {
    start: 126704,
    length: 2,
    convRule: rule6
  }, {
    start: 126976,
    length: 44,
    convRule: rule13
  }, {
    start: 127024,
    length: 100,
    convRule: rule13
  }, {
    start: 127136,
    length: 15,
    convRule: rule13
  }, {
    start: 127153,
    length: 15,
    convRule: rule13
  }, {
    start: 127169,
    length: 15,
    convRule: rule13
  }, {
    start: 127185,
    length: 37,
    convRule: rule13
  }, {
    start: 127232,
    length: 13,
    convRule: rule17
  }, {
    start: 127245,
    length: 161,
    convRule: rule13
  }, {
    start: 127462,
    length: 29,
    convRule: rule13
  }, {
    start: 127504,
    length: 44,
    convRule: rule13
  }, {
    start: 127552,
    length: 9,
    convRule: rule13
  }, {
    start: 127568,
    length: 2,
    convRule: rule13
  }, {
    start: 127584,
    length: 6,
    convRule: rule13
  }, {
    start: 127744,
    length: 251,
    convRule: rule13
  }, {
    start: 127995,
    length: 5,
    convRule: rule10
  }, {
    start: 128e3,
    length: 728,
    convRule: rule13
  }, {
    start: 128736,
    length: 13,
    convRule: rule13
  }, {
    start: 128752,
    length: 13,
    convRule: rule13
  }, {
    start: 128768,
    length: 116,
    convRule: rule13
  }, {
    start: 128896,
    length: 89,
    convRule: rule13
  }, {
    start: 128992,
    length: 12,
    convRule: rule13
  }, {
    start: 129024,
    length: 12,
    convRule: rule13
  }, {
    start: 129040,
    length: 56,
    convRule: rule13
  }, {
    start: 129104,
    length: 10,
    convRule: rule13
  }, {
    start: 129120,
    length: 40,
    convRule: rule13
  }, {
    start: 129168,
    length: 30,
    convRule: rule13
  }, {
    start: 129200,
    length: 2,
    convRule: rule13
  }, {
    start: 129280,
    length: 121,
    convRule: rule13
  }, {
    start: 129402,
    length: 82,
    convRule: rule13
  }, {
    start: 129485,
    length: 135,
    convRule: rule13
  }, {
    start: 129632,
    length: 14,
    convRule: rule13
  }, {
    start: 129648,
    length: 5,
    convRule: rule13
  }, {
    start: 129656,
    length: 3,
    convRule: rule13
  }, {
    start: 129664,
    length: 7,
    convRule: rule13
  }, {
    start: 129680,
    length: 25,
    convRule: rule13
  }, {
    start: 129712,
    length: 7,
    convRule: rule13
  }, {
    start: 129728,
    length: 3,
    convRule: rule13
  }, {
    start: 129744,
    length: 7,
    convRule: rule13
  }, {
    start: 129792,
    length: 147,
    convRule: rule13
  }, {
    start: 129940,
    length: 55,
    convRule: rule13
  }, {
    start: 130032,
    length: 10,
    convRule: rule8
  }, {
    start: 131072,
    length: 42718,
    convRule: rule14
  }, {
    start: 173824,
    length: 4149,
    convRule: rule14
  }, {
    start: 177984,
    length: 222,
    convRule: rule14
  }, {
    start: 178208,
    length: 5762,
    convRule: rule14
  }, {
    start: 183984,
    length: 7473,
    convRule: rule14
  }, {
    start: 194560,
    length: 542,
    convRule: rule14
  }, {
    start: 196608,
    length: 4939,
    convRule: rule14
  }, {
    start: 917505,
    length: 1,
    convRule: rule16
  }, {
    start: 917536,
    length: 96,
    convRule: rule16
  }, {
    start: 917760,
    length: 240,
    convRule: rule92
  }, {
    start: 983040,
    length: 65534,
    convRule: rule200
  }, {
    start: 1048576,
    length: 65534,
    convRule: rule200
  }];
  var checkAttr = function(categories) {
    return function($$char3) {
      var numOfBlocks = function() {
        var $43 = $$char3 < 256;
        if ($43) {
          return numLat1Blocks;
        }
        ;
        return numBlocks;
      }();
      var maybeConversionRule = getRule(allchars)($$char3)(numOfBlocks);
      if (maybeConversionRule instanceof Nothing) {
        return false;
      }
      ;
      if (maybeConversionRule instanceof Just) {
        return isJust(elemIndex2(maybeConversionRule.value0.category)(categories));
      }
      ;
      throw new Error("Failed pattern match at Data.CodePoint.Unicode.Internal (line 5645, column 5 - line 5647, column 86): " + [maybeConversionRule.constructor.name]);
    };
  };
  var uIswalnum = /* @__PURE__ */ checkAttr([gencatLT, gencatLU, gencatLL, gencatLM, gencatLO, gencatMC, gencatME, gencatMN, gencatNO, gencatND, gencatNL]);

  // output/Data.CodePoint.Unicode/index.js
  var fromEnum3 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var lessThanOrEq1 = /* @__PURE__ */ lessThanOrEq(ordCodePoint);
  var isLatin1 = function(c) {
    return lessThanOrEq1(c)(codePointFromChar("\xFF"));
  };
  var isDecDigit = function(c) {
    var diff2 = fromEnum3(c) - toCharCode2("0") | 0;
    return diff2 <= 9 && diff2 >= 0;
  };
  var isAlphaNum = function($70) {
    return uIswalnum(fromEnum3($70));
  };

  // output/Slug/index.js
  var not2 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean));
  var map20 = /* @__PURE__ */ map(functorArray);
  var bind4 = /* @__PURE__ */ bind(bindMaybe);
  var toString4 = function(v) {
    return v;
  };
  var generate = function(s) {
    var words = function() {
      var $39 = filter(not2($$null2));
      var $40 = split(" ");
      return function($41) {
        return $39($40($41));
      };
    }();
    var stripApostrophes = replaceAll("'")("");
    var onlyAlphaNum = function() {
      var $42 = map20(function(x) {
        var $29 = isAlphaNum(x) && isLatin1(x);
        if ($29) {
          return x;
        }
        ;
        return codePointFromChar(" ");
      });
      return function($43) {
        return fromCodePointArray($42(toCodePointArray($43)));
      };
    }();
    var arr = words(toLower(onlyAlphaNum(stripApostrophes(s))));
    var $30 = $$null(arr);
    if ($30) {
      return Nothing.value;
    }
    ;
    return new Just(joinWith("-")(arr));
  };
  var parse3 = function(str) {
    var check2 = function(v) {
      if (v === str) {
        return new Just(v);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Slug (line 95, column 3 - line 97, column 26): " + [v.constructor.name]);
    };
    return bind4(generate(str))(check2);
  };
  var eqSlug = {
    eq: function(x) {
      return function(y) {
        return x === y;
      };
    }
  };

  // output/Conduit.Data.Route/index.js
  var gsep2 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteNoArguments));
  var gsep1 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteAll));
  var eq4 = /* @__PURE__ */ eq(eqSlug);
  var eq12 = /* @__PURE__ */ eq(eqUsername);
  var Home = /* @__PURE__ */ function() {
    function Home2() {
    }
    ;
    Home2.value = new Home2();
    return Home2;
  }();
  var Login = /* @__PURE__ */ function() {
    function Login3() {
    }
    ;
    Login3.value = new Login3();
    return Login3;
  }();
  var Register = /* @__PURE__ */ function() {
    function Register2() {
    }
    ;
    Register2.value = new Register2();
    return Register2;
  }();
  var Settings = /* @__PURE__ */ function() {
    function Settings2() {
    }
    ;
    Settings2.value = new Settings2();
    return Settings2;
  }();
  var Editor = /* @__PURE__ */ function() {
    function Editor2() {
    }
    ;
    Editor2.value = new Editor2();
    return Editor2;
  }();
  var EditArticle = /* @__PURE__ */ function() {
    function EditArticle2(value0) {
      this.value0 = value0;
    }
    ;
    EditArticle2.create = function(value0) {
      return new EditArticle2(value0);
    };
    return EditArticle2;
  }();
  var ViewArticle = /* @__PURE__ */ function() {
    function ViewArticle2(value0) {
      this.value0 = value0;
    }
    ;
    ViewArticle2.create = function(value0) {
      return new ViewArticle2(value0);
    };
    return ViewArticle2;
  }();
  var Profile = /* @__PURE__ */ function() {
    function Profile2(value0) {
      this.value0 = value0;
    }
    ;
    Profile2.create = function(value0) {
      return new Profile2(value0);
    };
    return Profile2;
  }();
  var Favorites = /* @__PURE__ */ function() {
    function Favorites2(value0) {
      this.value0 = value0;
    }
    ;
    Favorites2.create = function(value0) {
      return new Favorites2(value0);
    };
    return Favorites2;
  }();
  var uname = /* @__PURE__ */ as2(toString2)(/* @__PURE__ */ function() {
    var $168 = note("Bad username");
    return function($169) {
      return $168(parse($169));
    };
  }());
  var slug = /* @__PURE__ */ as2(toString4)(/* @__PURE__ */ function() {
    var $170 = note("Bad slug");
    return function($171) {
      return $170(parse3($171));
    };
  }());
  var genericRoute = {
    to: function(x) {
      if (x instanceof Inl) {
        return Home.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return Login.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inl)) {
        return Register.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && x.value0.value0.value0 instanceof Inl))) {
        return Settings.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0 instanceof Inl)))) {
        return Editor.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0 instanceof Inl))))) {
        return new EditArticle(x.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0 instanceof Inl)))))) {
        return new ViewArticle(x.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))) {
        return new Profile(x.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr))))))) {
        return new Favorites(x.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      throw new Error("Failed pattern match at Conduit.Data.Route (line 41, column 1 - line 41, column 48): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Home) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof Login) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof Register) {
        return new Inr(new Inr(new Inl(NoArguments.value)));
      }
      ;
      if (x instanceof Settings) {
        return new Inr(new Inr(new Inr(new Inl(NoArguments.value))));
      }
      ;
      if (x instanceof Editor) {
        return new Inr(new Inr(new Inr(new Inr(new Inl(NoArguments.value)))));
      }
      ;
      if (x instanceof EditArticle) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0))))));
      }
      ;
      if (x instanceof ViewArticle) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))))));
      }
      ;
      if (x instanceof Profile) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0))))))));
      }
      ;
      if (x instanceof Favorites) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(x.value0))))))));
      }
      ;
      throw new Error("Failed pattern match at Conduit.Data.Route (line 41, column 1 - line 41, column 48): " + [x.constructor.name]);
    }
  };
  var routeCodec = /* @__PURE__ */ root(/* @__PURE__ */ sum2(genericRoute)(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Home";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Login";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Register";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Settings";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Editor";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "EditArticle";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "ViewArticle";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Profile";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Favorites";
    }
  })()(gRouteArgument))))))))))({
    Home: noArgs,
    Login: /* @__PURE__ */ gsep2("login")(noArgs),
    Register: /* @__PURE__ */ gsep2("register")(noArgs),
    Settings: /* @__PURE__ */ gsep2("settings")(noArgs),
    Editor: /* @__PURE__ */ gsep2("editor")(noArgs),
    EditArticle: /* @__PURE__ */ gsep1("editor")(/* @__PURE__ */ slug(segment)),
    ViewArticle: /* @__PURE__ */ gsep1("article")(/* @__PURE__ */ slug(segment)),
    Profile: /* @__PURE__ */ gsep1("profile")(/* @__PURE__ */ uname(segment)),
    Favorites: /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteArgument))("profile")(/* @__PURE__ */ gsep(/* @__PURE__ */ gsepRouteString(gRouteAll))(/* @__PURE__ */ uname(segment))("favorites"))
  }));
  var eqRoute = {
    eq: function(x) {
      return function(y) {
        if (x instanceof Home && y instanceof Home) {
          return true;
        }
        ;
        if (x instanceof Login && y instanceof Login) {
          return true;
        }
        ;
        if (x instanceof Register && y instanceof Register) {
          return true;
        }
        ;
        if (x instanceof Settings && y instanceof Settings) {
          return true;
        }
        ;
        if (x instanceof Editor && y instanceof Editor) {
          return true;
        }
        ;
        if (x instanceof EditArticle && y instanceof EditArticle) {
          return eq4(x.value0)(y.value0);
        }
        ;
        if (x instanceof ViewArticle && y instanceof ViewArticle) {
          return eq4(x.value0)(y.value0);
        }
        ;
        if (x instanceof Profile && y instanceof Profile) {
          return eq12(x.value0)(y.value0);
        }
        ;
        if (x instanceof Favorites && y instanceof Favorites) {
          return eq12(x.value0)(y.value0);
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Lens.Internal.Forget/index.js
  var alaF3 = /* @__PURE__ */ alaF()()()();
  var Forget = function(x) {
    return x;
  };
  var profunctorForget = {
    dimap: function(f) {
      return function(v) {
        return function(v1) {
          return function($36) {
            return v1(f($36));
          };
        };
      };
    }
  };
  var strongForget = {
    first: function(v) {
      return function($37) {
        return v(fst($37));
      };
    },
    second: function(v) {
      return function($38) {
        return v(snd($38));
      };
    },
    Profunctor0: function() {
      return profunctorForget;
    }
  };
  var choiceForget = function(dictMonoid) {
    var mempty7 = mempty(monoidFn(dictMonoid));
    return {
      left: function(v) {
        return either(v)(mempty7);
      },
      right: function(v) {
        return either(mempty7)(v);
      },
      Profunctor0: function() {
        return profunctorForget;
      }
    };
  };
  var wanderForget = function(dictMonoid) {
    var applicativeConst2 = applicativeConst(dictMonoid);
    var choiceForget1 = choiceForget(dictMonoid);
    return {
      wander: function(f) {
        return function(v) {
          return alaF3(Const)(f(applicativeConst2))(v);
        };
      },
      Strong0: function() {
        return strongForget;
      },
      Choice1: function() {
        return choiceForget1;
      }
    };
  };

  // output/Data.Profunctor.Choice/index.js
  var right = function(dict) {
    return dict.right;
  };
  var choiceFn = {
    left: function(v) {
      return function(v1) {
        if (v1 instanceof Left) {
          return new Left(v(v1.value0));
        }
        ;
        if (v1 instanceof Right) {
          return new Right(v1.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    right: /* @__PURE__ */ map(functorEither),
    Profunctor0: function() {
      return profunctorFn;
    }
  };

  // output/Data.Profunctor.Strong/index.js
  var identity13 = /* @__PURE__ */ identity(categoryFn);
  var strongFn = {
    first: function(a2b) {
      return function(v) {
        return new Tuple(a2b(v.value0), v.value1);
      };
    },
    second: /* @__PURE__ */ map(functorTuple),
    Profunctor0: function() {
      return profunctorFn;
    }
  };
  var second = function(dict) {
    return dict.second;
  };
  var first = function(dict) {
    return dict.first;
  };
  var splitStrong = function(dictCategory) {
    var composeFlipped3 = composeFlipped(dictCategory.Semigroupoid0());
    return function(dictStrong) {
      var first1 = first(dictStrong);
      var second1 = second(dictStrong);
      return function(l) {
        return function(r) {
          return composeFlipped3(first1(l))(second1(r));
        };
      };
    };
  };
  var fanout = function(dictCategory) {
    var identity1 = identity(dictCategory);
    var composeFlipped3 = composeFlipped(dictCategory.Semigroupoid0());
    var splitStrong1 = splitStrong(dictCategory);
    return function(dictStrong) {
      var dimap3 = dimap(dictStrong.Profunctor0());
      var splitStrong2 = splitStrong1(dictStrong);
      return function(l) {
        return function(r) {
          var split3 = dimap3(identity13)(function(a2) {
            return new Tuple(a2, a2);
          })(identity1);
          return composeFlipped3(split3)(splitStrong2(l)(r));
        };
      };
    };
  };

  // output/Data.Lens.Internal.Wander/index.js
  var alaF4 = /* @__PURE__ */ alaF()()()();
  var wanderFunction = {
    wander: function(t) {
      return alaF4(Identity)(t(applicativeIdentity));
    },
    Strong0: function() {
      return strongFn;
    },
    Choice1: function() {
      return choiceFn;
    }
  };

  // output/Data.Lens.Iso/index.js
  var coerce3 = /* @__PURE__ */ coerce();
  var iso = function(f) {
    return function(g) {
      return function(dictProfunctor) {
        var dimap3 = dimap(dictProfunctor);
        return function(pab) {
          return dimap3(f)(g)(pab);
        };
      };
    };
  };
  var coerced = function() {
    return function() {
      return function(dictProfunctor) {
        return iso(coerce3)(coerce3)(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Iso.Newtype/index.js
  var coerced2 = /* @__PURE__ */ coerced()();
  var _Newtype = function() {
    return function() {
      return function(dictProfunctor) {
        return coerced2(dictProfunctor);
      };
    };
  };

  // output/Conduit.Api.Endpoint/index.js
  var gsep3 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteNoArguments));
  var gsep12 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteArgument));
  var gsep22 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepRouteString(gRouteAll));
  var gsep32 = /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteAll));
  var routeDuplexParams2 = /* @__PURE__ */ routeDuplexParams();
  var buildParamsCons2 = /* @__PURE__ */ buildParamsCons({
    reflectSymbol: function() {
      return "limit";
    }
  })()()()();
  var buildParamsCons1 = /* @__PURE__ */ buildParamsCons({
    reflectSymbol: function() {
      return "offset";
    }
  })()()()();
  var Login2 = /* @__PURE__ */ function() {
    function Login3() {
    }
    ;
    Login3.value = new Login3();
    return Login3;
  }();
  var User = /* @__PURE__ */ function() {
    function User2() {
    }
    ;
    User2.value = new User2();
    return User2;
  }();
  var Users = /* @__PURE__ */ function() {
    function Users2() {
    }
    ;
    Users2.value = new Users2();
    return Users2;
  }();
  var Follow = /* @__PURE__ */ function() {
    function Follow2(value0) {
      this.value0 = value0;
    }
    ;
    Follow2.create = function(value0) {
      return new Follow2(value0);
    };
    return Follow2;
  }();
  var Article = /* @__PURE__ */ function() {
    function Article2(value0) {
      this.value0 = value0;
    }
    ;
    Article2.create = function(value0) {
      return new Article2(value0);
    };
    return Article2;
  }();
  var Comment = /* @__PURE__ */ function() {
    function Comment2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Comment2.create = function(value0) {
      return function(value1) {
        return new Comment2(value0, value1);
      };
    };
    return Comment2;
  }();
  var Comments = /* @__PURE__ */ function() {
    function Comments2(value0) {
      this.value0 = value0;
    }
    ;
    Comments2.create = function(value0) {
      return new Comments2(value0);
    };
    return Comments2;
  }();
  var Favorite = /* @__PURE__ */ function() {
    function Favorite2(value0) {
      this.value0 = value0;
    }
    ;
    Favorite2.create = function(value0) {
      return new Favorite2(value0);
    };
    return Favorite2;
  }();
  var Articles = /* @__PURE__ */ function() {
    function Articles2(value0) {
      this.value0 = value0;
    }
    ;
    Articles2.create = function(value0) {
      return new Articles2(value0);
    };
    return Articles2;
  }();
  var Profiles = /* @__PURE__ */ function() {
    function Profiles2(value0) {
      this.value0 = value0;
    }
    ;
    Profiles2.create = function(value0) {
      return new Profiles2(value0);
    };
    return Profiles2;
  }();
  var Feed = /* @__PURE__ */ function() {
    function Feed3(value0) {
      this.value0 = value0;
    }
    ;
    Feed3.create = function(value0) {
      return new Feed3(value0);
    };
    return Feed3;
  }();
  var Tags = /* @__PURE__ */ function() {
    function Tags2() {
    }
    ;
    Tags2.value = new Tags2();
    return Tags2;
  }();
  var noArticleParams = /* @__PURE__ */ function() {
    return {
      tag: Nothing.value,
      author: Nothing.value,
      favorited: Nothing.value,
      offset: Nothing.value,
      limit: Nothing.value
    };
  }();
  var genericEndpoint = {
    to: function(x) {
      if (x instanceof Inl) {
        return Login2.value;
      }
      ;
      if (x instanceof Inr && x.value0 instanceof Inl) {
        return User.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && x.value0.value0 instanceof Inl)) {
        return Users.value;
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && x.value0.value0.value0 instanceof Inl))) {
        return new Follow(x.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0 instanceof Inl)))) {
        return new Article(x.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0 instanceof Inl))))) {
        return new Comment(x.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value1);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0 instanceof Inl)))))) {
        return new Comments(x.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))) {
        return new Favorite(x.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))) {
        return new Articles(x.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl))))))))) {
        return new Profiles(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inl)))))))))) {
        return new Feed(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }
      ;
      if (x instanceof Inr && (x.value0 instanceof Inr && (x.value0.value0 instanceof Inr && (x.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Inr)))))))))) {
        return Tags.value;
      }
      ;
      throw new Error("Failed pattern match at Conduit.Api.Endpoint (line 85, column 1 - line 85, column 54): " + [x.constructor.name]);
    },
    from: function(x) {
      if (x instanceof Login2) {
        return new Inl(NoArguments.value);
      }
      ;
      if (x instanceof User) {
        return new Inr(new Inl(NoArguments.value));
      }
      ;
      if (x instanceof Users) {
        return new Inr(new Inr(new Inl(NoArguments.value)));
      }
      ;
      if (x instanceof Follow) {
        return new Inr(new Inr(new Inr(new Inl(x.value0))));
      }
      ;
      if (x instanceof Article) {
        return new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))));
      }
      ;
      if (x instanceof Comment) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(new Product(x.value0, x.value1)))))));
      }
      ;
      if (x instanceof Comments) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))))));
      }
      ;
      if (x instanceof Favorite) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0))))))));
      }
      ;
      if (x instanceof Articles) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))))))));
      }
      ;
      if (x instanceof Profiles) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0))))))))));
      }
      ;
      if (x instanceof Feed) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inl(x.value0)))))))))));
      }
      ;
      if (x instanceof Tags) {
        return new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(new Inr(NoArguments.value)))))))))));
      }
      ;
      throw new Error("Failed pattern match at Conduit.Api.Endpoint (line 85, column 1 - line 85, column 54): " + [x.constructor.name]);
    }
  };
  var commentId = /* @__PURE__ */ _Newtype()()(profunctorRouteDuplex)(/* @__PURE__ */ $$int3(segment));
  var endpointCodec = /* @__PURE__ */ root(/* @__PURE__ */ prefix2("api")(/* @__PURE__ */ sum2(genericEndpoint)(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Login";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "User";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Users";
    }
  })()(gRouteNoArguments))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Follow";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Article";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Comment";
    }
  })()(gRouteProduct))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Comments";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Favorite";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Articles";
    }
  })()(gRouteAll))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Profiles";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteSum(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Feed";
    }
  })()(gRouteArgument))(/* @__PURE__ */ gRouteConstructor({
    reflectSymbol: function() {
      return "Tags";
    }
  })()(gRouteNoArguments)))))))))))))({
    Login: /* @__PURE__ */ gsep3("users")(/* @__PURE__ */ gsep3("login")(noArgs)),
    User: /* @__PURE__ */ gsep3("user")(noArgs),
    Users: /* @__PURE__ */ gsep3("users")(noArgs),
    Follow: /* @__PURE__ */ gsep12("profiles")(/* @__PURE__ */ gsep22(/* @__PURE__ */ uname(segment))("follow")),
    Article: /* @__PURE__ */ gsep32("articles")(/* @__PURE__ */ slug(segment)),
    Comments: /* @__PURE__ */ gsep12("articles")(/* @__PURE__ */ gsep22(/* @__PURE__ */ slug(segment))("comments")),
    Comment: /* @__PURE__ */ gsep(/* @__PURE__ */ gsepStringRoute(gRouteProduct))("articles")(/* @__PURE__ */ gsep(/* @__PURE__ */ gsepProduct(gRouteArgument))(/* @__PURE__ */ slug(segment))(/* @__PURE__ */ gsep32("comments")(commentId))),
    Favorite: /* @__PURE__ */ gsep12("articles")(/* @__PURE__ */ gsep22(/* @__PURE__ */ slug(segment))("favorite")),
    Articles: /* @__PURE__ */ gparams(/* @__PURE__ */ gparamsString(/* @__PURE__ */ routeDuplexParams2(/* @__PURE__ */ buildParamsCons({
      reflectSymbol: function() {
        return "author";
      }
    })()()()()(/* @__PURE__ */ buildParamsCons({
      reflectSymbol: function() {
        return "favorited";
      }
    })()()()()(/* @__PURE__ */ buildParamsCons2(/* @__PURE__ */ buildParamsCons1(/* @__PURE__ */ buildParamsCons({
      reflectSymbol: function() {
        return "tag";
      }
    })()()()()(buildParamsNil))))))))("articles")({
      tag: function($232) {
        return optional2(string2($232));
      },
      author: function($233) {
        return optional2(uname($233));
      },
      favorited: function($234) {
        return optional2(uname($234));
      },
      offset: function($235) {
        return optional2($$int3($235));
      },
      limit: function($236) {
        return optional2($$int3($236));
      }
    }),
    Profiles: /* @__PURE__ */ gsep32("profiles")(/* @__PURE__ */ uname(segment)),
    Feed: /* @__PURE__ */ gsep32("articles")(/* @__PURE__ */ gparams(/* @__PURE__ */ gparamsString(/* @__PURE__ */ routeDuplexParams2(/* @__PURE__ */ buildParamsCons2(/* @__PURE__ */ buildParamsCons1(buildParamsNil)))))("feed")({
      offset: function($237) {
        return optional2($$int3($237));
      },
      limit: function($238) {
        return optional2($$int3($238));
      }
    })),
    Tags: /* @__PURE__ */ gsep3("tags")(noArgs)
  })));

  // output/Conduit.Data.Email/index.js
  var Email = function(x) {
    return x;
  };
  var codec2 = /* @__PURE__ */ wrapIso(/* @__PURE__ */ profunctorGCodec(/* @__PURE__ */ functorReaderT(functorEither))(/* @__PURE__ */ functorWriterT(functorIdentity)))()(Email)(string);

  // output/Conduit.Data.Avatar/index.js
  var toString5 = function(v) {
    return v;
  };
  var toStringWithDefault = function(v) {
    if (v instanceof Just) {
      return toString5(v.value0);
    }
    ;
    if (v instanceof Nothing) {
      return "https://static.productionready.io/images/smiley-cyrus.jpg";
    }
    ;
    throw new Error("Failed pattern match at Conduit.Data.Avatar (line 52, column 1 - line 52, column 46): " + [v.constructor.name]);
  };
  var parse4 = function(v) {
    if (v === "") {
      return Nothing.value;
    }
    ;
    return new Just(v);
  };
  var eqAvatar = {
    eq: function(x) {
      return function(y) {
        return x === y;
      };
    }
  };
  var codec3 = /* @__PURE__ */ prismaticCodec("Avatar")(parse4)(toString5)(string);

  // output/Data.Codec.Argonaut.Compat/index.js
  var pure7 = /* @__PURE__ */ pure(applicativeEither);
  var bimap3 = /* @__PURE__ */ bimap(bifunctorEither);
  var maybe2 = function(codec5) {
    var enc = function(v) {
      if (v instanceof Nothing) {
        return jsonNull;
      }
      ;
      if (v instanceof Just) {
        return encode4(codec5)(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Data.Codec.Argonaut.Compat (line 36, column 9 - line 38, column 28): " + [v.constructor.name]);
    };
    var dec = function(j) {
      if (isNull(j)) {
        return pure7(Nothing.value);
      }
      ;
      if (otherwise) {
        return bimap3(Named.create("Maybe"))(Just.create)(decode(codec5)(j));
      }
      ;
      throw new Error("Failed pattern match at Data.Codec.Argonaut.Compat (line 31, column 3 - line 31, column 50): " + [j.constructor.name]);
    };
    return basicCodec(dec)(enc);
  };

  // output/Data.Codec.Argonaut.Record/index.js
  var from3 = /* @__PURE__ */ from2(refl);
  var rowListCodecNil = {
    rowListCodec: function(v) {
      return function(v1) {
        return record;
      };
    }
  };
  var rowListCodec = function(dict) {
    return dict.rowListCodec;
  };
  var rowListCodecCons = function(dictRowListCodec) {
    var rowListCodec1 = rowListCodec(dictRowListCodec);
    return function() {
      return function() {
        return function(dictIsSymbol) {
          var get13 = get3(dictIsSymbol)();
          var recordProp2 = recordProp(dictIsSymbol)();
          return function(dictTypeEquals) {
            return {
              rowListCodec: function(v) {
                return function(codecs) {
                  var tail3 = rowListCodec1($$Proxy.value)(codecs);
                  var codec5 = from3(get13($$Proxy.value)(codecs));
                  return recordProp2($$Proxy.value)(codec5)(tail3);
                };
              }
            };
          };
        };
      };
    };
  };
  var record3 = function() {
    return function(dictRowListCodec) {
      return rowListCodec(dictRowListCodec)($$Proxy.value);
    };
  };
  var record1 = /* @__PURE__ */ record3();
  var object2 = function() {
    return function(dictRowListCodec) {
      var record22 = record1(dictRowListCodec);
      return function(name16) {
        return function(rec) {
          return object(name16)(record22(rec));
        };
      };
    };
  };

  // output/Conduit.Data.Profile/index.js
  var object3 = /* @__PURE__ */ object2();
  var rowListCodecCons2 = /* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(rowListCodecNil)()()({
    reflectSymbol: function() {
      return "username";
    }
  })(refl))()();
  var imageIsSymbol = {
    reflectSymbol: function() {
      return "image";
    }
  };
  var emailIsSymbol = {
    reflectSymbol: function() {
      return "email";
    }
  };
  var bioIsSymbol = {
    reflectSymbol: function() {
      return "bio";
    }
  };
  var rowListCodecCons1 = /* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons2(imageIsSymbol)(refl))()();
  var pure8 = /* @__PURE__ */ pure(applicativeEither);
  var eq5 = /* @__PURE__ */ eq(eqUsername);
  var object1 = /* @__PURE__ */ object3(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons1({
    reflectSymbol: function() {
      return "following";
    }
  })(refl))()()(bioIsSymbol)(refl));
  var mapCodec2 = /* @__PURE__ */ mapCodec(bindEither);
  var Following = /* @__PURE__ */ function() {
    function Following2() {
    }
    ;
    Following2.value = new Following2();
    return Following2;
  }();
  var NotFollowing = /* @__PURE__ */ function() {
    function NotFollowing2() {
    }
    ;
    NotFollowing2.value = new NotFollowing2();
    return NotFollowing2;
  }();
  var You = /* @__PURE__ */ function() {
    function You2() {
    }
    ;
    You2.value = new You2();
    return You2;
  }();
  var profileWithEmailPasswordCodec = /* @__PURE__ */ object3(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons2({
    reflectSymbol: function() {
      return "password";
    }
  })(refl))()()(imageIsSymbol)(refl))()()(emailIsSymbol)(refl))()()(bioIsSymbol)(refl))("Profile")({
    username: codec,
    email: codec2,
    password: /* @__PURE__ */ maybe2(string),
    bio: /* @__PURE__ */ maybe2(string),
    image: /* @__PURE__ */ maybe2(codec3)
  });
  var profileWithEmailCodec = /* @__PURE__ */ object3(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons1(emailIsSymbol)(refl))()()(bioIsSymbol)(refl))("Profile")({
    username: codec,
    email: codec2,
    bio: /* @__PURE__ */ maybe2(string),
    image: /* @__PURE__ */ maybe2(codec3)
  });
  var profileCodec = /* @__PURE__ */ object3(/* @__PURE__ */ rowListCodecCons1(bioIsSymbol)(refl))("Profile")({
    username: codec,
    bio: /* @__PURE__ */ maybe2(string),
    image: /* @__PURE__ */ maybe2(codec3)
  });
  var eqRelation = {
    eq: function(x) {
      return function(y) {
        if (x instanceof Following && y instanceof Following) {
          return true;
        }
        ;
        if (x instanceof NotFollowing && y instanceof NotFollowing) {
          return true;
        }
        ;
        if (x instanceof You && y instanceof You) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var authorCodec = function(mbUsername) {
    var to2 = function(v) {
      return pure8(function() {
        var mkAuthor = function(v1) {
          return {
            username: v.username,
            bio: v.bio,
            image: v.image,
            relation: v1
          };
        };
        return mkAuthor(function() {
          if (mbUsername instanceof Just && eq5(mbUsername.value0)(v.username)) {
            return You.value;
          }
          ;
          if (v.following) {
            return Following.value;
          }
          ;
          return NotFollowing.value;
        }());
      }());
    };
    var from4 = function(v) {
      var mkAuthorJson = function(v1) {
        return {
          username: v.username,
          bio: v.bio,
          image: v.image,
          following: v1
        };
      };
      return mkAuthorJson(function() {
        if (v.relation instanceof Following) {
          return true;
        }
        ;
        return false;
      }());
    };
    var codec5 = object1("Author")({
      username: codec,
      bio: maybe2(string),
      image: maybe2(codec3),
      following: $$boolean
    });
    return mapCodec2(to2)(from4)(codec5);
  };

  // output/Effect.Aff.Class/index.js
  var lift4 = /* @__PURE__ */ lift(monadTransReaderT);
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };
  var monadAffReader = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var monadEffectReader2 = monadEffectReader(MonadEffect0);
    return {
      liftAff: function() {
        var $79 = lift4(MonadEffect0.Monad0());
        var $80 = liftAff(dictMonadAff);
        return function($81) {
          return $79($80($81));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectReader2;
      }
    };
  };

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.Common/index.js
  var ClassName = function(x) {
    return x;
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return function() {
      return doc.readyState;
    };
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ function() {
    function Loading3() {
    }
    ;
    Loading3.value = new Loading3();
    return Loading3;
  }();
  var Interactive = /* @__PURE__ */ function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  }();
  var Complete = /* @__PURE__ */ function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  }();
  var parse5 = function(v) {
    if (v === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map23 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = /* @__PURE__ */ function() {
    var $2 = map23(function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse5($5));
      };
    }());
    return function($3) {
      return $2(_readyState($3));
    };
  }();

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value18) {
    var tag = Object.prototype.toString.call(value18);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value18);
    } else {
      return nothing;
    }
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode = unsafeCoerce2;
  var fromElement = function(x) {
    return _read(Nothing.value, Just.create, x);
  };

  // output/Web.HTML.Location/foreign.js
  function hash(location2) {
    return function() {
      return location2.hash;
    };
  }
  function setHash(hash2) {
    return function(location2) {
      return function() {
        location2.hash = hash2;
      };
    };
  }

  // output/Web.HTML.Window/foreign.js
  function document(window2) {
    return function() {
      return window2.document;
    };
  }
  function location(window2) {
    return function() {
      return window2.location;
    };
  }
  function localStorage(window2) {
    return function() {
      return window2.localStorage;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget = unsafeCoerce2;

  // output/Web.Storage.Storage/foreign.js
  function _getItem(key2) {
    return function(storage) {
      return function() {
        return storage.getItem(key2);
      };
    };
  }
  function setItem(key2) {
    return function(value18) {
      return function(storage) {
        return function() {
          storage.setItem(key2, value18);
        };
      };
    };
  }
  function removeItem(key2) {
    return function(storage) {
      return function() {
        storage.removeItem(key2);
      };
    };
  }

  // output/Web.Storage.Storage/index.js
  var map24 = /* @__PURE__ */ map(functorEffect);
  var getItem = function(s) {
    var $5 = map24(toMaybe);
    var $6 = _getItem(s);
    return function($7) {
      return $5($6($7));
    };
  };

  // output/Conduit.Api.Request/index.js
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindEffect);
  var object4 = /* @__PURE__ */ object2();
  var rowListCodecCons3 = /* @__PURE__ */ rowListCodecCons(rowListCodecNil)()();
  var passwordIsSymbol = {
    reflectSymbol: function() {
      return "password";
    }
  };
  var emailIsSymbol2 = {
    reflectSymbol: function() {
      return "email";
    }
  };
  var map25 = /* @__PURE__ */ map(functorMaybe);
  var bind5 = /* @__PURE__ */ bind(bindEither);
  var object12 = /* @__PURE__ */ object4(/* @__PURE__ */ rowListCodecCons3({
    reflectSymbol: function() {
      return "token";
    }
  })(refl));
  var pure12 = /* @__PURE__ */ pure(applicativeEither);
  var lmap3 = /* @__PURE__ */ lmap(bifunctorEither);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindEither);
  var object22 = /* @__PURE__ */ object4(/* @__PURE__ */ rowListCodecCons3({
    reflectSymbol: function() {
      return "user";
    }
  })(refl));
  var Token = function(x) {
    return x;
  };
  var Get = /* @__PURE__ */ function() {
    function Get2() {
    }
    ;
    Get2.value = new Get2();
    return Get2;
  }();
  var Post = /* @__PURE__ */ function() {
    function Post2(value0) {
      this.value0 = value0;
    }
    ;
    Post2.create = function(value0) {
      return new Post2(value0);
    };
    return Post2;
  }();
  var Put = /* @__PURE__ */ function() {
    function Put2(value0) {
      this.value0 = value0;
    }
    ;
    Put2.create = function(value0) {
      return new Put2(value0);
    };
    return Put2;
  }();
  var Delete = /* @__PURE__ */ function() {
    function Delete2() {
    }
    ;
    Delete2.value = new Delete2();
    return Delete2;
  }();
  var tokenKey = "token";
  var writeToken = function(v) {
    return bindFlipped6(setItem(tokenKey)(v))(bindFlipped6(localStorage)(windowImpl));
  };
  var removeToken = /* @__PURE__ */ bindFlipped6(/* @__PURE__ */ removeItem(tokenKey))(/* @__PURE__ */ bindFlipped6(localStorage)(windowImpl));
  var registerCodec = /* @__PURE__ */ object4(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons3({
    reflectSymbol: function() {
      return "username";
    }
  })(refl))()()(passwordIsSymbol)(refl))()()(emailIsSymbol2)(refl))("RegisterFields")({
    email: codec2,
    password: string,
    username: codec
  });
  var readToken = function __do() {
    var str = bindFlipped6(getItem(tokenKey))(bindFlipped6(localStorage)(windowImpl))();
    return map25(Token)(str);
  };
  var loginCodec = /* @__PURE__ */ object4(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons3(passwordIsSymbol)(refl))()()(emailIsSymbol2)(refl))("LoginFields")({
    email: codec2,
    password: string
  });
  var defaultRequest2 = function(v) {
    return function(auth) {
      return function(v1) {
        var v2 = function() {
          if (v1.method instanceof Get) {
            return new Tuple(GET.value, Nothing.value);
          }
          ;
          if (v1.method instanceof Post) {
            return new Tuple(POST.value, v1.method.value0);
          }
          ;
          if (v1.method instanceof Put) {
            return new Tuple(PUT.value, v1.method.value0);
          }
          ;
          if (v1.method instanceof Delete) {
            return new Tuple(DELETE.value, Nothing.value);
          }
          ;
          throw new Error("Failed pattern match at Conduit.Api.Request (line 136, column 30 - line 140, column 35): " + [v1.method.constructor.name]);
        }();
        return {
          method: new Left(v2.value0),
          url: v + print2(endpointCodec)(v1.endpoint),
          headers: function() {
            if (auth instanceof Nothing) {
              return [];
            }
            ;
            if (auth instanceof Just) {
              return [new RequestHeader("Authorization", "Token " + auth.value0)];
            }
            ;
            throw new Error("Failed pattern match at Conduit.Api.Request (line 125, column 14 - line 127, column 74): " + [auth.constructor.name]);
          }(),
          content: map25(json)(v2.value1),
          username: Nothing.value,
          password: Nothing.value,
          timeout: Nothing.value,
          withCredentials: false,
          responseFormat: json2
        };
      };
    };
  };
  var decodeAuthProfile = function(v) {
    var tokenCodec = prismaticCodec("Token (inner)")(function($103) {
      return Just.create(Token($103));
    })(function(v1) {
      return v1;
    })(string);
    return bind5(decode(object12("Token")({
      token: tokenCodec
    }))(v.user))(function(v1) {
      return bind5(decode(profileCodec)(v.user))(function(profile) {
        return pure12(new Tuple(v1.token, profile));
      });
    });
  };
  var requestUser = function(dictMonadAff) {
    var Monad0 = dictMonadAff.MonadEffect0().Monad0();
    var bind114 = bind(Monad0.Bind1());
    var liftAff2 = liftAff(dictMonadAff);
    var pure210 = pure(Monad0.Applicative0());
    return function(baseUrl) {
      return function(opts) {
        return bind114(liftAff2(request2(defaultRequest2(baseUrl)(Nothing.value)(opts))))(function(res) {
          if (res instanceof Left) {
            return pure210(new Left(printError(res.value0)));
          }
          ;
          if (res instanceof Right) {
            return pure210(lmap3(printJsonDecodeError)(bindFlipped1(decodeAuthProfile)(decode(object22("User")({
              user: json3
            }))(res.value0.body))));
          }
          ;
          throw new Error("Failed pattern match at Conduit.Api.Request (line 196, column 3 - line 198, column 130): " + [res.constructor.name]);
        });
      };
    };
  };
  var login = function(dictMonadAff) {
    var requestUser1 = requestUser(dictMonadAff);
    return function(baseUrl) {
      return function(fields) {
        var method2 = new Post(new Just(encode4(object22("User")({
          user: loginCodec
        }))({
          user: fields
        })));
        return requestUser1(baseUrl)({
          endpoint: Login2.value,
          method: method2
        });
      };
    };
  };
  var register = function(dictMonadAff) {
    var requestUser1 = requestUser(dictMonadAff);
    return function(baseUrl) {
      return function(fields) {
        var method2 = new Post(new Just(encode4(object22("User")({
          user: registerCodec
        }))({
          user: fields
        })));
        return requestUser1(baseUrl)({
          endpoint: Users.value,
          method: method2
        });
      };
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity14 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  }();
  var Lift = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var Ap = /* @__PURE__ */ function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  }();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ function() {
    return Lift.create;
  }();
  var goLeft = function(dictApplicative) {
    var pure30 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure30(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons3(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply7 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply7(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x) {
        return mkAp(new Pure(f))(x);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure30 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.value1.value0 instanceof Pure) {
              var v1 = goApply1(v.value0)(v.value1.value1)(pure30(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Lift) {
              var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v.value1.value0.value1, v.value1.value1);
              $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton5(z)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity14);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  }();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  }();
  var uncons4 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse2(v.value1), Nil.value);
        return;
      }
      ;
      if (v.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc4 = function(v) {
    return function(a2) {
      return new CatQueue(v.value0, new Cons(a2, v.value1));
    };
  };
  var $$null5 = function(v) {
    if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ function() {
    return new CatQueue(Nil.value, Nil.value);
  }();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  }();
  var CatCons = /* @__PURE__ */ function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  }();
  var link = function(v) {
    return function(v1) {
      if (v instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v;
      }
      ;
      if (v instanceof CatCons) {
        return new CatCons(v.value0, snoc4(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var foldr4 = function(k) {
    return function(b2) {
      return function(q2) {
        var foldl3 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (v2 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v2 instanceof Cons) {
                  $tco_var_v = v;
                  $tco_var_v1 = v(v1)(v2.value0);
                  $copy_v2 = v2.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v = uncons4(xs);
              if (v instanceof Nothing) {
                $tco_done1 = true;
                return foldl3(function(x) {
                  return function(i2) {
                    return i2(x);
                  };
                })(b2)(ys);
              }
              ;
              if (v instanceof Just) {
                $tco_var_xs = v.value0.value1;
                $copy_ys = new Cons(k(v.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q2)(Nil.value);
      };
    };
  };
  var uncons5 = function(v) {
    if (v instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v instanceof CatCons) {
      return new Just(new Tuple(v.value0, function() {
        var $66 = $$null5(v.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr4(link)(CatNil.value)(v.value1);
      }()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ function() {
    return CatNil.value;
  }();
  var append6 = link;
  var semigroupCatList = {
    append: append6
  };
  var snoc5 = function(cat) {
    return function(a2) {
      return append6(cat)(new CatCons(a2, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy5 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var append7 = /* @__PURE__ */ append(semigroupCatList);
  var map26 = /* @__PURE__ */ map(functorFn);
  var Free = /* @__PURE__ */ function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  }();
  var Return = /* @__PURE__ */ function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  }();
  var Bind = /* @__PURE__ */ function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  }();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      var runExpF = function(v22) {
        return v22;
      };
      var concatF = function(v22) {
        return function(r) {
          return new Free(v22.value0, append7(v22.value1)(r));
        };
      };
      if (v.value0 instanceof Return) {
        var v2 = uncons5(v.value1);
        if (v2 instanceof Nothing) {
          $tco_done = true;
          return new Return(v.value0.value0);
        }
        ;
        if (v2 instanceof Just) {
          $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
      }
      ;
      if (v.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v.value0.value0, function(a2) {
          return concatF(v.value0.value1(a2))(v.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)(function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        }())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v) {
      return function(k) {
        return new Free(v.value0, snoc5(v.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy5("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var bind6 = /* @__PURE__ */ bind(freeBind);
  var pure9 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure9($192);
    }));
  };
  var substFree = function(k) {
    var go2 = function(f) {
      var v = toView(f);
      if (v instanceof Return) {
        return pure9(v.value0);
      }
      ;
      if (v instanceof Bind) {
        return bind6(k(v.value0))(map26(go2)(v.value1));
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [v.constructor.name]);
    };
    return go2;
  };
  var hoistFree = function(k) {
    return substFree(function($193) {
      return liftF(k($193));
    });
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map121 = map(Monad0.Bind1().Apply0().Functor0());
    var pure115 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v = toView(f);
        if (v instanceof Return) {
          return map121(Done.create)(pure115(v.value0));
        }
        ;
        if (v instanceof Bind) {
          return map121(function($199) {
            return Loop.create(v.value1($199));
          })(k(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
      };
      return tailRecM4(go2);
    };
  };

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ function() {
    function OrdBox2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new OrdBox2(value0, value1, value22);
        };
      };
    };
    return OrdBox2;
  }();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v) {
      return function(v1) {
        return v.value0(v.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v) {
      return function(v1) {
        return v.value1(v.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop2(ordTuple2);
  var lookup1 = /* @__PURE__ */ lookup4(ordTuple2);
  var insert1 = /* @__PURE__ */ insert4(ordTuple2);
  var pop3 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(v) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(v);
            };
          };
        };
      };
    };
  };
  var lookup5 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(v) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(v);
            };
          };
        };
      };
    };
  };
  var insert6 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key2) {
            return function(val) {
              return function(v) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key2)))(val)(v);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_8 = traverse_(dictApplicative)(foldableMap);
    return function(v) {
      return function(k) {
        return traverse_8(function($54) {
          return k($54);
        })(v);
      };
    };
  };
  var empty7 = empty3;

  // output/Halogen.Query.ChildQuery/index.js
  var ChildQuery = /* @__PURE__ */ function() {
    function ChildQuery3(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ChildQuery3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ChildQuery3(value0, value1, value22);
        };
      };
    };
    return ChildQuery3;
  }();
  var unChildQueryBox = unsafeCoerce2;
  var mkChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a2) {
    return function(b2) {
      return a2 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void5 = /* @__PURE__ */ $$void(functorEffect);
  var coerce4 = /* @__PURE__ */ coerce();
  var bind7 = /* @__PURE__ */ bind(bindEffect);
  var append8 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v) {
    return v;
  };
  var subscribe = function(v) {
    return function(k) {
      return v(function($76) {
        return $$void5(k($76));
      });
    };
  };
  var notify = function(v) {
    return function(a2) {
      return v(a2);
    };
  };
  var makeEmitter = coerce4;
  var functorEmitter = {
    map: function(f) {
      return function(v) {
        return function(k) {
          return v(function($77) {
            return k(f($77));
          });
        };
      };
    }
  };
  var create3 = function __do2() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do3() {
          modify_(function(v) {
            return append8(v)([k]);
          })(subscribers)();
          return modify_(deleteBy(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a2) {
        return bind7(read(subscribers))(traverse_1(function(k) {
          return k(a2);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity15 = /* @__PURE__ */ identity(categoryFn);
  var lookup6 = /* @__PURE__ */ lookup5();
  var over2 = /* @__PURE__ */ over()();
  var SubscriptionId = function(x) {
    return x;
  };
  var ForkId = function(x) {
    return x;
  };
  var State = /* @__PURE__ */ function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  }();
  var Subscribe = /* @__PURE__ */ function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  }();
  var Unsubscribe = /* @__PURE__ */ function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  }();
  var Lift2 = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var ChildQuery2 = /* @__PURE__ */ function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  }();
  var Raise = /* @__PURE__ */ function() {
    function Raise4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise4.create = function(value0) {
      return function(value1) {
        return new Raise4(value0, value1);
      };
    };
    return Raise4;
  }();
  var Par = /* @__PURE__ */ function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  }();
  var Fork = /* @__PURE__ */ function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  }();
  var Join = /* @__PURE__ */ function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  }();
  var Kill = /* @__PURE__ */ function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  }();
  var GetRef = /* @__PURE__ */ function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  }();
  var HalogenAp = function(x) {
    return x;
  };
  var HalogenM = function(x) {
    return x;
  };
  var subscribe2 = function(es) {
    return liftF(new Subscribe(function(v) {
      return es;
    }, identity15));
  };
  var raise = function(o) {
    return liftF(new Raise(o, unit));
  };
  var query = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup6(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(q2) {
              return liftF(new ChildQuery2(mkChildQueryBox(new ChildQuery(function(dictApplicative) {
                var pure115 = pure(dictApplicative);
                return function(k) {
                  var $177 = maybe(pure115(Nothing.value))(k);
                  var $178 = lookup23(label5)(p2);
                  return function($179) {
                    return $177($178($179));
                  };
                };
              }, q2, identity15))));
            };
          };
        };
      };
    };
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadTransHalogenM = {
    lift: function(dictMonad) {
      return function($180) {
        return HalogenM(liftF(Lift2.create($180)));
      };
    }
  };
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var monadEffectHalogenM = function(dictMonadEffect) {
    return {
      liftEffect: function() {
        var $186 = liftEffect(dictMonadEffect);
        return function($187) {
          return HalogenM(liftF(Lift2.create($186($187))));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var hoist = function(dictFunctor) {
    return function(nat) {
      return function(v) {
        var go2 = function(v1) {
          if (v1 instanceof State) {
            return new State(v1.value0);
          }
          ;
          if (v1 instanceof Subscribe) {
            return new Subscribe(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Unsubscribe) {
            return new Unsubscribe(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Lift2) {
            return new Lift2(nat(v1.value0));
          }
          ;
          if (v1 instanceof ChildQuery2) {
            return new ChildQuery2(v1.value0);
          }
          ;
          if (v1 instanceof Raise) {
            return new Raise(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Par) {
            return new Par(over2(HalogenAp)(hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));
          }
          ;
          if (v1 instanceof Fork) {
            return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);
          }
          ;
          if (v1 instanceof Join) {
            return new Join(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof Kill) {
            return new Kill(v1.value0, v1.value1);
          }
          ;
          if (v1 instanceof GetRef) {
            return new GetRef(v1.value0, v1.value1);
          }
          ;
          throw new Error("Failed pattern match at Halogen.Query.HalogenM (line 312, column 8 - line 323, column 29): " + [v1.constructor.name]);
        };
        return hoistFree(go2)(v);
      };
    };
  };
  var getRef = function(p2) {
    return liftF(new GetRef(p2, identity15));
  };
  var functorHalogenM = freeFunctor;
  var fork = function(hmu) {
    return liftF(new Fork(hmu, identity15));
  };
  var bindHalogenM = freeBind;
  var applicativeHalogenM = freeApplicative;
  var applicativeHalogenAp = applicativeFreeAp;
  var parallelHalogenM = {
    parallel: function($199) {
      return HalogenAp(liftFreeAp($199));
    },
    sequential: function($200) {
      return HalogenM(liftF(Par.create($200)));
    },
    Monad0: function() {
      return monadHalogenM;
    },
    Applicative1: function() {
      return applicativeHalogenAp;
    }
  };

  // output/Conduit.Capability.Now/index.js
  var nowDateTime = function(dict) {
    return dict.nowDateTime;
  };

  // output/Data.Date/foreign.js
  var createDate = function(y, m, d) {
    var date2 = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date2.setUTCFullYear(y);
    }
    return date2;
  };
  function canonicalDateImpl(ctor, y, m, d) {
    var date2 = createDate(y, m - 1, d);
    return ctor(date2.getUTCFullYear())(date2.getUTCMonth() + 1)(date2.getUTCDate());
  }
  function calcWeekday(y, m, d) {
    return createDate(y, m - 1, d).getUTCDay();
  }

  // output/Data.Date.Component/index.js
  var $runtime_lazy6 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var Monday = /* @__PURE__ */ function() {
    function Monday2() {
    }
    ;
    Monday2.value = new Monday2();
    return Monday2;
  }();
  var Tuesday = /* @__PURE__ */ function() {
    function Tuesday2() {
    }
    ;
    Tuesday2.value = new Tuesday2();
    return Tuesday2;
  }();
  var Wednesday = /* @__PURE__ */ function() {
    function Wednesday2() {
    }
    ;
    Wednesday2.value = new Wednesday2();
    return Wednesday2;
  }();
  var Thursday = /* @__PURE__ */ function() {
    function Thursday2() {
    }
    ;
    Thursday2.value = new Thursday2();
    return Thursday2;
  }();
  var Friday = /* @__PURE__ */ function() {
    function Friday2() {
    }
    ;
    Friday2.value = new Friday2();
    return Friday2;
  }();
  var Saturday = /* @__PURE__ */ function() {
    function Saturday2() {
    }
    ;
    Saturday2.value = new Saturday2();
    return Saturday2;
  }();
  var Sunday = /* @__PURE__ */ function() {
    function Sunday2() {
    }
    ;
    Sunday2.value = new Sunday2();
    return Sunday2;
  }();
  var January = /* @__PURE__ */ function() {
    function January2() {
    }
    ;
    January2.value = new January2();
    return January2;
  }();
  var February = /* @__PURE__ */ function() {
    function February2() {
    }
    ;
    February2.value = new February2();
    return February2;
  }();
  var March = /* @__PURE__ */ function() {
    function March2() {
    }
    ;
    March2.value = new March2();
    return March2;
  }();
  var April = /* @__PURE__ */ function() {
    function April2() {
    }
    ;
    April2.value = new April2();
    return April2;
  }();
  var May = /* @__PURE__ */ function() {
    function May2() {
    }
    ;
    May2.value = new May2();
    return May2;
  }();
  var June = /* @__PURE__ */ function() {
    function June2() {
    }
    ;
    June2.value = new June2();
    return June2;
  }();
  var July = /* @__PURE__ */ function() {
    function July2() {
    }
    ;
    July2.value = new July2();
    return July2;
  }();
  var August = /* @__PURE__ */ function() {
    function August2() {
    }
    ;
    August2.value = new August2();
    return August2;
  }();
  var September = /* @__PURE__ */ function() {
    function September2() {
    }
    ;
    September2.value = new September2();
    return September2;
  }();
  var October = /* @__PURE__ */ function() {
    function October2() {
    }
    ;
    October2.value = new October2();
    return October2;
  }();
  var November = /* @__PURE__ */ function() {
    function November2() {
    }
    ;
    November2.value = new November2();
    return November2;
  }();
  var December = /* @__PURE__ */ function() {
    function December2() {
    }
    ;
    December2.value = new December2();
    return December2;
  }();
  var showWeekday = {
    show: function(v) {
      if (v instanceof Monday) {
        return "Monday";
      }
      ;
      if (v instanceof Tuesday) {
        return "Tuesday";
      }
      ;
      if (v instanceof Wednesday) {
        return "Wednesday";
      }
      ;
      if (v instanceof Thursday) {
        return "Thursday";
      }
      ;
      if (v instanceof Friday) {
        return "Friday";
      }
      ;
      if (v instanceof Saturday) {
        return "Saturday";
      }
      ;
      if (v instanceof Sunday) {
        return "Sunday";
      }
      ;
      throw new Error("Failed pattern match at Data.Date.Component (line 184, column 1 - line 191, column 25): " + [v.constructor.name]);
    }
  };
  var showMonth = {
    show: function(v) {
      if (v instanceof January) {
        return "January";
      }
      ;
      if (v instanceof February) {
        return "February";
      }
      ;
      if (v instanceof March) {
        return "March";
      }
      ;
      if (v instanceof April) {
        return "April";
      }
      ;
      if (v instanceof May) {
        return "May";
      }
      ;
      if (v instanceof June) {
        return "June";
      }
      ;
      if (v instanceof July) {
        return "July";
      }
      ;
      if (v instanceof August) {
        return "August";
      }
      ;
      if (v instanceof September) {
        return "September";
      }
      ;
      if (v instanceof October) {
        return "October";
      }
      ;
      if (v instanceof November) {
        return "November";
      }
      ;
      if (v instanceof December) {
        return "December";
      }
      ;
      throw new Error("Failed pattern match at Data.Date.Component (line 101, column 1 - line 113, column 29): " + [v.constructor.name]);
    }
  };
  var ordYear = ordInt;
  var ordDay = ordInt;
  var eqWeekday = {
    eq: function(x) {
      return function(y) {
        if (x instanceof Monday && y instanceof Monday) {
          return true;
        }
        ;
        if (x instanceof Tuesday && y instanceof Tuesday) {
          return true;
        }
        ;
        if (x instanceof Wednesday && y instanceof Wednesday) {
          return true;
        }
        ;
        if (x instanceof Thursday && y instanceof Thursday) {
          return true;
        }
        ;
        if (x instanceof Friday && y instanceof Friday) {
          return true;
        }
        ;
        if (x instanceof Saturday && y instanceof Saturday) {
          return true;
        }
        ;
        if (x instanceof Sunday && y instanceof Sunday) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var ordWeekday = {
    compare: function(x) {
      return function(y) {
        if (x instanceof Monday && y instanceof Monday) {
          return EQ.value;
        }
        ;
        if (x instanceof Monday) {
          return LT.value;
        }
        ;
        if (y instanceof Monday) {
          return GT.value;
        }
        ;
        if (x instanceof Tuesday && y instanceof Tuesday) {
          return EQ.value;
        }
        ;
        if (x instanceof Tuesday) {
          return LT.value;
        }
        ;
        if (y instanceof Tuesday) {
          return GT.value;
        }
        ;
        if (x instanceof Wednesday && y instanceof Wednesday) {
          return EQ.value;
        }
        ;
        if (x instanceof Wednesday) {
          return LT.value;
        }
        ;
        if (y instanceof Wednesday) {
          return GT.value;
        }
        ;
        if (x instanceof Thursday && y instanceof Thursday) {
          return EQ.value;
        }
        ;
        if (x instanceof Thursday) {
          return LT.value;
        }
        ;
        if (y instanceof Thursday) {
          return GT.value;
        }
        ;
        if (x instanceof Friday && y instanceof Friday) {
          return EQ.value;
        }
        ;
        if (x instanceof Friday) {
          return LT.value;
        }
        ;
        if (y instanceof Friday) {
          return GT.value;
        }
        ;
        if (x instanceof Saturday && y instanceof Saturday) {
          return EQ.value;
        }
        ;
        if (x instanceof Saturday) {
          return LT.value;
        }
        ;
        if (y instanceof Saturday) {
          return GT.value;
        }
        ;
        if (x instanceof Sunday && y instanceof Sunday) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Date.Component (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function() {
      return eqWeekday;
    }
  };
  var eqMonth = {
    eq: function(x) {
      return function(y) {
        if (x instanceof January && y instanceof January) {
          return true;
        }
        ;
        if (x instanceof February && y instanceof February) {
          return true;
        }
        ;
        if (x instanceof March && y instanceof March) {
          return true;
        }
        ;
        if (x instanceof April && y instanceof April) {
          return true;
        }
        ;
        if (x instanceof May && y instanceof May) {
          return true;
        }
        ;
        if (x instanceof June && y instanceof June) {
          return true;
        }
        ;
        if (x instanceof July && y instanceof July) {
          return true;
        }
        ;
        if (x instanceof August && y instanceof August) {
          return true;
        }
        ;
        if (x instanceof September && y instanceof September) {
          return true;
        }
        ;
        if (x instanceof October && y instanceof October) {
          return true;
        }
        ;
        if (x instanceof November && y instanceof November) {
          return true;
        }
        ;
        if (x instanceof December && y instanceof December) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var ordMonth = {
    compare: function(x) {
      return function(y) {
        if (x instanceof January && y instanceof January) {
          return EQ.value;
        }
        ;
        if (x instanceof January) {
          return LT.value;
        }
        ;
        if (y instanceof January) {
          return GT.value;
        }
        ;
        if (x instanceof February && y instanceof February) {
          return EQ.value;
        }
        ;
        if (x instanceof February) {
          return LT.value;
        }
        ;
        if (y instanceof February) {
          return GT.value;
        }
        ;
        if (x instanceof March && y instanceof March) {
          return EQ.value;
        }
        ;
        if (x instanceof March) {
          return LT.value;
        }
        ;
        if (y instanceof March) {
          return GT.value;
        }
        ;
        if (x instanceof April && y instanceof April) {
          return EQ.value;
        }
        ;
        if (x instanceof April) {
          return LT.value;
        }
        ;
        if (y instanceof April) {
          return GT.value;
        }
        ;
        if (x instanceof May && y instanceof May) {
          return EQ.value;
        }
        ;
        if (x instanceof May) {
          return LT.value;
        }
        ;
        if (y instanceof May) {
          return GT.value;
        }
        ;
        if (x instanceof June && y instanceof June) {
          return EQ.value;
        }
        ;
        if (x instanceof June) {
          return LT.value;
        }
        ;
        if (y instanceof June) {
          return GT.value;
        }
        ;
        if (x instanceof July && y instanceof July) {
          return EQ.value;
        }
        ;
        if (x instanceof July) {
          return LT.value;
        }
        ;
        if (y instanceof July) {
          return GT.value;
        }
        ;
        if (x instanceof August && y instanceof August) {
          return EQ.value;
        }
        ;
        if (x instanceof August) {
          return LT.value;
        }
        ;
        if (y instanceof August) {
          return GT.value;
        }
        ;
        if (x instanceof September && y instanceof September) {
          return EQ.value;
        }
        ;
        if (x instanceof September) {
          return LT.value;
        }
        ;
        if (y instanceof September) {
          return GT.value;
        }
        ;
        if (x instanceof October && y instanceof October) {
          return EQ.value;
        }
        ;
        if (x instanceof October) {
          return LT.value;
        }
        ;
        if (y instanceof October) {
          return GT.value;
        }
        ;
        if (x instanceof November && y instanceof November) {
          return EQ.value;
        }
        ;
        if (x instanceof November) {
          return LT.value;
        }
        ;
        if (y instanceof November) {
          return GT.value;
        }
        ;
        if (x instanceof December && y instanceof December) {
          return EQ.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Date.Component (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
      };
    },
    Eq0: function() {
      return eqMonth;
    }
  };
  var boundedYear = /* @__PURE__ */ function() {
    return {
      bottom: -271820 | 0,
      top: 275759,
      Ord0: function() {
        return ordYear;
      }
    };
  }();
  var boundedWeekday = /* @__PURE__ */ function() {
    return {
      bottom: Monday.value,
      top: Sunday.value,
      Ord0: function() {
        return ordWeekday;
      }
    };
  }();
  var boundedMonth = /* @__PURE__ */ function() {
    return {
      bottom: January.value,
      top: December.value,
      Ord0: function() {
        return ordMonth;
      }
    };
  }();
  var boundedEnumYear = {
    cardinality: 547580,
    toEnum: function(n) {
      if (n >= (-271820 | 0) && n <= 275759) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedYear;
    },
    Enum1: function() {
      return $lazy_enumYear(0);
    }
  };
  var $lazy_enumYear = /* @__PURE__ */ $runtime_lazy6("enumYear", "Data.Date.Component", function() {
    return {
      succ: function() {
        var $55 = toEnum(boundedEnumYear);
        var $56 = fromEnum(boundedEnumYear);
        return function($57) {
          return $55(function(v) {
            return v + 1 | 0;
          }($56($57)));
        };
      }(),
      pred: function() {
        var $58 = toEnum(boundedEnumYear);
        var $59 = fromEnum(boundedEnumYear);
        return function($60) {
          return $58(function(v) {
            return v - 1 | 0;
          }($59($60)));
        };
      }(),
      Ord0: function() {
        return ordYear;
      }
    };
  });
  var boundedEnumWeekday = {
    cardinality: 7,
    toEnum: function(v) {
      if (v === 1) {
        return new Just(Monday.value);
      }
      ;
      if (v === 2) {
        return new Just(Tuesday.value);
      }
      ;
      if (v === 3) {
        return new Just(Wednesday.value);
      }
      ;
      if (v === 4) {
        return new Just(Thursday.value);
      }
      ;
      if (v === 5) {
        return new Just(Friday.value);
      }
      ;
      if (v === 6) {
        return new Just(Saturday.value);
      }
      ;
      if (v === 7) {
        return new Just(Sunday.value);
      }
      ;
      return Nothing.value;
    },
    fromEnum: function(v) {
      if (v instanceof Monday) {
        return 1;
      }
      ;
      if (v instanceof Tuesday) {
        return 2;
      }
      ;
      if (v instanceof Wednesday) {
        return 3;
      }
      ;
      if (v instanceof Thursday) {
        return 4;
      }
      ;
      if (v instanceof Friday) {
        return 5;
      }
      ;
      if (v instanceof Saturday) {
        return 6;
      }
      ;
      if (v instanceof Sunday) {
        return 7;
      }
      ;
      throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 182, column 16): " + [v.constructor.name]);
    },
    Bounded0: function() {
      return boundedWeekday;
    },
    Enum1: function() {
      return $lazy_enumWeekday(0);
    }
  };
  var $lazy_enumWeekday = /* @__PURE__ */ $runtime_lazy6("enumWeekday", "Data.Date.Component", function() {
    return {
      succ: function() {
        var $61 = toEnum(boundedEnumWeekday);
        var $62 = fromEnum(boundedEnumWeekday);
        return function($63) {
          return $61(function(v) {
            return v + 1 | 0;
          }($62($63)));
        };
      }(),
      pred: function() {
        var $64 = toEnum(boundedEnumWeekday);
        var $65 = fromEnum(boundedEnumWeekday);
        return function($66) {
          return $64(function(v) {
            return v - 1 | 0;
          }($65($66)));
        };
      }(),
      Ord0: function() {
        return ordWeekday;
      }
    };
  });
  var boundedEnumMonth = {
    cardinality: 12,
    toEnum: function(v) {
      if (v === 1) {
        return new Just(January.value);
      }
      ;
      if (v === 2) {
        return new Just(February.value);
      }
      ;
      if (v === 3) {
        return new Just(March.value);
      }
      ;
      if (v === 4) {
        return new Just(April.value);
      }
      ;
      if (v === 5) {
        return new Just(May.value);
      }
      ;
      if (v === 6) {
        return new Just(June.value);
      }
      ;
      if (v === 7) {
        return new Just(July.value);
      }
      ;
      if (v === 8) {
        return new Just(August.value);
      }
      ;
      if (v === 9) {
        return new Just(September.value);
      }
      ;
      if (v === 10) {
        return new Just(October.value);
      }
      ;
      if (v === 11) {
        return new Just(November.value);
      }
      ;
      if (v === 12) {
        return new Just(December.value);
      }
      ;
      return Nothing.value;
    },
    fromEnum: function(v) {
      if (v instanceof January) {
        return 1;
      }
      ;
      if (v instanceof February) {
        return 2;
      }
      ;
      if (v instanceof March) {
        return 3;
      }
      ;
      if (v instanceof April) {
        return 4;
      }
      ;
      if (v instanceof May) {
        return 5;
      }
      ;
      if (v instanceof June) {
        return 6;
      }
      ;
      if (v instanceof July) {
        return 7;
      }
      ;
      if (v instanceof August) {
        return 8;
      }
      ;
      if (v instanceof September) {
        return 9;
      }
      ;
      if (v instanceof October) {
        return 10;
      }
      ;
      if (v instanceof November) {
        return 11;
      }
      ;
      if (v instanceof December) {
        return 12;
      }
      ;
      throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [v.constructor.name]);
    },
    Bounded0: function() {
      return boundedMonth;
    },
    Enum1: function() {
      return $lazy_enumMonth(0);
    }
  };
  var $lazy_enumMonth = /* @__PURE__ */ $runtime_lazy6("enumMonth", "Data.Date.Component", function() {
    return {
      succ: function() {
        var $67 = toEnum(boundedEnumMonth);
        var $68 = fromEnum(boundedEnumMonth);
        return function($69) {
          return $67(function(v) {
            return v + 1 | 0;
          }($68($69)));
        };
      }(),
      pred: function() {
        var $70 = toEnum(boundedEnumMonth);
        var $71 = fromEnum(boundedEnumMonth);
        return function($72) {
          return $70(function(v) {
            return v - 1 | 0;
          }($71($72)));
        };
      }(),
      Ord0: function() {
        return ordMonth;
      }
    };
  });
  var boundedDay = {
    bottom: 1,
    top: 31,
    Ord0: function() {
      return ordDay;
    }
  };
  var boundedEnumDay = {
    cardinality: 31,
    toEnum: function(n) {
      if (n >= 1 && n <= 31) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedDay;
    },
    Enum1: function() {
      return $lazy_enumDay(0);
    }
  };
  var $lazy_enumDay = /* @__PURE__ */ $runtime_lazy6("enumDay", "Data.Date.Component", function() {
    return {
      succ: function() {
        var $73 = toEnum(boundedEnumDay);
        var $74 = fromEnum(boundedEnumDay);
        return function($75) {
          return $73(function(v) {
            return v + 1 | 0;
          }($74($75)));
        };
      }(),
      pred: function() {
        var $76 = toEnum(boundedEnumDay);
        var $77 = fromEnum(boundedEnumDay);
        return function($78) {
          return $76(function(v) {
            return v - 1 | 0;
          }($77($78)));
        };
      }(),
      Ord0: function() {
        return ordDay;
      }
    };
  });

  // output/Data.Date/index.js
  var fromEnum4 = /* @__PURE__ */ fromEnum(boundedEnumMonth);
  var fromJust9 = /* @__PURE__ */ fromJust();
  var toEnum2 = /* @__PURE__ */ toEnum(boundedEnumWeekday);
  var toEnum22 = /* @__PURE__ */ toEnum(boundedEnumMonth);
  var $$Date = /* @__PURE__ */ function() {
    function $$Date2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    $$Date2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new $$Date2(value0, value1, value22);
        };
      };
    };
    return $$Date2;
  }();
  var year = function(v) {
    return v.value0;
  };
  var weekday = function(v) {
    var n = calcWeekday(v.value0, fromEnum4(v.value1), v.value2);
    var $86 = n === 0;
    if ($86) {
      return fromJust9(toEnum2(7));
    }
    ;
    return fromJust9(toEnum2(n));
  };
  var month = function(v) {
    return v.value1;
  };
  var day = function(v) {
    return v.value2;
  };
  var canonicalDate = function(y) {
    return function(m) {
      return function(d) {
        var mkDate = function(y$prime) {
          return function(m$prime) {
            return function(d$prime) {
              return new $$Date(y$prime, fromJust9(toEnum22(m$prime)), d$prime);
            };
          };
        };
        return canonicalDateImpl(mkDate, y, fromEnum4(m), d);
      };
    };
  };

  // output/Data.Time.Component/index.js
  var $runtime_lazy7 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var ordSecond = ordInt;
  var ordMinute = ordInt;
  var ordMillisecond = ordInt;
  var ordHour = ordInt;
  var boundedSecond = {
    bottom: 0,
    top: 59,
    Ord0: function() {
      return ordSecond;
    }
  };
  var boundedMinute = {
    bottom: 0,
    top: 59,
    Ord0: function() {
      return ordMinute;
    }
  };
  var boundedMillisecond = {
    bottom: 0,
    top: 999,
    Ord0: function() {
      return ordMillisecond;
    }
  };
  var boundedHour = {
    bottom: 0,
    top: 23,
    Ord0: function() {
      return ordHour;
    }
  };
  var boundedEnumSecond = {
    cardinality: 60,
    toEnum: function(n) {
      if (n >= 0 && n <= 59) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 95, column 26): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedSecond;
    },
    Enum1: function() {
      return $lazy_enumSecond(0);
    }
  };
  var $lazy_enumSecond = /* @__PURE__ */ $runtime_lazy7("enumSecond", "Data.Time.Component", function() {
    return {
      succ: function() {
        var $36 = toEnum(boundedEnumSecond);
        var $37 = fromEnum(boundedEnumSecond);
        return function($38) {
          return $36(function(v) {
            return v + 1 | 0;
          }($37($38)));
        };
      }(),
      pred: function() {
        var $39 = toEnum(boundedEnumSecond);
        var $40 = fromEnum(boundedEnumSecond);
        return function($41) {
          return $39(function(v) {
            return v - 1 | 0;
          }($40($41)));
        };
      }(),
      Ord0: function() {
        return ordSecond;
      }
    };
  });
  var boundedEnumMinute = {
    cardinality: 60,
    toEnum: function(n) {
      if (n >= 0 && n <= 59) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 66, column 26): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedMinute;
    },
    Enum1: function() {
      return $lazy_enumMinute(0);
    }
  };
  var $lazy_enumMinute = /* @__PURE__ */ $runtime_lazy7("enumMinute", "Data.Time.Component", function() {
    return {
      succ: function() {
        var $42 = toEnum(boundedEnumMinute);
        var $43 = fromEnum(boundedEnumMinute);
        return function($44) {
          return $42(function(v) {
            return v + 1 | 0;
          }($43($44)));
        };
      }(),
      pred: function() {
        var $45 = toEnum(boundedEnumMinute);
        var $46 = fromEnum(boundedEnumMinute);
        return function($47) {
          return $45(function(v) {
            return v - 1 | 0;
          }($46($47)));
        };
      }(),
      Ord0: function() {
        return ordMinute;
      }
    };
  });
  var boundedEnumMillisecond = {
    cardinality: 1e3,
    toEnum: function(n) {
      if (n >= 0 && n <= 999) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 125, column 31): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedMillisecond;
    },
    Enum1: function() {
      return $lazy_enumMillisecond(0);
    }
  };
  var $lazy_enumMillisecond = /* @__PURE__ */ $runtime_lazy7("enumMillisecond", "Data.Time.Component", function() {
    return {
      succ: function() {
        var $48 = toEnum(boundedEnumMillisecond);
        var $49 = fromEnum(boundedEnumMillisecond);
        return function($50) {
          return $48(function(v) {
            return v + 1 | 0;
          }($49($50)));
        };
      }(),
      pred: function() {
        var $51 = toEnum(boundedEnumMillisecond);
        var $52 = fromEnum(boundedEnumMillisecond);
        return function($53) {
          return $51(function(v) {
            return v - 1 | 0;
          }($52($53)));
        };
      }(),
      Ord0: function() {
        return ordMillisecond;
      }
    };
  });
  var boundedEnumHour = {
    cardinality: 24,
    toEnum: function(n) {
      if (n >= 0 && n <= 23) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 37, column 24): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedHour;
    },
    Enum1: function() {
      return $lazy_enumHour(0);
    }
  };
  var $lazy_enumHour = /* @__PURE__ */ $runtime_lazy7("enumHour", "Data.Time.Component", function() {
    return {
      succ: function() {
        var $54 = toEnum(boundedEnumHour);
        var $55 = fromEnum(boundedEnumHour);
        return function($56) {
          return $54(function(v) {
            return v + 1 | 0;
          }($55($56)));
        };
      }(),
      pred: function() {
        var $57 = toEnum(boundedEnumHour);
        var $58 = fromEnum(boundedEnumHour);
        return function($59) {
          return $57(function(v) {
            return v - 1 | 0;
          }($58($59)));
        };
      }(),
      Ord0: function() {
        return ordHour;
      }
    };
  });

  // output/Data.Time/index.js
  var Time = /* @__PURE__ */ function() {
    function Time2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Time2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Time2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Time2;
  }();
  var second2 = function(v) {
    return v.value2;
  };
  var minute = function(v) {
    return v.value1;
  };
  var millisecond = function(v) {
    return v.value3;
  };
  var hour = function(v) {
    return v.value0;
  };

  // output/Data.DateTime/index.js
  var DateTime = /* @__PURE__ */ function() {
    function DateTime2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    DateTime2.create = function(value0) {
      return function(value1) {
        return new DateTime2(value0, value1);
      };
    };
    return DateTime2;
  }();
  var time = function(v) {
    return v.value1;
  };
  var date = function(v) {
    return v.value0;
  };

  // output/Data.DateTime.Instant/foreign.js
  var createDateTime = function(y, m, d, h, mi, s, ms) {
    var dateTime3 = new Date(Date.UTC(y, m, d, h, mi, s, ms));
    if (y >= 0 && y < 100) {
      dateTime3.setUTCFullYear(y);
    }
    return dateTime3;
  };
  function fromDateTimeImpl(y, mo, d, h, mi, s, ms) {
    return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
  }
  function toDateTimeImpl(ctor) {
    return function(instant2) {
      var dt2 = new Date(instant2);
      return ctor(dt2.getUTCFullYear())(dt2.getUTCMonth() + 1)(dt2.getUTCDate())(dt2.getUTCHours())(dt2.getUTCMinutes())(dt2.getUTCSeconds())(dt2.getUTCMilliseconds());
    };
  }

  // output/Data.DateTime.Instant/index.js
  var fromJust10 = /* @__PURE__ */ fromJust();
  var toEnum3 = /* @__PURE__ */ toEnum(boundedEnumMonth);
  var fromEnum5 = /* @__PURE__ */ fromEnum(boundedEnumMonth);
  var unInstant = function(v) {
    return v;
  };
  var toDateTime = /* @__PURE__ */ function() {
    var mkDateTime = function(y) {
      return function(mo) {
        return function(d) {
          return function(h) {
            return function(mi) {
              return function(s) {
                return function(ms) {
                  return new DateTime(canonicalDate(y)(fromJust10(toEnum3(mo)))(d), new Time(h, mi, s, ms));
                };
              };
            };
          };
        };
      };
    };
    return toDateTimeImpl(mkDateTime);
  }();
  var instant = function(v) {
    if (v >= -86399778816e5 && v <= 8639977881599999) {
      return new Just(v);
    }
    ;
    if (otherwise) {
      return Nothing.value;
    }
    ;
    throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [v.constructor.name]);
  };
  var fromDateTime = function(v) {
    return fromDateTimeImpl(year(v.value0), fromEnum5(month(v.value0)), day(v.value0), hour(v.value1), minute(v.value1), second2(v.value1), millisecond(v.value1));
  };

  // output/Parsing/index.js
  var unwrap7 = /* @__PURE__ */ unwrap();
  var ParseState = /* @__PURE__ */ function() {
    function ParseState2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    ParseState2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new ParseState2(value0, value1, value22);
        };
      };
    };
    return ParseState2;
  }();
  var ParseError = /* @__PURE__ */ function() {
    function ParseError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ParseError2.create = function(value0) {
      return function(value1) {
        return new ParseError2(value0, value1);
      };
    };
    return ParseError2;
  }();
  var More = /* @__PURE__ */ function() {
    function More2(value0) {
      this.value0 = value0;
    }
    ;
    More2.create = function(value0) {
      return new More2(value0);
    };
    return More2;
  }();
  var Lift3 = /* @__PURE__ */ function() {
    function Lift4(value0) {
      this.value0 = value0;
    }
    ;
    Lift4.create = function(value0) {
      return new Lift4(value0);
    };
    return Lift4;
  }();
  var Stop = /* @__PURE__ */ function() {
    function Stop2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Stop2.create = function(value0) {
      return function(value1) {
        return new Stop2(value0, value1);
      };
    };
    return Stop2;
  }();
  var lazyParserT = {
    defer: function(f) {
      var m = defer2(f);
      return function(state1, more, lift1, $$throw2, done) {
        var v = force(m);
        return v(state1, more, lift1, $$throw2, done);
      };
    }
  };
  var functorParserT = {
    map: function(f) {
      return function(v) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v1) {
            return v(state1, more, lift1, $$throw2, function(state22, a2) {
              return more(function(v2) {
                return done(state22, f(a2));
              });
            });
          });
        };
      };
    }
  };
  var applyParserT = {
    apply: function(v) {
      return function(v1) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v2) {
            return v(state1, more, lift1, $$throw2, function(state22, f) {
              return more(function(v3) {
                return v1(state22, more, lift1, $$throw2, function(state3, a2) {
                  return more(function(v4) {
                    return done(state3, f(a2));
                  });
                });
              });
            });
          });
        };
      };
    },
    Functor0: function() {
      return functorParserT;
    }
  };
  var bindParserT = {
    bind: function(v) {
      return function(next) {
        return function(state1, more, lift1, $$throw2, done) {
          return more(function(v1) {
            return v(state1, more, lift1, $$throw2, function(state22, a2) {
              return more(function(v2) {
                var v3 = next(a2);
                return v3(state22, more, lift1, $$throw2, done);
              });
            });
          });
        };
      };
    },
    Apply0: function() {
      return applyParserT;
    }
  };
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindParserT);
  var applicativeParserT = {
    pure: function(a2) {
      return function(state1, v, v1, v2, done) {
        return done(state1, a2);
      };
    },
    Apply0: function() {
      return applyParserT;
    }
  };
  var monadParserT = {
    Applicative0: function() {
      return applicativeParserT;
    },
    Bind1: function() {
      return bindParserT;
    }
  };
  var monadThrowParseErrorParse = {
    throwError: function(err) {
      return function(state1, v, v1, $$throw2, v2) {
        return $$throw2(state1, err);
      };
    },
    Monad0: function() {
      return monadParserT;
    }
  };
  var throwError2 = /* @__PURE__ */ throwError(monadThrowParseErrorParse);
  var altParserT = {
    alt: function(v) {
      return function(v1) {
        return function(v2, more, lift1, $$throw2, done) {
          return more(function(v3) {
            return v(new ParseState(v2.value0, v2.value1, false), more, lift1, function(v4, err) {
              return more(function(v5) {
                if (v4.value2) {
                  return $$throw2(v4, err);
                }
                ;
                return v1(v2, more, lift1, $$throw2, done);
              });
            }, done);
          });
        };
      };
    },
    Functor0: function() {
      return functorParserT;
    }
  };
  var stateParserT = function(k) {
    return function(state1, v, v1, v2, done) {
      var v3 = k(state1);
      return done(v3.value1, v3.value0);
    };
  };
  var runParserT$prime = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map58 = map(Monad0.Bind1().Apply0().Functor0());
    var pure115 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(state1) {
      return function(v) {
        var go2 = function($copy_step) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(step4) {
            var v1 = step4(unit);
            if (v1 instanceof More) {
              $copy_step = v1.value0;
              return;
            }
            ;
            if (v1 instanceof Lift3) {
              $tco_done = true;
              return map58(Loop.create)(v1.value0);
            }
            ;
            if (v1 instanceof Stop) {
              $tco_done = true;
              return pure115(new Done(new Tuple(v1.value1, v1.value0)));
            }
            ;
            throw new Error("Failed pattern match at Parsing (line 144, column 13 - line 150, column 32): " + [v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_step);
          }
          ;
          return $tco_result;
        };
        return tailRecM4(go2)(function(v1) {
          return v(state1, More.create, Lift3.create, function(state22, err) {
            return new Stop(state22, new Left(err));
          }, function(state22, res) {
            return new Stop(state22, new Right(res));
          });
        });
      };
    };
  };
  var position2 = /* @__PURE__ */ stateParserT(function(v) {
    return new Tuple(v.value1, v);
  });
  var parseErrorPosition = function(v) {
    return v.value1;
  };
  var parseErrorMessage = function(v) {
    return v.value0;
  };
  var initialPos = {
    index: 0,
    line: 1,
    column: 1
  };
  var runParserT = function(dictMonadRec) {
    var map58 = map(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    var runParserT$prime1 = runParserT$prime(dictMonadRec);
    return function(s) {
      return function(p2) {
        var initialState = new ParseState(s, initialPos, false);
        return map58(fst)(runParserT$prime1(initialState)(p2));
      };
    };
  };
  var runParserT1 = /* @__PURE__ */ runParserT(monadRecIdentity);
  var runParser = function(s) {
    var $253 = runParserT1(s);
    return function($254) {
      return unwrap7($253($254));
    };
  };
  var failWithPosition = function(message3) {
    return function(pos) {
      return throwError2(new ParseError(message3, pos));
    };
  };
  var fail3 = function(message3) {
    return bindFlipped7(failWithPosition(message3))(position2);
  };
  var plusParserT = {
    empty: /* @__PURE__ */ fail3("No alternative"),
    Alt0: function() {
      return altParserT;
    }
  };
  var alternativeParserT = {
    Applicative0: function() {
      return applicativeParserT;
    },
    Plus1: function() {
      return plusParserT;
    }
  };

  // output/Parsing.Combinators/index.js
  var alt8 = /* @__PURE__ */ alt(altParserT);
  var defer4 = /* @__PURE__ */ defer(lazyParserT);
  var empty8 = /* @__PURE__ */ empty2(plusParserT);
  var withLazyErrorMessage = function(p2) {
    return function(msg) {
      return alt8(p2)(defer4(function(v) {
        return fail3("Expected " + msg(unit));
      }));
    };
  };
  var $$try4 = function(v) {
    return function(v1, more, lift13, $$throw2, done) {
      return v(v1, more, lift13, function(v2, err) {
        return $$throw2(new ParseState(v2.value0, v2.value1, v1.value2), err);
      }, done);
    };
  };
  var choice = function(dictFoldable) {
    var go2 = function(p1) {
      return function(v) {
        if (v instanceof Nothing) {
          return new Just(p1);
        }
        ;
        if (v instanceof Just) {
          return new Just(alt8(p1)(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Parsing.Combinators (line 357, column 11 - line 359, column 32): " + [v.constructor.name]);
      };
    };
    var $92 = fromMaybe(empty8);
    var $93 = foldr(dictFoldable)(go2)(Nothing.value);
    return function($94) {
      return $92($93($94));
    };
  };

  // output/Parsing.String/index.js
  var fromEnum6 = /* @__PURE__ */ fromEnum(boundedEnumCodePoint);
  var mod3 = /* @__PURE__ */ mod(euclideanRingInt);
  var fromJust11 = /* @__PURE__ */ fromJust();
  var toEnum4 = /* @__PURE__ */ toEnum(boundedEnumChar);
  var show3 = /* @__PURE__ */ show(showString);
  var updatePosSingle = function(v) {
    return function(cp) {
      return function(after) {
        var v1 = fromEnum6(cp);
        if (v1 === 10) {
          return {
            index: v.index + 1 | 0,
            line: v.line + 1 | 0,
            column: 1
          };
        }
        ;
        if (v1 === 13) {
          var v2 = codePointAt(0)(after);
          if (v2 instanceof Just && fromEnum6(v2.value0) === 10) {
            return {
              index: v.index + 1 | 0,
              line: v.line,
              column: v.column
            };
          }
          ;
          return {
            index: v.index + 1 | 0,
            line: v.line + 1 | 0,
            column: 1
          };
        }
        ;
        if (v1 === 9) {
          return {
            index: v.index + 1 | 0,
            line: v.line,
            column: (v.column + 8 | 0) - mod3(v.column - 1 | 0)(8) | 0
          };
        }
        ;
        return {
          index: v.index + 1 | 0,
          line: v.line,
          column: v.column + 1 | 0
        };
      };
    };
  };
  var updatePosString = function($copy_pos) {
    return function($copy_before) {
      return function($copy_after) {
        var $tco_var_pos = $copy_pos;
        var $tco_var_before = $copy_before;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(pos, before, after) {
          var v = uncons3(before);
          if (v instanceof Nothing) {
            $tco_done = true;
            return pos;
          }
          ;
          if (v instanceof Just) {
            var newPos = function() {
              if ($$null2(v.value0.tail)) {
                return updatePosSingle(pos)(v.value0.head)(after);
              }
              ;
              if (otherwise) {
                return updatePosSingle(pos)(v.value0.head)(v.value0.tail);
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 160, column 7 - line 162, column 52): " + []);
            }();
            $tco_var_pos = newPos;
            $tco_var_before = v.value0.tail;
            $copy_after = after;
            return;
          }
          ;
          throw new Error("Failed pattern match at Parsing.String (line 156, column 36 - line 163, column 38): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_pos, $tco_var_before, $copy_after);
        }
        ;
        return $tco_result;
      };
    };
  };
  var satisfy = function(f) {
    return mkFn5(function(v) {
      return function(v1) {
        return function(v2) {
          return function($$throw2) {
            return function(done) {
              var v3 = uncons3(v.value0);
              if (v3 instanceof Nothing) {
                return $$throw2(v, new ParseError("Unexpected EOF", v.value1));
              }
              ;
              if (v3 instanceof Just) {
                var cp = fromEnum6(v3.value0.head);
                var $74 = cp < 0 || cp > 65535;
                if ($74) {
                  return $$throw2(v, new ParseError("Expected Char", v.value1));
                }
                ;
                var ch = fromJust11(toEnum4(cp));
                var $75 = f(ch);
                if ($75) {
                  return done(new ParseState(v3.value0.tail, updatePosSingle(v.value1)(v3.value0.head)(v3.value0.tail), true), ch);
                }
                ;
                return $$throw2(v, new ParseError("Predicate unsatisfied", v.value1));
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 109, column 7 - line 124, column 75): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var eof = /* @__PURE__ */ mkFn5(function(v) {
    return function(v1) {
      return function(v2) {
        return function($$throw2) {
          return function(done) {
            var $91 = $$null2(v.value0);
            if ($91) {
              return done(new ParseState(v.value0, v.value1, true), unit);
            }
            ;
            return $$throw2(v, new ParseError("Expected EOF", v.value1));
          };
        };
      };
    };
  });
  var consumeWith = function(f) {
    return mkFn5(function(v) {
      return function(v1) {
        return function(v2) {
          return function($$throw2) {
            return function(done) {
              var v3 = f(v.value0);
              if (v3 instanceof Left) {
                return $$throw2(v, new ParseError(v3.value0, v.value1));
              }
              ;
              if (v3 instanceof Right) {
                return done(new ParseState(v3.value0.remainder, updatePosString(v.value1)(v3.value0.consumed)(v3.value0.remainder), true), v3.value0.value);
              }
              ;
              throw new Error("Failed pattern match at Parsing.String (line 280, column 7 - line 284, column 97): " + [v3.constructor.name]);
            };
          };
        };
      };
    });
  };
  var string3 = function(str) {
    return consumeWith(function(input3) {
      var v = stripPrefix(str)(input3);
      if (v instanceof Just) {
        return new Right({
          value: str,
          consumed: str,
          remainder: v.value0
        });
      }
      ;
      return new Left("Expected " + show3(str));
    });
  };

  // output/Data.Formatter.Parser.Utils/index.js
  var show4 = /* @__PURE__ */ show(showInt);
  var lmap4 = /* @__PURE__ */ lmap(bifunctorEither);
  var applyFirst3 = /* @__PURE__ */ applyFirst(applyParserT);
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorParserT);
  var printPosition = function(v) {
    return "(line " + (show4(v.line) + (", col " + (show4(v.column) + ")")));
  };
  var printError2 = function(err) {
    return parseErrorMessage(err) + (" " + printPosition(parseErrorPosition(err)));
  };
  var runP = function(p2) {
    return function(s) {
      return lmap4(printError2)(runParser(s)(applyFirst3(p2)(eof)));
    };
  };
  var oneOfAs = function(dictFunctor) {
    var map58 = map(dictFunctor);
    return function(dictFoldable) {
      var choice2 = choice(dictFoldable);
      return function(dictMonad) {
        return function(p2) {
          return function(xs) {
            return choice2(map58(function(v) {
              return voidLeft3(p2(v.value0))(v.value1);
            })(xs));
          };
        };
      };
    };
  };

  // output/Parsing.String.Basic/index.js
  var show13 = /* @__PURE__ */ show(/* @__PURE__ */ showArray(showChar));
  var notElem1 = /* @__PURE__ */ notElem2(eqChar);
  var noneOf = function(ss) {
    return withLazyErrorMessage(satisfy(flip(notElem1)(ss)))(function(v) {
      return "none of " + show13(ss);
    });
  };

  // output/Data.Formatter.DateTime/index.js
  var show5 = /* @__PURE__ */ show(showInt);
  var foldMap3 = /* @__PURE__ */ foldMap(foldableList);
  var foldMap12 = /* @__PURE__ */ foldMap3(monoidString);
  var mapFlipped4 = /* @__PURE__ */ mapFlipped(functorParserT);
  var oneOfAs2 = /* @__PURE__ */ oneOfAs(functorArray)(foldableArray);
  var map27 = /* @__PURE__ */ map(functorParserT);
  var abs3 = /* @__PURE__ */ abs(ordInt)(ringInt);
  var some3 = /* @__PURE__ */ some2(alternativeParserT)(lazyParserT);
  var fromEnum7 = /* @__PURE__ */ fromEnum(boundedEnumYear);
  var show14 = /* @__PURE__ */ show(showMonth);
  var fromEnum1 = /* @__PURE__ */ fromEnum(boundedEnumMonth);
  var fromEnum22 = /* @__PURE__ */ fromEnum(boundedEnumDay);
  var unwrap8 = /* @__PURE__ */ unwrap();
  var fromEnum32 = /* @__PURE__ */ fromEnum(boundedEnumWeekday);
  var show22 = /* @__PURE__ */ show(showWeekday);
  var fromEnum42 = /* @__PURE__ */ fromEnum(boundedEnumHour);
  var mod4 = /* @__PURE__ */ mod(euclideanRingInt);
  var fromEnum52 = /* @__PURE__ */ fromEnum(boundedEnumMinute);
  var fromEnum62 = /* @__PURE__ */ fromEnum(boundedEnumSecond);
  var fromEnum72 = /* @__PURE__ */ fromEnum(boundedEnumMillisecond);
  var div1 = /* @__PURE__ */ div(euclideanRingInt);
  var mapFlipped1 = /* @__PURE__ */ mapFlipped(functorEither);
  var YearFull = /* @__PURE__ */ function() {
    function YearFull2() {
    }
    ;
    YearFull2.value = new YearFull2();
    return YearFull2;
  }();
  var YearTwoDigits = /* @__PURE__ */ function() {
    function YearTwoDigits2() {
    }
    ;
    YearTwoDigits2.value = new YearTwoDigits2();
    return YearTwoDigits2;
  }();
  var YearAbsolute = /* @__PURE__ */ function() {
    function YearAbsolute2() {
    }
    ;
    YearAbsolute2.value = new YearAbsolute2();
    return YearAbsolute2;
  }();
  var MonthFull = /* @__PURE__ */ function() {
    function MonthFull2() {
    }
    ;
    MonthFull2.value = new MonthFull2();
    return MonthFull2;
  }();
  var MonthShort = /* @__PURE__ */ function() {
    function MonthShort2() {
    }
    ;
    MonthShort2.value = new MonthShort2();
    return MonthShort2;
  }();
  var MonthTwoDigits = /* @__PURE__ */ function() {
    function MonthTwoDigits2() {
    }
    ;
    MonthTwoDigits2.value = new MonthTwoDigits2();
    return MonthTwoDigits2;
  }();
  var DayOfMonthTwoDigits = /* @__PURE__ */ function() {
    function DayOfMonthTwoDigits2() {
    }
    ;
    DayOfMonthTwoDigits2.value = new DayOfMonthTwoDigits2();
    return DayOfMonthTwoDigits2;
  }();
  var DayOfMonth = /* @__PURE__ */ function() {
    function DayOfMonth2() {
    }
    ;
    DayOfMonth2.value = new DayOfMonth2();
    return DayOfMonth2;
  }();
  var UnixTimestamp = /* @__PURE__ */ function() {
    function UnixTimestamp2() {
    }
    ;
    UnixTimestamp2.value = new UnixTimestamp2();
    return UnixTimestamp2;
  }();
  var DayOfWeek = /* @__PURE__ */ function() {
    function DayOfWeek2() {
    }
    ;
    DayOfWeek2.value = new DayOfWeek2();
    return DayOfWeek2;
  }();
  var DayOfWeekName = /* @__PURE__ */ function() {
    function DayOfWeekName2() {
    }
    ;
    DayOfWeekName2.value = new DayOfWeekName2();
    return DayOfWeekName2;
  }();
  var DayOfWeekNameShort = /* @__PURE__ */ function() {
    function DayOfWeekNameShort2() {
    }
    ;
    DayOfWeekNameShort2.value = new DayOfWeekNameShort2();
    return DayOfWeekNameShort2;
  }();
  var Hours24 = /* @__PURE__ */ function() {
    function Hours242() {
    }
    ;
    Hours242.value = new Hours242();
    return Hours242;
  }();
  var Hours12 = /* @__PURE__ */ function() {
    function Hours122() {
    }
    ;
    Hours122.value = new Hours122();
    return Hours122;
  }();
  var Meridiem = /* @__PURE__ */ function() {
    function Meridiem2() {
    }
    ;
    Meridiem2.value = new Meridiem2();
    return Meridiem2;
  }();
  var Minutes = /* @__PURE__ */ function() {
    function Minutes2() {
    }
    ;
    Minutes2.value = new Minutes2();
    return Minutes2;
  }();
  var MinutesTwoDigits = /* @__PURE__ */ function() {
    function MinutesTwoDigits2() {
    }
    ;
    MinutesTwoDigits2.value = new MinutesTwoDigits2();
    return MinutesTwoDigits2;
  }();
  var Seconds = /* @__PURE__ */ function() {
    function Seconds2() {
    }
    ;
    Seconds2.value = new Seconds2();
    return Seconds2;
  }();
  var SecondsTwoDigits = /* @__PURE__ */ function() {
    function SecondsTwoDigits2() {
    }
    ;
    SecondsTwoDigits2.value = new SecondsTwoDigits2();
    return SecondsTwoDigits2;
  }();
  var Milliseconds2 = /* @__PURE__ */ function() {
    function Milliseconds3() {
    }
    ;
    Milliseconds3.value = new Milliseconds3();
    return Milliseconds3;
  }();
  var MillisecondsShort = /* @__PURE__ */ function() {
    function MillisecondsShort2() {
    }
    ;
    MillisecondsShort2.value = new MillisecondsShort2();
    return MillisecondsShort2;
  }();
  var MillisecondsTwoDigits = /* @__PURE__ */ function() {
    function MillisecondsTwoDigits2() {
    }
    ;
    MillisecondsTwoDigits2.value = new MillisecondsTwoDigits2();
    return MillisecondsTwoDigits2;
  }();
  var Placeholder = /* @__PURE__ */ function() {
    function Placeholder2(value0) {
      this.value0 = value0;
    }
    ;
    Placeholder2.create = function(value0) {
      return new Placeholder2(value0);
    };
    return Placeholder2;
  }();
  var printShortMonth = function(v) {
    if (v instanceof January) {
      return "Jan";
    }
    ;
    if (v instanceof February) {
      return "Feb";
    }
    ;
    if (v instanceof March) {
      return "Mar";
    }
    ;
    if (v instanceof April) {
      return "Apr";
    }
    ;
    if (v instanceof May) {
      return "May";
    }
    ;
    if (v instanceof June) {
      return "Jun";
    }
    ;
    if (v instanceof July) {
      return "Jul";
    }
    ;
    if (v instanceof August) {
      return "Aug";
    }
    ;
    if (v instanceof September) {
      return "Sep";
    }
    ;
    if (v instanceof October) {
      return "Oct";
    }
    ;
    if (v instanceof November) {
      return "Nov";
    }
    ;
    if (v instanceof December) {
      return "Dec";
    }
    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 489, column 19 - line 501, column 22): " + [v.constructor.name]);
  };
  var placeholderContent = /* @__PURE__ */ mapFlipped4(/* @__PURE__ */ some(alternativeParserT)(lazyParserT)(/* @__PURE__ */ noneOf(/* @__PURE__ */ toCharArray("YMDEHhamsS"))))(fromCharArray);
  var padSingleDigit = function(i2) {
    if (i2 < 0) {
      return "-" + padSingleDigit(-i2 | 0);
    }
    ;
    if (i2 < 10) {
      return "0" + show5(i2);
    }
    ;
    if (otherwise) {
      return show5(i2);
    }
    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 194, column 1 - line 194, column 32): " + [i2.constructor.name]);
  };
  var padQuadrupleDigit = function(i2) {
    if (i2 < 0) {
      return "-" + padQuadrupleDigit(-i2 | 0);
    }
    ;
    if (i2 < 10) {
      return "000" + show5(i2);
    }
    ;
    if (i2 < 100) {
      return "00" + show5(i2);
    }
    ;
    if (i2 < 1e3) {
      return "0" + show5(i2);
    }
    ;
    if (otherwise) {
      return show5(i2);
    }
    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 207, column 1 - line 207, column 35): " + [i2.constructor.name]);
  };
  var padDoubleDigit = function(i2) {
    if (i2 < 0) {
      return "-" + padDoubleDigit(-i2 | 0);
    }
    ;
    if (i2 < 10) {
      return "00" + show5(i2);
    }
    ;
    if (i2 < 100) {
      return "0" + show5(i2);
    }
    ;
    if (otherwise) {
      return show5(i2);
    }
    ;
    throw new Error("Failed pattern match at Data.Formatter.DateTime (line 200, column 1 - line 200, column 32): " + [i2.constructor.name]);
  };
  var formatterCommandParser = /* @__PURE__ */ function() {
    return alt(altParserT)(oneOfAs2(monadIdentity)(function($664) {
      return $$try4(string3($664));
    })([new Tuple("YYYY", YearFull.value), new Tuple("YY", YearTwoDigits.value), new Tuple("Y", YearAbsolute.value), new Tuple("MMMM", MonthFull.value), new Tuple("MMM", MonthShort.value), new Tuple("MM", MonthTwoDigits.value), new Tuple("DD", DayOfMonthTwoDigits.value), new Tuple("D", DayOfMonth.value), new Tuple("E", DayOfWeek.value), new Tuple("X", UnixTimestamp.value), new Tuple("dddd", DayOfWeekName.value), new Tuple("ddd", DayOfWeekNameShort.value), new Tuple("HH", Hours24.value), new Tuple("hh", Hours12.value), new Tuple("a", Meridiem.value), new Tuple("mm", MinutesTwoDigits.value), new Tuple("m", Minutes.value), new Tuple("ss", SecondsTwoDigits.value), new Tuple("s", Seconds.value), new Tuple("SSS", Milliseconds2.value), new Tuple("SS", MillisecondsTwoDigits.value), new Tuple("S", MillisecondsShort.value)]))(map27(Placeholder.create)(placeholderContent));
  }();
  var formatYearTwoDigits = function(i2) {
    var dateString = show5(abs3(i2));
    var dateLength = length5(dateString);
    if (dateLength === 1) {
      return "0" + dateString;
    }
    ;
    if (dateLength === 2) {
      return dateString;
    }
    ;
    return drop4(dateLength - 2 | 0)(dateString);
  };
  var formatParser = /* @__PURE__ */ some3(formatterCommandParser);
  var parseFormatString = /* @__PURE__ */ runP(formatParser);
  var fix12 = function(h) {
    var $618 = h === 0;
    if ($618) {
      return 12;
    }
    ;
    return h;
  };
  var formatCommand = function(v) {
    return function(v1) {
      if (v1 instanceof YearFull) {
        return padQuadrupleDigit(fromEnum7(year(v.value0)));
      }
      ;
      if (v1 instanceof YearTwoDigits) {
        return formatYearTwoDigits(fromEnum7(year(v.value0)));
      }
      ;
      if (v1 instanceof YearAbsolute) {
        return show5(fromEnum7(year(v.value0)));
      }
      ;
      if (v1 instanceof MonthFull) {
        return show14(month(v.value0));
      }
      ;
      if (v1 instanceof MonthShort) {
        return printShortMonth(month(v.value0));
      }
      ;
      if (v1 instanceof MonthTwoDigits) {
        return padSingleDigit(fromEnum1(month(v.value0)));
      }
      ;
      if (v1 instanceof DayOfMonthTwoDigits) {
        return padSingleDigit(fromEnum22(day(v.value0)));
      }
      ;
      if (v1 instanceof DayOfMonth) {
        return show5(fromEnum22(day(v.value0)));
      }
      ;
      if (v1 instanceof UnixTimestamp) {
        return show5(floor2(function(v2) {
          return v2 / 1e3;
        }(unwrap8(unInstant(fromDateTime(v))))));
      }
      ;
      if (v1 instanceof DayOfWeek) {
        return show5(fromEnum32(weekday(v.value0)));
      }
      ;
      if (v1 instanceof DayOfWeekName) {
        return show22(weekday(v.value0));
      }
      ;
      if (v1 instanceof DayOfWeekNameShort) {
        return take3(3)(show22(weekday(v.value0)));
      }
      ;
      if (v1 instanceof Hours24) {
        return padSingleDigit(fromEnum42(hour(v.value1)));
      }
      ;
      if (v1 instanceof Hours12) {
        return padSingleDigit(fix12(mod4(fromEnum42(hour(v.value1)))(12)));
      }
      ;
      if (v1 instanceof Meridiem) {
        var $621 = fromEnum42(hour(v.value1)) >= 12;
        if ($621) {
          return "PM";
        }
        ;
        return "AM";
      }
      ;
      if (v1 instanceof Minutes) {
        return show5(fromEnum52(minute(v.value1)));
      }
      ;
      if (v1 instanceof MinutesTwoDigits) {
        return padSingleDigit(fromEnum52(minute(v.value1)));
      }
      ;
      if (v1 instanceof Seconds) {
        return show5(fromEnum62(second2(v.value1)));
      }
      ;
      if (v1 instanceof SecondsTwoDigits) {
        return padSingleDigit(fromEnum62(second2(v.value1)));
      }
      ;
      if (v1 instanceof Milliseconds2) {
        return padDoubleDigit(fromEnum72(millisecond(v.value1)));
      }
      ;
      if (v1 instanceof MillisecondsShort) {
        return show5(function(v2) {
          return div1(v2)(100);
        }(fromEnum72(millisecond(v.value1))));
      }
      ;
      if (v1 instanceof MillisecondsTwoDigits) {
        return padSingleDigit(function(v2) {
          return div1(v2)(10);
        }(fromEnum72(millisecond(v.value1))));
      }
      ;
      if (v1 instanceof Placeholder) {
        return v1.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 169, column 38 - line 192, column 21): " + [v1.constructor.name]);
    };
  };
  var format = function(f) {
    return function(d) {
      return foldMap12(formatCommand(d))(f);
    };
  };
  var formatDateTime = function(pattern2) {
    return function(datetime) {
      return mapFlipped1(parseFormatString(pattern2))(function(v) {
        return format(v)(datetime);
      });
    };
  };

  // output/Conduit.Data.Log/index.js
  var identity16 = /* @__PURE__ */ identity(categoryFn);
  var fold4 = /* @__PURE__ */ fold(foldableArray)(monoidString);
  var Debug = /* @__PURE__ */ function() {
    function Debug2() {
    }
    ;
    Debug2.value = new Debug2();
    return Debug2;
  }();
  var Info = /* @__PURE__ */ function() {
    function Info2() {
    }
    ;
    Info2.value = new Info2();
    return Info2;
  }();
  var Warn = /* @__PURE__ */ function() {
    function Warn2() {
    }
    ;
    Warn2.value = new Warn2();
    return Warn2;
  }();
  var $$Error = /* @__PURE__ */ function() {
    function $$Error2() {
    }
    ;
    $$Error2.value = new $$Error2();
    return $$Error2;
  }();
  var reason = function(v) {
    return v.reason;
  };
  var mkLog = function(dictNow) {
    var Monad0 = dictNow.Monad0();
    var bind30 = bind(Monad0.Bind1());
    var nowDateTime3 = nowDateTime(dictNow);
    var pure30 = pure(Monad0.Applicative0());
    return function(logReason) {
      return function(inputMessage) {
        var formatTimestamp = function() {
          var $36 = either($$const("(Failed to assign time)"))(identity16);
          var $37 = formatDateTime("YYYY-DD-MM hh:mm:ss a");
          return function($38) {
            return $36($37($38));
          };
        }();
        return bind30(nowDateTime3)(function(now3) {
          var headerWith = function(start2) {
            return fold4(["[", start2, ": ", formatTimestamp(now3), "]\n", inputMessage]);
          };
          var formattedLog = headerWith(function() {
            if (logReason instanceof Debug) {
              return "DEBUG";
            }
            ;
            if (logReason instanceof Info) {
              return "INFO";
            }
            ;
            if (logReason instanceof Warn) {
              return "WARNING";
            }
            ;
            if (logReason instanceof $$Error) {
              return "ERROR";
            }
            ;
            throw new Error("Failed pattern match at Conduit.Data.Log (line 85, column 31 - line 89, column 23): " + [logReason.constructor.name]);
          }());
          return pure30({
            reason: logReason,
            timestamp: now3,
            message: formattedLog
          });
        });
      };
    };
  };
  var message2 = function(v) {
    return v.message;
  };

  // output/Conduit.Capability.LogMessages/index.js
  var logMessage = function(dict) {
    return dict.logMessage;
  };
  var log2 = function(dictLogMessages) {
    var composeKleisliFlipped6 = composeKleisliFlipped(dictLogMessages.Monad0().Bind1());
    var logMessage1 = logMessage(dictLogMessages);
    return function(dictNow) {
      var mkLog2 = mkLog(dictNow);
      return function(reason2) {
        return composeKleisliFlipped6(logMessage1)(mkLog2(reason2));
      };
    };
  };
  var logError = function(dictLogMessages) {
    var log1 = log2(dictLogMessages);
    return function(dictNow) {
      return log1(dictNow)($$Error.value);
    };
  };

  // output/Conduit.Store/index.js
  var Dev = /* @__PURE__ */ function() {
    function Dev2() {
    }
    ;
    Dev2.value = new Dev2();
    return Dev2;
  }();
  var Prod = /* @__PURE__ */ function() {
    function Prod2() {
    }
    ;
    Prod2.value = new Prod2();
    return Prod2;
  }();
  var LoginUser = /* @__PURE__ */ function() {
    function LoginUser2(value0) {
      this.value0 = value0;
    }
    ;
    LoginUser2.create = function(value0) {
      return new LoginUser2(value0);
    };
    return LoginUser2;
  }();
  var LogoutUser = /* @__PURE__ */ function() {
    function LogoutUser2() {
    }
    ;
    LogoutUser2.value = new LogoutUser2();
    return LogoutUser2;
  }();
  var reduce = function(store) {
    return function(v) {
      if (v instanceof LoginUser) {
        return {
          logLevel: store.logLevel,
          baseUrl: store.baseUrl,
          currentUser: new Just(v.value0)
        };
      }
      ;
      if (v instanceof LogoutUser) {
        return {
          logLevel: store.logLevel,
          baseUrl: store.baseUrl,
          currentUser: Nothing.value
        };
      }
      ;
      throw new Error("Failed pattern match at Conduit.Store (line 52, column 16 - line 57, column 36): " + [v.constructor.name]);
    };
  };

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork2 = function(dict) {
    return dict.fork;
  };

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  }();
  var unCoyoneda = function(f) {
    return function(v) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/DOM.HTML.Indexed.ButtonType/index.js
  var ButtonButton = /* @__PURE__ */ function() {
    function ButtonButton2() {
    }
    ;
    ButtonButton2.value = new ButtonButton2();
    return ButtonButton2;
  }();
  var ButtonSubmit = /* @__PURE__ */ function() {
    function ButtonSubmit2() {
    }
    ;
    ButtonSubmit2.value = new ButtonSubmit2();
    return ButtonSubmit2;
  }();
  var ButtonReset = /* @__PURE__ */ function() {
    function ButtonReset2() {
    }
    ;
    ButtonReset2.value = new ButtonReset2();
    return ButtonReset2;
  }();
  var renderButtonType = function(v) {
    if (v instanceof ButtonButton) {
      return "button";
    }
    ;
    if (v instanceof ButtonSubmit) {
      return "submit";
    }
    ;
    if (v instanceof ButtonReset) {
      return "reset";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 14, column 20 - line 17, column 25): " + [v.constructor.name]);
  };

  // output/DOM.HTML.Indexed.InputType/index.js
  var InputButton = /* @__PURE__ */ function() {
    function InputButton2() {
    }
    ;
    InputButton2.value = new InputButton2();
    return InputButton2;
  }();
  var InputCheckbox = /* @__PURE__ */ function() {
    function InputCheckbox2() {
    }
    ;
    InputCheckbox2.value = new InputCheckbox2();
    return InputCheckbox2;
  }();
  var InputColor = /* @__PURE__ */ function() {
    function InputColor2() {
    }
    ;
    InputColor2.value = new InputColor2();
    return InputColor2;
  }();
  var InputDate = /* @__PURE__ */ function() {
    function InputDate2() {
    }
    ;
    InputDate2.value = new InputDate2();
    return InputDate2;
  }();
  var InputDatetimeLocal = /* @__PURE__ */ function() {
    function InputDatetimeLocal2() {
    }
    ;
    InputDatetimeLocal2.value = new InputDatetimeLocal2();
    return InputDatetimeLocal2;
  }();
  var InputEmail = /* @__PURE__ */ function() {
    function InputEmail2() {
    }
    ;
    InputEmail2.value = new InputEmail2();
    return InputEmail2;
  }();
  var InputFile = /* @__PURE__ */ function() {
    function InputFile2() {
    }
    ;
    InputFile2.value = new InputFile2();
    return InputFile2;
  }();
  var InputHidden = /* @__PURE__ */ function() {
    function InputHidden2() {
    }
    ;
    InputHidden2.value = new InputHidden2();
    return InputHidden2;
  }();
  var InputImage = /* @__PURE__ */ function() {
    function InputImage2() {
    }
    ;
    InputImage2.value = new InputImage2();
    return InputImage2;
  }();
  var InputMonth = /* @__PURE__ */ function() {
    function InputMonth2() {
    }
    ;
    InputMonth2.value = new InputMonth2();
    return InputMonth2;
  }();
  var InputNumber = /* @__PURE__ */ function() {
    function InputNumber2() {
    }
    ;
    InputNumber2.value = new InputNumber2();
    return InputNumber2;
  }();
  var InputPassword = /* @__PURE__ */ function() {
    function InputPassword2() {
    }
    ;
    InputPassword2.value = new InputPassword2();
    return InputPassword2;
  }();
  var InputRadio = /* @__PURE__ */ function() {
    function InputRadio2() {
    }
    ;
    InputRadio2.value = new InputRadio2();
    return InputRadio2;
  }();
  var InputRange = /* @__PURE__ */ function() {
    function InputRange2() {
    }
    ;
    InputRange2.value = new InputRange2();
    return InputRange2;
  }();
  var InputReset = /* @__PURE__ */ function() {
    function InputReset2() {
    }
    ;
    InputReset2.value = new InputReset2();
    return InputReset2;
  }();
  var InputSearch = /* @__PURE__ */ function() {
    function InputSearch2() {
    }
    ;
    InputSearch2.value = new InputSearch2();
    return InputSearch2;
  }();
  var InputSubmit = /* @__PURE__ */ function() {
    function InputSubmit2() {
    }
    ;
    InputSubmit2.value = new InputSubmit2();
    return InputSubmit2;
  }();
  var InputTel = /* @__PURE__ */ function() {
    function InputTel2() {
    }
    ;
    InputTel2.value = new InputTel2();
    return InputTel2;
  }();
  var InputText = /* @__PURE__ */ function() {
    function InputText2() {
    }
    ;
    InputText2.value = new InputText2();
    return InputText2;
  }();
  var InputTime = /* @__PURE__ */ function() {
    function InputTime2() {
    }
    ;
    InputTime2.value = new InputTime2();
    return InputTime2;
  }();
  var InputUrl = /* @__PURE__ */ function() {
    function InputUrl2() {
    }
    ;
    InputUrl2.value = new InputUrl2();
    return InputUrl2;
  }();
  var InputWeek = /* @__PURE__ */ function() {
    function InputWeek2() {
    }
    ;
    InputWeek2.value = new InputWeek2();
    return InputWeek2;
  }();
  var renderInputType = function(v) {
    if (v instanceof InputButton) {
      return "button";
    }
    ;
    if (v instanceof InputCheckbox) {
      return "checkbox";
    }
    ;
    if (v instanceof InputColor) {
      return "color";
    }
    ;
    if (v instanceof InputDate) {
      return "date";
    }
    ;
    if (v instanceof InputDatetimeLocal) {
      return "datetime-local";
    }
    ;
    if (v instanceof InputEmail) {
      return "email";
    }
    ;
    if (v instanceof InputFile) {
      return "file";
    }
    ;
    if (v instanceof InputHidden) {
      return "hidden";
    }
    ;
    if (v instanceof InputImage) {
      return "image";
    }
    ;
    if (v instanceof InputMonth) {
      return "month";
    }
    ;
    if (v instanceof InputNumber) {
      return "number";
    }
    ;
    if (v instanceof InputPassword) {
      return "password";
    }
    ;
    if (v instanceof InputRadio) {
      return "radio";
    }
    ;
    if (v instanceof InputRange) {
      return "range";
    }
    ;
    if (v instanceof InputReset) {
      return "reset";
    }
    ;
    if (v instanceof InputSearch) {
      return "search";
    }
    ;
    if (v instanceof InputSubmit) {
      return "submit";
    }
    ;
    if (v instanceof InputTel) {
      return "tel";
    }
    ;
    if (v instanceof InputText) {
      return "text";
    }
    ;
    if (v instanceof InputTime) {
      return "time";
    }
    ;
    if (v instanceof InputUrl) {
      return "url";
    }
    ;
    if (v instanceof InputWeek) {
      return "week";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 33, column 19 - line 55, column 22): " + [v.constructor.name]);
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  }();
  var Action = /* @__PURE__ */ function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  }();
  var functorInput = {
    map: function(f) {
      return function(m) {
        if (m instanceof RefUpdate) {
          return new RefUpdate(m.value0, m.value1);
        }
        ;
        if (m instanceof Action) {
          return new Action(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Query.Input (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };

  // output/Halogen.VDom.Machine/index.js
  var Step = /* @__PURE__ */ function() {
    function Step3(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step3(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step3;
  }();
  var unStep = unsafeCoerce2;
  var step3 = function(v, a2) {
    return v.value2(v.value1, a2);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v) {
    return v.value3(v.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v) {
    return v.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map28 = /* @__PURE__ */ map(functorArray);
  var map110 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ function() {
    function Text2(value0) {
      this.value0 = value0;
    }
    ;
    Text2.create = function(value0) {
      return new Text2(value0);
    };
    return Text2;
  }();
  var Elem = /* @__PURE__ */ function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  }();
  var Keyed = /* @__PURE__ */ function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  }();
  var Widget = /* @__PURE__ */ function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  }();
  var Grafted = /* @__PURE__ */ function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  }();
  var Graft = /* @__PURE__ */ function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  }();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g) {
        return unGraft(function(v) {
          return graft(new Graft(function($63) {
            return f(v.value0($63));
          }, function($64) {
            return g(v.value1($64));
          }, v.value2));
        });
      };
    }
  };
  var bimap4 = /* @__PURE__ */ bimap(bifunctorGraft);
  var bifunctorVDom = {
    bimap: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Text) {
            return new Text(v2.value0);
          }
          ;
          if (v2 instanceof Grafted) {
            return new Grafted(bimap4(v)(v1)(v2.value0));
          }
          ;
          return new Grafted(graft(new Graft(v, v1, v2)));
        };
      };
    }
  };
  var runGraft = /* @__PURE__ */ unGraft(function(v) {
    var go2 = function(v2) {
      if (v2 instanceof Text) {
        return new Text(v2.value0);
      }
      ;
      if (v2 instanceof Elem) {
        return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map28(go2)(v2.value3));
      }
      ;
      if (v2 instanceof Keyed) {
        return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map28(map110(go2))(v2.value3));
      }
      ;
      if (v2 instanceof Widget) {
        return new Widget(v.value1(v2.value0));
      }
      ;
      if (v2 instanceof Grafted) {
        return new Grafted(bimap4(v.value0)(v.value1)(v2.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v2.constructor.name]);
    };
    return go2(v.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key2, obj) {
    return obj[key2];
  }
  function unsafeHasAny(key2, obj) {
    return obj.hasOwnProperty(key2);
  }
  function unsafeSetAny(key2, val, obj) {
    obj[key2] = val;
  }
  function forE2(a2, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a2.length; i2++) {
      b2.push(f(i2, a2[i2]));
    }
    return b2;
  }
  function forEachE(a2, f) {
    for (var i2 = 0; i2 < a2.length; i2++) {
      f(a2[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a2[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a2[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as3, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as3.length; i2++) {
      var a2 = as3[i2];
      var k = fk(a2);
      o[k] = f(k, i2, a2);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as3, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as3.length; i2++) {
      var a2 = as3[i2];
      var k = fk(a2);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a2);
      } else {
        o2[k] = f3(k, i2, a2);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a2, b2) {
    return a2 === b2;
  }
  function createTextNode(s, doc) {
    return doc.createTextNode(s);
  }
  function setTextContent(s, n) {
    n.textContent = s;
  }
  function createElement(ns, name16, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name16);
    } else {
      return doc.createElement(name16);
    }
  }
  function insertChildIx(i2, a2, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a2) {
      b2.insertBefore(a2, n);
    }
  }
  function removeChild(a2, b2) {
    if (b2 && a2.parentNode === b2) {
      b2.removeChild(a2);
    }
  }
  function parentNode(a2) {
    return a2.parentNode;
  }
  function setAttribute(ns, attr3, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr3, val);
    } else {
      el.setAttribute(attr3, val);
    }
  }
  function removeAttribute(ns, attr3, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns, attr3, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name16) {
    return function(doctype) {
      return doctype[name16];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Web.DOM.ParentNode/index.js
  var map29 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map29(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.DOM.Element/index.js
  var toNode2 = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy8 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var haltWidget = function(v) {
    return halt(v.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy8("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step3(state3.widget, vdom.value0);
        var res$prime = unStep(function(v) {
          return mkStep(new Step(v.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v) {
    var parent2 = parentNode(v.node);
    return removeChild(v.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy8("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forInE(v.children, function(v1, s) {
      return halt(s);
    });
    return halt(v.attrs);
  };
  var haltElem = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forEachE(v.children, halt);
    return halt(v.attrs);
  };
  var eqElemSpec = function(ns1, v, ns2, v1) {
    var $63 = v === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy8("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length(vdom.value3);
        var v1 = length(state3.children);
        if (v1 === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(ix4, s, v2) {
          var res = step3(s, v2);
          insertChildIx(ix4, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix4, v2) {
          var res = state3.build(v2);
          insertChildIx(ix4, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy8("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length(vdom.value3);
        if (state3.length === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(v2, ix$prime, s, v3) {
          var res = step3(s, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v2, ix4, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix4, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v
        };
        return mkStep(new Step(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v, build2, w) {
    var res = v.buildWidget(v)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step(v1.value0, {
        build: build2,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v, build2, s) {
    var node = createTextNode(s, v.document);
    var state3 = {
      build: build2,
      node,
      value: s
    };
    return mkStep(new Step(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v, build2, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(v1, ix4, v2) {
      var res = build2(v2.value1);
      insertChildIx(ix4, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build: build2,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length(ch1)
    };
    return mkStep(new Step(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v, build2, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(ix4, child) {
      var res = build2(child);
      insertChildIx(ix4, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build: build2,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy8("build", "Halogen.VDom.DOM", function() {
      return function(v) {
        if (v instanceof Text) {
          return buildText(spec, $lazy_build(59), v.value0);
        }
        ;
        if (v instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v.value0);
        }
        ;
        if (v instanceof Grafted) {
          return $lazy_build(63)(runGraft(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
      };
    });
    var build2 = $lazy_build(58);
    return build2;
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener2(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener2(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy9 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var map30 = /* @__PURE__ */ map(functorFn);
  var map111 = /* @__PURE__ */ map(functorMaybe);
  var Created = /* @__PURE__ */ function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  }();
  var Removed = /* @__PURE__ */ function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  }();
  var Attribute = /* @__PURE__ */ function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  }();
  var Property = /* @__PURE__ */ function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  }();
  var Handler = /* @__PURE__ */ function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  }();
  var Ref = /* @__PURE__ */ function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  }();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key2, el) {
    var v = hasAttribute(nullImpl, key2, el);
    if (v) {
      return removeAttribute(nullImpl, key2, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key2, el));
    if (v1 === "string") {
      return unsafeSetAny(key2, "", el);
    }
    ;
    if (key2 === "rowSpan") {
      return unsafeSetAny(key2, 1, el);
    }
    ;
    if (key2 === "colSpan") {
      return unsafeSetAny(key2, 1, el);
    }
    ;
    return unsafeSetAny(key2, jsUndefined, el);
  };
  var propToStrKey = function(v) {
    if (v instanceof Attribute && v.value0 instanceof Just) {
      return "attr/" + (v.value0.value0 + (":" + v.value1));
    }
    ;
    if (v instanceof Attribute) {
      return "attr/:" + v.value1;
    }
    ;
    if (v instanceof Property) {
      return "prop/" + v.value0;
    }
    ;
    if (v instanceof Handler) {
      return "handler/" + v.value0;
    }
    ;
    if (v instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var propFromInt = unsafeCoerce2;
  var propFromBoolean = unsafeCoerce2;
  var functorProp = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Handler) {
          return new Handler(v1.value0, map30(map111(v))(v1.value1));
        }
        ;
        if (v1 instanceof Ref) {
          return new Ref(map30(map111(v))(v1.value0));
        }
        ;
        return v1;
      };
    }
  };
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v) {
        if (v instanceof Just) {
          return emit(v.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v = lookup2("ref")(state3.props);
        if (v instanceof Just && v.value0 instanceof Ref) {
          return mbEmit(v.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v, v1, v11, v2) {
          if (v11 instanceof Attribute && v2 instanceof Attribute) {
            var $66 = v11.value2 === v2.value2;
            if ($66) {
              return v2;
            }
            ;
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v11 instanceof Property && v2 instanceof Property) {
            var v4 = refEq2(v11.value1, v2.value1);
            if (v4) {
              return v2;
            }
            ;
            if (v2.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v2.value1);
              if ($75) {
                return v2;
              }
              ;
              setProperty(v2.value0, v2.value1, el);
              return v2;
            }
            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v11 instanceof Handler && v2 instanceof Handler) {
            var handler3 = unsafeLookup(v2.value0, prevEvents);
            write(v2.value1)(snd(handler3))();
            pokeMutMap(v2.value0, handler3, events);
            return v2;
          }
          ;
          return v2;
        };
      };
      var applyProp = function(events) {
        return function(v, v1, v2) {
          if (v2 instanceof Attribute) {
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v2 instanceof Property) {
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v2 instanceof Handler) {
            var v3 = unsafeGetAny(v2.value0, events);
            if (unsafeHasAny(v2.value0, events)) {
              write(v2.value1)(snd(v3))();
              return v2;
            }
            ;
            var ref3 = $$new(v2.value1)();
            var listener = eventListener(function(ev) {
              return function __do3() {
                var f$prime = read(ref3)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v2.value0, new Tuple(listener, ref3), events);
            addEventListener(v2.value0, listener, el);
            return v2;
          }
          ;
          if (v2 instanceof Ref) {
            mbEmit(v2.value0(new Created(el)));
            return v2;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v2.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy9("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var map31 = /* @__PURE__ */ map(functorArray);
  var map112 = /* @__PURE__ */ map(functorProp);
  var map210 = /* @__PURE__ */ map(functorInput);
  var bimap5 = /* @__PURE__ */ bimap(bifunctorVDom);
  var HTML = function(x) {
    return x;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text5 = function($29) {
    return HTML(Text.create($29));
  };
  var ref = function(f) {
    return new Ref(function($30) {
      return f(function(v) {
        if (v instanceof Created) {
          return new Just(v.value0);
        }
        ;
        if (v instanceof Removed) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Halogen.HTML.Core (line 109, column 21 - line 111, column 23): " + [v.constructor.name]);
      }($30));
    });
  };
  var prop3 = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v) {
      var $31 = Property.create(v);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var isPropInt = {
    toPropValue: propFromInt
  };
  var isPropInputType = {
    toPropValue: function($45) {
      return propFromString(renderInputType($45));
    }
  };
  var isPropButtonType = {
    toPropValue: function($50) {
      return propFromString(renderButtonType($50));
    }
  };
  var isPropBoolean = {
    toPropValue: propFromBoolean
  };
  var handler = /* @__PURE__ */ function() {
    return Handler.create;
  }();
  var element = function(ns) {
    return function(name16) {
      return function(props) {
        return function(children2) {
          return new Elem(ns, name16, props, children2);
        };
      };
    };
  };
  var bifunctorHTML = {
    bimap: function(f) {
      return function(g) {
        return function(v) {
          return bimap5(map31(map112(map210(g))))(f)(v);
        };
      };
    }
  };

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ function() {
    function Initialize10(value0) {
      this.value0 = value0;
    }
    ;
    Initialize10.create = function(value0) {
      return new Initialize10(value0);
    };
    return Initialize10;
  }();
  var Finalize = /* @__PURE__ */ function() {
    function Finalize2(value0) {
      this.value0 = value0;
    }
    ;
    Finalize2.create = function(value0) {
      return new Finalize2(value0);
    };
    return Finalize2;
  }();
  var Receive = /* @__PURE__ */ function() {
    function Receive14(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive14.create = function(value0) {
      return function(value1) {
        return new Receive14(value0, value1);
      };
    };
    return Receive14;
  }();
  var Action2 = /* @__PURE__ */ function() {
    function Action3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action3.create = function(value0) {
      return function(value1) {
        return new Action3(value0, value1);
      };
    };
    return Action3;
  }();
  var Query = /* @__PURE__ */ function() {
    function Query4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query4.create = function(value0) {
      return function(value1) {
        return new Query4(value0, value1);
      };
    };
    return Query4;
  }();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy10 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var Thunk = /* @__PURE__ */ function() {
    function Thunk2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Thunk2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Thunk2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Thunk2;
  }();
  var unsafeEqThunk = function(v, v1) {
    return refEq2(v.value0, v1.value0) && (refEq2(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var runThunk = function(v) {
    return v.value2(v.value3);
  };
  var mapThunk = function(k) {
    return function(v) {
      return new Thunk(v.value0, v.value1, function($51) {
        return k(v.value2($51));
      }, v.value3);
    };
  };
  var hoist2 = mapThunk;
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy10("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step3(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t)));
        return mkStep(new Step(extract2(vdom), {
          thunk: t,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft4 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map33 = /* @__PURE__ */ map(functorHalogenM);
  var lmap5 = /* @__PURE__ */ lmap(bifunctorHTML);
  var pure10 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup7 = /* @__PURE__ */ lookup5();
  var pop4 = /* @__PURE__ */ pop3();
  var insert7 = /* @__PURE__ */ insert6();
  var ComponentSlot = /* @__PURE__ */ function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  }();
  var ThunkSlot = /* @__PURE__ */ function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  }();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v) {
      if (v instanceof Initialize) {
        return voidLeft4(traverse_3(args.handleAction)(args.initialize))(v.value0);
      }
      ;
      if (v instanceof Finalize) {
        return voidLeft4(traverse_3(args.handleAction)(args.finalize))(v.value0);
      }
      ;
      if (v instanceof Receive) {
        return voidLeft4(traverse_3(args.handleAction)(args.receive(v.value0)))(v.value1);
      }
      ;
      if (v instanceof Action2) {
        return voidLeft4(args.handleAction(v.value0))(v.value1);
      }
      ;
      if (v instanceof Query) {
        return unCoyoneda(function(g) {
          var $45 = map33(maybe(v.value1(unit))(g));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce2;
  var mkComponent = unsafeCoerce2;
  var hoistSlot = function(dictFunctor) {
    return function(nat) {
      return function(v) {
        if (v instanceof ComponentSlot) {
          return unComponentSlot(function(slot7) {
            return new ComponentSlot(mkComponentSlot({
              get: slot7.get,
              pop: slot7.pop,
              set: slot7.set,
              input: slot7.input,
              output: slot7.output,
              component: hoist3(dictFunctor)(nat)(slot7.component)
            }));
          })(v.value0);
        }
        ;
        if (v instanceof ThunkSlot) {
          return new ThunkSlot(hoist2(lmap5(hoistSlot(dictFunctor)(nat)))(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Component (line 279, column 17 - line 284, column 53): " + [v.constructor.name]);
      };
    };
  };
  var hoist3 = function(dictFunctor) {
    var hoist1 = hoist(dictFunctor);
    return function(nat) {
      return unComponent(function(c) {
        return mkComponent({
          initialState: c.initialState,
          render: function() {
            var $47 = lmap5(hoistSlot(dictFunctor)(nat));
            return function($48) {
              return $47(c.render($48));
            };
          }(),
          "eval": function() {
            var $49 = hoist1(nat);
            return function($50) {
              return $49(c["eval"]($50));
            };
          }()
        });
      });
    };
  };
  var defaultEval = /* @__PURE__ */ function() {
    return {
      handleAction: $$const(pure10(unit)),
      handleQuery: $$const(pure10(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  }();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup7(dictIsSymbol);
      var pop12 = pop4(dictIsSymbol);
      var insert13 = insert7(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert13(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup23(label5)(p2),
                    pop: pop22(label5)(p2),
                    set: insert22(label5)(p2),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.Query/index.js
  var $$void6 = /* @__PURE__ */ $$void(functorHalogenM);
  var query2 = /* @__PURE__ */ query();
  var identity17 = /* @__PURE__ */ identity(categoryFn);
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var tell2 = function() {
    return function(dictIsSymbol) {
      var query1 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query1(dictOrd);
        return function(slot7) {
          return function(label5) {
            return function(req) {
              return $$void6(query22(slot7)(label5)(req(unit)));
            };
          };
        };
      };
    };
  };
  var request3 = function() {
    return function(dictIsSymbol) {
      var query1 = query2(dictIsSymbol);
      return function(dictOrd) {
        var query22 = query1(dictOrd);
        return function(slot7) {
          return function(label5) {
            return function(req) {
              return query22(slot7)(label5)(req(identity17));
            };
          };
        };
      };
    };
  };
  var mkTell = function(act3) {
    return act3(unit);
  };
  var getHTMLElementRef = /* @__PURE__ */ function() {
    var $24 = map(functorHalogenM)(function(v) {
      return bindFlipped8(fromElement)(v);
    });
    return function($25) {
      return $24(getRef($25));
    };
  }();

  // output/Halogen.Store.Select/index.js
  var unless2 = /* @__PURE__ */ unless(applicativeEffect);
  var Selector = function(x) {
    return x;
  };
  var selectEq = function(dictEq) {
    var eq11 = eq(dictEq);
    return function($14) {
      return Selector(function(v) {
        return {
          eq: eq11,
          select: v
        };
      }($14));
    };
  };
  var selectEmitter = function(v) {
    return function(emitter) {
      return makeEmitter(function(push2) {
        return function __do3() {
          var previousDerivedRef = $$new(Nothing.value)();
          var subscription = subscribe(emitter)(function(store) {
            return function __do4() {
              var previousDerived = read(previousDerivedRef)();
              var newDerived = v.select(store);
              var isUnchanged = maybe(false)(v.eq(newDerived))(previousDerived);
              return unless2(isUnchanged)(function __do5() {
                write(new Just(newDerived))(previousDerivedRef)();
                return push2(newDerived)();
              })();
            };
          })();
          return unsubscribe(subscription);
        };
      });
    };
  };

  // output/Halogen.Store.Monad/index.js
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure13 = /* @__PURE__ */ pure(applicativeAff);
  var map34 = /* @__PURE__ */ map(functorAff);
  var lift5 = /* @__PURE__ */ lift(monadTransHalogenM);
  var monadStoreT = function(dictMonad) {
    return monadReaderT(dictMonad);
  };
  var monadEffectStoreT = function(dictMonadEffect) {
    return monadEffectReader(dictMonadEffect);
  };
  var monadStoreStoreT = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var bind210 = bind(bindReaderT(Monad0.Bind1()));
    var ask2 = ask(monadAskReaderT(Monad0));
    var liftEffect12 = liftEffect(monadEffectReader(dictMonadEffect));
    var pure210 = pure(Monad0.Applicative0());
    var monadEffectStoreT1 = monadEffectStoreT(dictMonadEffect);
    return {
      getStore: bind210(ask2)(function(store) {
        return liftEffect12(read(store.value));
      }),
      updateStore: function(action2) {
        return bind210(ask2)(function(store) {
          return liftEffect12(function __do3() {
            var current = read(store.value)();
            var newStore = store.reducer(current)(action2);
            write(newStore)(store.value)();
            return notify(store.listener)(newStore)();
          });
        });
      },
      emitSelected: function(selector) {
        var $247 = selectEmitter(selector);
        return function($248) {
          return pure210($247(function(v) {
            return v.emitter;
          }($248)));
        };
      },
      MonadEffect0: function() {
        return monadEffectStoreT1;
      }
    };
  };
  var monadAffStoreT = function(dictMonadAff) {
    return monadAffReader(dictMonadAff);
  };
  var functorStoreT = function(dictFunctor) {
    return functorReaderT(dictFunctor);
  };
  var bindStoreT = function(dictBind) {
    return bindReaderT(dictBind);
  };
  var updateStore = function(dict) {
    return dict.updateStore;
  };
  var runAndEmitStoreT = function(dictMonad) {
    var hoist4 = hoist3(dictMonad.Bind1().Apply0().Functor0());
    return function(initialStore) {
      return function(reducer) {
        return function(component12) {
          return bind12(liftEffect3(function __do3() {
            var value18 = $$new(initialStore)();
            var v = create3();
            return {
              value: value18,
              emitter: v.emitter,
              listener: v.listener,
              reducer
            };
          }))(function(hs) {
            return pure13({
              emitter: hs.emitter,
              component: hoist4(function(v) {
                return runReaderT(v)(hs);
              })(component12)
            });
          });
        };
      };
    };
  };
  var runStoreT = function(dictMonad) {
    var runAndEmitStoreT1 = runAndEmitStoreT(dictMonad);
    return function(initialStore) {
      return function(reducer) {
        return function(component12) {
          return map34(function(v) {
            return v.component;
          })(runAndEmitStoreT1(initialStore)(reducer)(component12));
        };
      };
    };
  };
  var getStore = function(dict) {
    return dict.getStore;
  };
  var emitSelected = function(dict) {
    return dict.emitSelected;
  };
  var monadStoreHalogenM = function(dictMonadStore) {
    var MonadEffect0 = dictMonadStore.MonadEffect0();
    var lift92 = lift5(MonadEffect0.Monad0());
    var monadEffectHalogenM2 = monadEffectHalogenM(MonadEffect0);
    return {
      getStore: lift92(getStore(dictMonadStore)),
      updateStore: function() {
        var $251 = updateStore(dictMonadStore);
        return function($252) {
          return lift92($251($252));
        };
      }(),
      emitSelected: function() {
        var $253 = emitSelected(dictMonadStore);
        return function($254) {
          return lift92($253($254));
        };
      }(),
      MonadEffect0: function() {
        return monadEffectHalogenM2;
      }
    };
  };

  // output/Conduit.Api.Utils/index.js
  var rmap4 = /* @__PURE__ */ rmap(bifunctorEither);
  var map35 = /* @__PURE__ */ map(functorEither);
  var map113 = /* @__PURE__ */ map(functorMaybe);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var mkRequest2 = function(dictMonadAff) {
    var Monad0 = dictMonadAff.MonadEffect0().Monad0();
    var bind30 = bind(Monad0.Bind1());
    var liftAff2 = liftAff(dictMonadAff);
    var pure30 = pure(Monad0.Applicative0());
    return function(dictMonadStore) {
      var getStore3 = getStore(dictMonadStore);
      return function(opts) {
        return bind30(getStore3)(function(v) {
          return bind30(liftAff2(request2(defaultRequest2(v.baseUrl)(Nothing.value)(opts))))(function(response) {
            return pure30(hush(rmap4(function(v1) {
              return v1.body;
            })(response)));
          });
        });
      };
    };
  };
  var mkAuthRequest = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var Monad0 = MonadEffect0.Monad0();
    var bind30 = bind(Monad0.Bind1());
    var liftEffect10 = liftEffect(MonadEffect0);
    var liftAff2 = liftAff(dictMonadAff);
    var pure30 = pure(Monad0.Applicative0());
    return function(dictMonadStore) {
      var getStore3 = getStore(dictMonadStore);
      return function(opts) {
        return bind30(getStore3)(function(v) {
          return bind30(liftEffect10(readToken))(function(token) {
            return bind30(liftAff2(request2(defaultRequest2(v.baseUrl)(token)(opts))))(function(response) {
              return pure30(hush(map35(function(v1) {
                return v1.body;
              })(response)));
            });
          });
        });
      };
    };
  };
  var decode2 = function(dictLogMessages) {
    var Monad0 = dictLogMessages.Monad0();
    var applySecond2 = applySecond(Monad0.Bind1().Apply0());
    var logError2 = logError(dictLogMessages);
    var pure30 = pure(Monad0.Applicative0());
    return function(dictNow) {
      var logError1 = logError2(dictNow);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return applySecond2(logError1("Response malformed"))(pure30(Nothing.value));
          }
          ;
          if (v1 instanceof Just) {
            var v2 = decode(v)(v1.value0);
            if (v2 instanceof Left) {
              return applySecond2(logError1(printJsonDecodeError(v2.value0)))(pure30(Nothing.value));
            }
            ;
            if (v2 instanceof Right) {
              return pure30(new Just(v2.value0));
            }
            ;
            throw new Error("Failed pattern match at Conduit.Api.Utils (line 83, column 28 - line 85, column 41): " + [v2.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Conduit.Api.Utils (line 81, column 1 - line 81, column 89): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };
  var decodeWithUser = function(dictMonadEffect) {
    return function(dictMonadStore) {
      var getStore3 = getStore(dictMonadStore);
      return function(dictLogMessages) {
        var bind30 = bind(dictLogMessages.Monad0().Bind1());
        var decode1 = decode2(dictLogMessages);
        return function(dictNow) {
          var decode22 = decode1(dictNow);
          return function(codec5) {
            return function(json4) {
              return bind30(getStore3)(function(v) {
                return decode22(codec5(map113(function(v1) {
                  return v1.username;
                })(v.currentUser)))(json4);
              });
            };
          };
        };
      };
    };
  };
  var authenticate = function(dictMonadAff) {
    var liftEffect10 = liftEffect(dictMonadAff.MonadEffect0());
    return function(dictMonadStore) {
      var getStore3 = getStore(dictMonadStore);
      var updateStore3 = updateStore(dictMonadStore);
      return function(dictLogMessages) {
        var Monad0 = dictLogMessages.Monad0();
        var Bind1 = Monad0.Bind1();
        var bind30 = bind(Bind1);
        var applySecond2 = applySecond(Bind1.Apply0());
        var logError2 = logError(dictLogMessages);
        var pure30 = pure(Monad0.Applicative0());
        var discard18 = discard2(Bind1);
        return function(dictNow) {
          var logError1 = logError2(dictNow);
          return function(req) {
            return function(fields) {
              return bind30(getStore3)(function(v) {
                return bind30(req(v.baseUrl)(fields))(function(v1) {
                  if (v1 instanceof Left) {
                    return applySecond2(logError1(v1.value0))(pure30(Nothing.value));
                  }
                  ;
                  if (v1 instanceof Right) {
                    return discard18(liftEffect10(writeToken(v1.value0.value0)))(function() {
                      return discard18(updateStore3(new LoginUser(v1.value0.value1)))(function() {
                        return pure30(new Just(v1.value0.value1));
                      });
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at Conduit.Api.Utils (line 70, column 26 - line 76, column 26): " + [v1.constructor.name]);
                });
              });
            };
          };
        };
      };
    };
  };

  // output/Conduit.Capability.Navigate/index.js
  var lift6 = /* @__PURE__ */ lift(monadTransHalogenM);
  var navigate = function(dict) {
    return dict.navigate;
  };
  var logout = function(dict) {
    return dict.logout;
  };
  var navigateHalogenM = function(dictNavigate) {
    var lift1 = lift6(dictNavigate.Monad0());
    return {
      navigate: function() {
        var $9 = navigate(dictNavigate);
        return function($10) {
          return lift1($9($10));
        };
      }(),
      logout: lift1(logout(dictNavigate)),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };

  // output/Data.Decimal/foreign.js
  var import_decimal = __toESM(require_decimal(), 1);
  import_decimal.default.set({ precision: 30 });
  import_decimal.default.set({ modulo: import_decimal.default.EUCLID });
  var e = import_decimal.default.exp(1);
  var pi = new import_decimal.default("3.14159265358979323846264338327950288419716939937510582097494459230781640628620899");

  // output/Data.PreciseDate.Component/index.js
  var $runtime_lazy11 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var ordNanosecond = ordInt;
  var boundedNanosecond = {
    bottom: 0,
    top: 999999,
    Ord0: function() {
      return ordNanosecond;
    }
  };
  var boundedEnumNanosecond = {
    cardinality: 1e6,
    toEnum: function(n) {
      if (n >= 0 && n <= 999999) {
        return new Just(n);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.PreciseDate.Component (line 35, column 1 - line 40, column 30): " + [n.constructor.name]);
    },
    fromEnum: function(v) {
      return v;
    },
    Bounded0: function() {
      return boundedNanosecond;
    },
    Enum1: function() {
      return $lazy_enumNanosecond(0);
    }
  };
  var $lazy_enumNanosecond = /* @__PURE__ */ $runtime_lazy11("enumNanosecond", "Data.PreciseDate.Component", function() {
    return {
      succ: function() {
        var $15 = toEnum(boundedEnumNanosecond);
        var $16 = fromEnum(boundedEnumNanosecond);
        return function($17) {
          return $15(function(v) {
            return v + 1 | 0;
          }($16($17)));
        };
      }(),
      pred: function() {
        var $18 = toEnum(boundedEnumNanosecond);
        var $19 = fromEnum(boundedEnumNanosecond);
        return function($20) {
          return $18(function(v) {
            return v - 1 | 0;
          }($19($20)));
        };
      }(),
      Ord0: function() {
        return ordNanosecond;
      }
    };
  });

  // output/Data.PreciseDateTime.Internal/index.js
  var fromFoldable7 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var append12 = /* @__PURE__ */ append(semigroupList);
  var timeFormat = /* @__PURE__ */ function() {
    return fromFoldable7([Hours24.value, new Placeholder(":"), MinutesTwoDigits.value, new Placeholder(":"), SecondsTwoDigits.value]);
  }();
  var dropWhileEnd = function(p2) {
    return function(s) {
      var check2 = function(v) {
        return function(v1) {
          if (!v1.value0) {
            var $8 = p2(v);
            if ($8) {
              return v1;
            }
            ;
            return new Tuple(true, singleton6(v));
          }
          ;
          if (v1.value0) {
            return new Tuple(true, singleton6(v) + v1.value1);
          }
          ;
          throw new Error("Failed pattern match at Data.PreciseDateTime.Internal (line 37, column 3 - line 37, column 89): " + [v.constructor.name, v1.constructor.name]);
        };
      };
      return snd(foldr2(check2)(new Tuple(false, ""))(toCharArray(s)));
    };
  };
  var dateFormat = /* @__PURE__ */ function() {
    return fromFoldable7([YearFull.value, new Placeholder("-"), MonthTwoDigits.value, new Placeholder("-"), DayOfMonthTwoDigits.value]);
  }();
  var dateTimeFormatISO = /* @__PURE__ */ function() {
    return append12(dateFormat)(append12(pure(applicativeList)(new Placeholder("T")))(timeFormat));
  }();

  // output/Data.JSDate/foreign.js
  function toInstantImpl(just) {
    return function(nothing) {
      return function(date2) {
        var t = date2.getTime();
        return isNaN(t) ? nothing : just(t);
      };
    };
  }
  function parse10(dateString) {
    return function() {
      return new Date(dateString);
    };
  }

  // output/Data.JSDate/index.js
  var map36 = /* @__PURE__ */ map(functorFn);
  var map114 = /* @__PURE__ */ map(functorMaybe);
  var toInstant = /* @__PURE__ */ function() {
    return composeKleisliFlipped(bindMaybe)(function($21) {
      return instant(Milliseconds($21));
    })(toInstantImpl(Just.create)(Nothing.value));
  }();
  var toDateTime2 = /* @__PURE__ */ map36(/* @__PURE__ */ map114(toDateTime))(toInstant);

  // output/Data.RFC3339String/index.js
  var eq6 = /* @__PURE__ */ eq(eqChar);
  var RFC3339String = function(x) {
    return x;
  };
  var trim2 = function(v) {
    var withoutZulu = dropWhileEnd(eq6("Z"))(v);
    var withoutTrailingZeros = dropWhileEnd(eq6("0"))(withoutZulu);
    var withoutTrailingDot = dropWhileEnd(eq6("."))(withoutTrailingZeros);
    var $9 = withoutTrailingZeros === withoutTrailingDot;
    if ($9) {
      return withoutTrailingDot + "Z";
    }
    ;
    return withoutTrailingDot + ".0Z";
  };
  var toDateTime3 = /* @__PURE__ */ function() {
    var unsafeParse = function($11) {
      return unsafePerformEffect(parse10($11));
    };
    var $12 = unwrap();
    return function($13) {
      return toDateTime2(unsafeParse($12($13)));
    };
  }();

  // output/Data.PreciseDateTime/index.js
  var append9 = /* @__PURE__ */ append(semigroupString);
  var bind8 = /* @__PURE__ */ bind(bindMaybe);
  var pure11 = /* @__PURE__ */ pure(applicativeMaybe);
  var composeKleisli2 = /* @__PURE__ */ composeKleisli(bindMaybe);
  var alt9 = /* @__PURE__ */ alt(altMaybe);
  var toEnum5 = /* @__PURE__ */ toEnum(boundedEnumNanosecond);
  var unwrap9 = /* @__PURE__ */ unwrap();
  var fromEnum8 = /* @__PURE__ */ fromEnum(boundedEnumMillisecond);
  var PreciseDateTime = /* @__PURE__ */ function() {
    function PreciseDateTime2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    PreciseDateTime2.create = function(value0) {
      return function(value1) {
        return new PreciseDateTime2(value0, value1);
      };
    };
    return PreciseDateTime2;
  }();
  var toDateTimeLossy = function(v) {
    return v.value0;
  };
  var subsecondStringPadding = "000000000";
  var padString = function(padding) {
    return function(fn) {
      return function(string4) {
        return fn(string4)(drop3(length4(string4))(padding));
      };
    };
  };
  var padSubsecondString = /* @__PURE__ */ padString(subsecondStringPadding);
  var rightPadSubsecondString = /* @__PURE__ */ padSubsecondString(append9);
  var parseSubseconds = function(v) {
    var parts = split(".")(v);
    return bind8(index(parts)(1))(function(afterDot) {
      var digits = takeWhile2(function($94) {
        return isDecDigit(codePointFromChar($94));
      })(afterDot);
      return pure11(rightPadSubsecondString(take2(9)(digits)));
    });
  };
  var nanosecond = function(rfcString) {
    var nanoseconds = composeKleisli2(parseSubseconds)(function() {
      var $95 = drop3(3);
      return function($96) {
        return fromString($95($96));
      };
    }());
    return bind8(alt9(nanoseconds(rfcString))(new Just(0)))(toEnum5);
  };
  var nanoStringPadding = "000000";
  var padNanoString = /* @__PURE__ */ padString(nanoStringPadding);
  var milliStringPadding = "000";
  var padMilliString = /* @__PURE__ */ padString(milliStringPadding);
  var leftPadNanoString = /* @__PURE__ */ padNanoString(/* @__PURE__ */ flip(append9));
  var leftPadMilliString = /* @__PURE__ */ padMilliString(/* @__PURE__ */ flip(append9));
  var toRFC3339String = function(v) {
    var nanos = toStringAs(decimal)(unwrap9(v.value1));
    var millis = toStringAs(decimal)(fromEnum8(millisecond(time(v.value0))));
    var leftPaddedNs = leftPadNanoString(nanos);
    var leftPaddedMs = leftPadMilliString(millis);
    var beforeDot = format(dateTimeFormatISO)(v.value0);
    return trim2(RFC3339String(beforeDot + ("." + (leftPaddedMs + (leftPaddedNs + "Z")))));
  };
  var fromRFC3339String = function(rfcString) {
    return bind8(toDateTime3(rfcString))(function(dateTime3) {
      return bind8(nanosecond(rfcString))(function(ns) {
        return pure11(new PreciseDateTime(dateTime3, ns));
      });
    });
  };

  // output/Conduit.Data.PreciseDateTime/index.js
  var fromFoldable8 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var toDisplayWeekName = /* @__PURE__ */ function() {
    var dateFormatter = fromFoldable8([DayOfWeekNameShort.value, new Placeholder(" "), MonthShort.value, new Placeholder(" "), DayOfMonth.value, new Placeholder(", "), YearFull.value]);
    var $4 = format(dateFormatter);
    return function($5) {
      return $4(toDateTimeLossy($5));
    };
  }();
  var toDisplayMonthDayYear = /* @__PURE__ */ function() {
    var dateFormatter = fromFoldable8([MonthFull.value, new Placeholder(" "), DayOfMonth.value, new Placeholder(", "), YearFull.value]);
    var $6 = format(dateFormatter);
    return function($7) {
      return $6(toDateTimeLossy($7));
    };
  }();
  var codec4 = /* @__PURE__ */ function() {
    var to2 = function() {
      var $8 = unwrap();
      return function($9) {
        return $8(toRFC3339String($9));
      };
    }();
    var from4 = function($10) {
      return fromRFC3339String(RFC3339String($10));
    };
    return prismaticCodec("PreciseDateTime")(from4)(to2)(string);
  }();

  // output/Data.Codec.Argonaut.Migration/index.js
  var pure14 = /* @__PURE__ */ pure(applicativeEither);
  var identity18 = /* @__PURE__ */ identity(categoryFn);
  var renameField = function(oldName) {
    return function(newName) {
      var rename = function(obj) {
        return maybe(obj)(uncurry(insert(newName)))(pop(oldName)(obj));
      };
      var dec = function(j) {
        return caseJsonObject(j)(function($16) {
          return id(rename($16));
        })(j);
      };
      return basicCodec(function($17) {
        return pure14(dec($17));
      })(identity18);
    };
  };

  // output/Conduit.Data.Article/index.js
  var object5 = /* @__PURE__ */ object2();
  var rowListCodecCons4 = /* @__PURE__ */ rowListCodecCons(rowListCodecNil)()();
  var rowListCodecCons12 = /* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons4({
    reflectSymbol: function() {
      return "title";
    }
  })(refl))()()({
    reflectSymbol: function() {
      return "tagList";
    }
  })(refl))()();
  var descriptionIsSymbol = {
    reflectSymbol: function() {
      return "description";
    }
  };
  var bodyIsSymbol = {
    reflectSymbol: function() {
      return "body";
    }
  };
  var object13 = /* @__PURE__ */ object5(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons12({
    reflectSymbol: function() {
      return "slug";
    }
  })(refl))()()({
    reflectSymbol: function() {
      return "favoritesCount";
    }
  })(refl))()()({
    reflectSymbol: function() {
      return "favorited";
    }
  })(refl))()()(descriptionIsSymbol)(refl))()()({
    reflectSymbol: function() {
      return "createdAt";
    }
  })(refl))()()(bodyIsSymbol)(refl))()()({
    reflectSymbol: function() {
      return "author";
    }
  })(refl));
  var object23 = /* @__PURE__ */ object5(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons4({
    reflectSymbol: function() {
      return "total";
    }
  })(refl))()()(bodyIsSymbol)(refl));
  var composeCodecFlipped2 = /* @__PURE__ */ composeCodecFlipped(bindEither);
  var articleWithMetadataCodec = function(mbUsername) {
    return object13("ArticleWithMetadata")({
      title: string,
      body: string,
      description: string,
      tagList: array(string),
      slug: prismaticCodec("Slug")(parse3)(toString4)(string),
      createdAt: codec4,
      favorited: $$boolean,
      favoritesCount: $$int,
      author: authorCodec(mbUsername)
    });
  };
  var articlesWithMetadataCodec = function(mbUsername) {
    var codec5 = object23("PaginatedArray ArticleWithMetadata")({
      body: array(articleWithMetadataCodec(mbUsername)),
      total: $$int
    });
    return composeCodecFlipped2(renameField("articles")("body"))(composeCodecFlipped2(renameField("articlesCount")("total"))(codec5));
  };
  var articleCodec = /* @__PURE__ */ object5(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons12(descriptionIsSymbol)(refl))()()(bodyIsSymbol)(refl))("Article")({
    title: string,
    body: string,
    description: string,
    tagList: /* @__PURE__ */ array(string)
  });

  // output/Conduit.Data.Comment/index.js
  var object6 = /* @__PURE__ */ object2();
  var rowListCodecCons5 = /* @__PURE__ */ rowListCodecCons(rowListCodecNil)()();
  var bodyIsSymbol2 = {
    reflectSymbol: function() {
      return "body";
    }
  };
  var object14 = /* @__PURE__ */ object6(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons(/* @__PURE__ */ rowListCodecCons5({
    reflectSymbol: function() {
      return "id";
    }
  })(refl))()()({
    reflectSymbol: function() {
      return "createdAt";
    }
  })(refl))()()(bodyIsSymbol2)(refl))()()({
    reflectSymbol: function() {
      return "author";
    }
  })(refl));
  var wrapIso2 = /* @__PURE__ */ wrapIso(/* @__PURE__ */ profunctorGCodec(/* @__PURE__ */ functorReaderT(functorEither))(/* @__PURE__ */ functorWriterT(functorIdentity)))();
  var CommentId = function(x) {
    return x;
  };
  var commentWithMetadataCodec = function(mbUsername) {
    return object14("CommentWithMetadata")({
      id: wrapIso2(CommentId)($$int),
      createdAt: codec4,
      body: string,
      author: authorCodec(mbUsername)
    });
  };
  var commentCodec = /* @__PURE__ */ object6(/* @__PURE__ */ rowListCodecCons5(bodyIsSymbol2)(refl))("Comment")({
    body: string
  });

  // output/Effect.Console/foreign.js
  var log3 = function(s) {
    return function() {
      console.log(s);
    };
  };
  var warn = function(s) {
    return function() {
      console.warn(s);
    };
  };

  // output/Effect.Now/foreign.js
  function now2() {
    return Date.now();
  }

  // output/Effect.Now/index.js
  var map37 = /* @__PURE__ */ map(functorEffect);
  var nowTime = /* @__PURE__ */ map37(function($2) {
    return time(toDateTime($2));
  })(now2);
  var nowDateTime2 = /* @__PURE__ */ map37(toDateTime)(now2);
  var nowDate = /* @__PURE__ */ map37(function($3) {
    return date(toDateTime($3));
  })(now2);

  // output/Web.HTML.Event.HashChangeEvent.EventTypes/index.js
  var hashchange = "hashchange";

  // output/Routing.Hash/index.js
  var bind9 = /* @__PURE__ */ bind(bindEffect);
  var map38 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped9 = /* @__PURE__ */ bindFlipped(bindEffect);
  var join3 = /* @__PURE__ */ join(bindEffect);
  var apply5 = /* @__PURE__ */ apply(applyEffect);
  var pure15 = /* @__PURE__ */ pure(applicativeEffect);
  var voidRight2 = /* @__PURE__ */ voidRight(functorEffect);
  var setHash2 = function(h) {
    return bind9(bind9(windowImpl)(location))(setHash(h));
  };
  var getHash = /* @__PURE__ */ bind9(/* @__PURE__ */ bind9(windowImpl)(location))(/* @__PURE__ */ function() {
    var $16 = map38(function() {
      var $18 = fromMaybe("");
      var $19 = stripPrefix("#");
      return function($20) {
        return $18($19($20));
      };
    }());
    return function($17) {
      return $16(hash($17));
    };
  }());
  var foldHashes = function(cb) {
    return function(init4) {
      return function __do3() {
        var ref3 = bindFlipped9($$new)(bindFlipped9(init4)(getHash))();
        var win = map38(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return bindFlipped9(flip(write)(ref3))(join3(apply5(map38(cb)(read(ref3)))(getHash)));
        })();
        addEventListener2(hashchange)(listener)(false)(win)();
        return removeEventListener2(hashchange)(listener)(false)(win);
      };
    };
  };
  var matchesWith = function(dictFoldable) {
    var indexl2 = indexl(dictFoldable);
    return function(parser2) {
      return function(cb) {
        var go2 = function(a2) {
          var $21 = maybe(pure15(a2))(function(b2) {
            return voidRight2(new Just(b2))(cb(a2)(b2));
          });
          var $22 = indexl2(0);
          return function($23) {
            return $21($22(parser2($23)));
          };
        };
        return foldHashes(go2)(go2(Nothing.value));
      };
    };
  };

  // output/Conduit.AppM/index.js
  var $runtime_lazy12 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var runStoreT2 = /* @__PURE__ */ runStoreT(monadAff);
  var coerce5 = /* @__PURE__ */ coerce();
  var pure16 = /* @__PURE__ */ pure(applicativeEffect);
  var map39 = /* @__PURE__ */ map(functorMaybe);
  var object7 = /* @__PURE__ */ object2();
  var rowListCodecCons6 = /* @__PURE__ */ rowListCodecCons(rowListCodecNil)()();
  var object15 = /* @__PURE__ */ object7(/* @__PURE__ */ rowListCodecCons6({
    reflectSymbol: function() {
      return "article";
    }
  })(refl));
  var object24 = /* @__PURE__ */ object7(/* @__PURE__ */ rowListCodecCons6({
    reflectSymbol: function() {
      return "comments";
    }
  })(refl));
  var object32 = /* @__PURE__ */ object7(/* @__PURE__ */ rowListCodecCons6({
    reflectSymbol: function() {
      return "comment";
    }
  })(refl));
  var object42 = /* @__PURE__ */ object7(/* @__PURE__ */ rowListCodecCons6({
    reflectSymbol: function() {
      return "tags";
    }
  })(refl));
  var object52 = /* @__PURE__ */ object7(/* @__PURE__ */ rowListCodecCons6({
    reflectSymbol: function() {
      return "user";
    }
  })(refl));
  var object62 = /* @__PURE__ */ object7(/* @__PURE__ */ rowListCodecCons6({
    reflectSymbol: function() {
      return "profile";
    }
  })(refl));
  var runAppM = function(store) {
    var $86 = runStoreT2(store)(reduce);
    return function($87) {
      return $86(coerce5($87));
    };
  };
  var monadStoreAppM = /* @__PURE__ */ monadStoreStoreT(monadEffectAff);
  var getStore2 = /* @__PURE__ */ getStore(monadStoreAppM);
  var updateStore2 = /* @__PURE__ */ updateStore(monadStoreAppM);
  var monadEffectAppM = /* @__PURE__ */ monadEffectStoreT(monadEffectAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAppM);
  var monadAppM = /* @__PURE__ */ monadStoreT(monadAff);
  var nowAppM = {
    now: /* @__PURE__ */ liftEffect4(now2),
    nowDate: /* @__PURE__ */ liftEffect4(nowDate),
    nowTime: /* @__PURE__ */ liftEffect4(nowTime),
    nowDateTime: /* @__PURE__ */ liftEffect4(nowDateTime2),
    Monad0: function() {
      return monadAppM;
    }
  };
  var monadAffAppM = /* @__PURE__ */ monadAffStoreT(monadAffAff);
  var mkRequest3 = /* @__PURE__ */ mkRequest2(monadAffAppM)(monadStoreAppM);
  var mkAuthRequest2 = /* @__PURE__ */ mkAuthRequest(monadAffAppM)(monadStoreAppM);
  var functorAppM = /* @__PURE__ */ functorStoreT(functorAff);
  var map115 = /* @__PURE__ */ map(functorAppM);
  var $$void7 = /* @__PURE__ */ $$void(functorAppM);
  var bindAppM = /* @__PURE__ */ bindStoreT(bindAff);
  var bind10 = /* @__PURE__ */ bind(bindAppM);
  var discard3 = /* @__PURE__ */ discard(discardUnit)(bindAppM);
  var logMessagesAppM = {
    logMessage: function(log4) {
      return bind10(getStore2)(function(v) {
        return liftEffect4(function() {
          var v1 = reason(log4);
          if (v.logLevel instanceof Prod && v1 instanceof Debug) {
            return pure16(unit);
          }
          ;
          return log3(message2(log4));
        }());
      });
    },
    Monad0: function() {
      return monadAppM;
    }
  };
  var decodeWithUser2 = /* @__PURE__ */ decodeWithUser(monadEffectAppM)(monadStoreAppM)(logMessagesAppM)(nowAppM);
  var decode3 = /* @__PURE__ */ decode2(logMessagesAppM)(nowAppM);
  var authenticate2 = /* @__PURE__ */ authenticate(monadAffAppM)(monadStoreAppM)(logMessagesAppM)(nowAppM);
  var manageArticleAppM = {
    getArticle: function(slug2) {
      return bind10(mkRequest3({
        endpoint: new Article(slug2),
        method: Get.value
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.article;
        }))(decodeWithUser2(function(u2) {
          return object15("Article")({
            article: articleWithMetadataCodec(u2)
          });
        })(mbJson));
      });
    },
    getArticles: function(fields) {
      return bind10(mkRequest3({
        endpoint: new Articles(fields),
        method: Get.value
      }))(decodeWithUser2(articlesWithMetadataCodec));
    },
    createArticle: function(article2) {
      var codec5 = object15("Article")({
        article: articleCodec
      });
      var method2 = new Post(new Just(encode4(codec5)({
        article: article2
      })));
      return bind10(mkAuthRequest2({
        endpoint: new Articles(noArticleParams),
        method: method2
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.article;
        }))(decodeWithUser2(function(u2) {
          return object15("Article")({
            article: articleWithMetadataCodec(u2)
          });
        })(mbJson));
      });
    },
    updateArticle: function(slug2) {
      return function(article2) {
        var codec5 = object15("Article")({
          article: articleCodec
        });
        var method2 = new Put(new Just(encode4(codec5)({
          article: article2
        })));
        return bind10(mkAuthRequest2({
          endpoint: new Article(slug2),
          method: method2
        }))(function(mbJson) {
          return map115(map39(function(v) {
            return v.article;
          }))(decodeWithUser2(function(u2) {
            return object15("Article")({
              article: articleWithMetadataCodec(u2)
            });
          })(mbJson));
        });
      };
    },
    deleteArticle: function(slug2) {
      return $$void7(mkAuthRequest2({
        endpoint: new Article(slug2),
        method: Delete.value
      }));
    },
    favoriteArticle: function(slug2) {
      return bind10(mkAuthRequest2({
        endpoint: new Favorite(slug2),
        method: new Post(Nothing.value)
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.article;
        }))(decodeWithUser2(function(u2) {
          return object15("Article")({
            article: articleWithMetadataCodec(u2)
          });
        })(mbJson));
      });
    },
    unfavoriteArticle: function(slug2) {
      return bind10(mkAuthRequest2({
        endpoint: new Favorite(slug2),
        method: Delete.value
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.article;
        }))(decodeWithUser2(function(u2) {
          return object15("Article")({
            article: articleWithMetadataCodec(u2)
          });
        })(mbJson));
      });
    },
    getCurrentUserFeed: function(params2) {
      return bind10(mkAuthRequest2({
        endpoint: new Feed(params2),
        method: Get.value
      }))(decodeWithUser2(articlesWithMetadataCodec));
    },
    Monad0: function() {
      return monadAppM;
    }
  };
  var manageCommentAppM = {
    getComments: function(slug2) {
      return bind10(mkRequest3({
        endpoint: new Comments(slug2),
        method: Get.value
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.comments;
        }))(decodeWithUser2(function(u2) {
          return object24("Comments")({
            comments: array(commentWithMetadataCodec(u2))
          });
        })(mbJson));
      });
    },
    createComment: function(slug2) {
      return function(comment) {
        var codec5 = object32("Comment")({
          comment: commentCodec
        });
        var method2 = new Post(new Just(encode4(codec5)({
          comment
        })));
        return bind10(mkAuthRequest2({
          endpoint: new Comments(slug2),
          method: method2
        }))(function(mbJson) {
          return map115(map39(function(v) {
            return v.comment;
          }))(decodeWithUser2(function(u2) {
            return object32("Comment")({
              comment: commentWithMetadataCodec(u2)
            });
          })(mbJson));
        });
      };
    },
    deleteComment: function(slug2) {
      return function(id3) {
        return $$void7(mkAuthRequest2({
          endpoint: new Comment(slug2, id3),
          method: Delete.value
        }));
      };
    },
    Monad0: function() {
      return monadAppM;
    }
  };
  var manageTagAppM = /* @__PURE__ */ function() {
    return {
      getAllTags: bind10(mkRequest3({
        endpoint: Tags.value,
        method: Get.value
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.tags;
        }))(decode3(object42("Tags")({
          tags: array(string)
        }))(mbJson));
      }),
      Monad0: function() {
        return monadAppM;
      }
    };
  }();
  var manageUserAppM = /* @__PURE__ */ function() {
    return {
      loginUser: authenticate2(login(monadAffAppM)),
      registerUser: authenticate2(register(monadAffAppM)),
      getCurrentUser: bind10(mkAuthRequest2({
        endpoint: User.value,
        method: Get.value
      }))(function(mbJson) {
        return map115(map39(function(v) {
          return v.user;
        }))(decode3(object52("User")({
          user: profileWithEmailCodec
        }))(mbJson));
      }),
      getAuthor: function(username) {
        return bind10(mkRequest3({
          endpoint: new Profiles(username),
          method: Get.value
        }))(function(mbJson) {
          return map115(map39(function(v) {
            return v.profile;
          }))(decodeWithUser2(function(u2) {
            return object62("Profile")({
              profile: authorCodec(u2)
            });
          })(mbJson));
        });
      },
      updateUser: function(user) {
        var codec5 = object52("User")({
          user: profileWithEmailPasswordCodec
        });
        var method2 = new Put(new Just(encode4(codec5)({
          user
        })));
        return $$void7(mkAuthRequest2({
          endpoint: User.value,
          method: method2
        }));
      },
      followUser: function(username) {
        return bind10(mkAuthRequest2({
          endpoint: new Follow(username),
          method: new Post(Nothing.value)
        }))(function(mbJson) {
          return map115(map39(function(v) {
            return v.profile;
          }))(decodeWithUser2(function(u2) {
            return object62("Profile")({
              profile: authorCodec(u2)
            });
          })(mbJson));
        });
      },
      unfollowUser: function(username) {
        return bind10(mkAuthRequest2({
          endpoint: new Follow(username),
          method: Delete.value
        }))(function(mbJson) {
          return map115(map39(function(v) {
            return v.profile;
          }))(decodeWithUser2(function(u2) {
            return object62("Profile")({
              profile: authorCodec(u2)
            });
          })(mbJson));
        });
      },
      Monad0: function() {
        return monadAppM;
      }
    };
  }();
  var $lazy_navigateAppM = /* @__PURE__ */ $runtime_lazy12("navigateAppM", "Conduit.AppM", function() {
    return {
      navigate: function() {
        var $88 = print2(routeCodec);
        return function($89) {
          return liftEffect4(setHash2($88($89)));
        };
      }(),
      logout: discard3(liftEffect4(removeToken))(function() {
        return discard3(updateStore2(LogoutUser.value))(function() {
          return navigate($lazy_navigateAppM(0))(Home.value);
        });
      }),
      Monad0: function() {
        return monadAppM;
      }
    };
  });
  var navigateAppM = /* @__PURE__ */ $lazy_navigateAppM(153);

  // output/Conduit.Capability.Resource.Article/index.js
  var lift7 = /* @__PURE__ */ lift(monadTransHalogenM);
  var updateArticle = function(dict) {
    return dict.updateArticle;
  };
  var unfavoriteArticle = function(dict) {
    return dict.unfavoriteArticle;
  };
  var getCurrentUserFeed = function(dict) {
    return dict.getCurrentUserFeed;
  };
  var getArticles = function(dict) {
    return dict.getArticles;
  };
  var getArticle = function(dict) {
    return dict.getArticle;
  };
  var favoriteArticle = function(dict) {
    return dict.favoriteArticle;
  };
  var deleteArticle = function(dict) {
    return dict.deleteArticle;
  };
  var createArticle = function(dict) {
    return dict.createArticle;
  };
  var manageArticleHalogenM = function(dictManageArticle) {
    var lift1 = lift7(dictManageArticle.Monad0());
    var updateArticle1 = updateArticle(dictManageArticle);
    return {
      getArticle: function() {
        var $21 = getArticle(dictManageArticle);
        return function($22) {
          return lift1($21($22));
        };
      }(),
      getArticles: function() {
        var $23 = getArticles(dictManageArticle);
        return function($24) {
          return lift1($23($24));
        };
      }(),
      createArticle: function() {
        var $25 = createArticle(dictManageArticle);
        return function($26) {
          return lift1($25($26));
        };
      }(),
      updateArticle: function(s) {
        var $27 = updateArticle1(s);
        return function($28) {
          return lift1($27($28));
        };
      },
      deleteArticle: function() {
        var $29 = deleteArticle(dictManageArticle);
        return function($30) {
          return lift1($29($30));
        };
      }(),
      favoriteArticle: function() {
        var $31 = favoriteArticle(dictManageArticle);
        return function($32) {
          return lift1($31($32));
        };
      }(),
      unfavoriteArticle: function() {
        var $33 = unfavoriteArticle(dictManageArticle);
        return function($34) {
          return lift1($33($34));
        };
      }(),
      getCurrentUserFeed: function() {
        var $35 = getCurrentUserFeed(dictManageArticle);
        return function($36) {
          return lift1($35($36));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };

  // output/Halogen.HTML.Properties/index.js
  var unwrap10 = /* @__PURE__ */ unwrap();
  var ref2 = /* @__PURE__ */ function() {
    var go2 = function(p2) {
      return function(mel) {
        return new Just(new RefUpdate(p2, mel));
      };
    };
    return function($29) {
      return ref(go2($29));
    };
  }();
  var prop4 = function(dictIsProp) {
    return prop3(dictIsProp);
  };
  var prop1 = /* @__PURE__ */ prop4(isPropBoolean);
  var prop22 = /* @__PURE__ */ prop4(isPropString);
  var prop32 = /* @__PURE__ */ prop4(isPropInt);
  var rows4 = /* @__PURE__ */ prop32("rows");
  var src9 = /* @__PURE__ */ prop22("src");
  var type_17 = function(dictIsProp) {
    return prop4(dictIsProp)("type");
  };
  var value13 = function(dictIsProp) {
    return prop4(dictIsProp)("value");
  };
  var placeholder3 = /* @__PURE__ */ prop22("placeholder");
  var href4 = /* @__PURE__ */ prop22("href");
  var disabled10 = /* @__PURE__ */ prop1("disabled");
  var enabled = /* @__PURE__ */ function() {
    var $30 = not(heytingAlgebraBoolean);
    return function($31) {
      return disabled10($30($31));
    };
  }();
  var class_ = /* @__PURE__ */ function() {
    var $36 = prop22("className");
    return function($37) {
      return $36(unwrap10($37));
    };
  }();
  var alt10 = /* @__PURE__ */ prop22("alt");

  // output/Conduit.Component.HTML.Utils/index.js
  var whenElem = function(cond) {
    return function(f) {
      if (cond) {
        return f(unit);
      }
      ;
      return text5("");
    };
  };
  var safeHref = /* @__PURE__ */ function() {
    var $8 = append(semigroupString)("#");
    var $9 = print2(routeCodec);
    return function($10) {
      return href4($8($9($10)));
    };
  }();
  var maybeElem = function(v) {
    return function(v1) {
      if (v instanceof Just) {
        return v1(v.value0);
      }
      ;
      return text5("");
    };
  };
  var css = function($11) {
    return class_(ClassName($11));
  };

  // output/Halogen.HTML.Elements/index.js
  var element2 = /* @__PURE__ */ function() {
    return element(Nothing.value);
  }();
  var fieldset = /* @__PURE__ */ element2("fieldset");
  var fieldset_ = /* @__PURE__ */ fieldset([]);
  var footer = /* @__PURE__ */ element2("footer");
  var footer_ = /* @__PURE__ */ footer([]);
  var form = /* @__PURE__ */ element2("form");
  var h1 = /* @__PURE__ */ element2("h1");
  var h1_ = /* @__PURE__ */ h1([]);
  var h4 = /* @__PURE__ */ element2("h4");
  var h4_ = /* @__PURE__ */ h4([]);
  var hr = function(props) {
    return element2("hr")(props)([]);
  };
  var hr_ = /* @__PURE__ */ hr([]);
  var i = /* @__PURE__ */ element2("i");
  var img = function(props) {
    return element2("img")(props)([]);
  };
  var input = function(props) {
    return element2("input")(props)([]);
  };
  var li = /* @__PURE__ */ element2("li");
  var nav = /* @__PURE__ */ element2("nav");
  var p = /* @__PURE__ */ element2("p");
  var p_ = /* @__PURE__ */ p([]);
  var span4 = /* @__PURE__ */ element2("span");
  var span_ = /* @__PURE__ */ span4([]);
  var textarea = function(es) {
    return element2("textarea")(es)([]);
  };
  var ul = /* @__PURE__ */ element2("ul");
  var div3 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div3([]);
  var button = /* @__PURE__ */ element2("button");
  var a = /* @__PURE__ */ element2("a");

  // output/Conduit.Component.HTML.Header/index.js
  var guard4 = /* @__PURE__ */ guard(monoidString);
  var eq7 = /* @__PURE__ */ eq(eqRoute);
  var header = function(currentUser) {
    return function(route) {
      var navItem = function(r) {
        return function(html2) {
          return li([css("nav-item")])([a([css("nav-link" + guard4(eq7(route)(r))(" active")), safeHref(r)])(html2)]);
        };
      };
      return nav([css("navbar navbar-light")])([div3([css("container")])([a([css("navbar-brand"), safeHref(Home.value)])([text5("conduit")]), ul([css("nav navbar-nav pull-xs-right")])([navItem(Home.value)([text5("Home")]), whenElem(isJust(currentUser))(function(v) {
        return navItem(Editor.value)([i([css("ion-compose")])([text5(" New Post")])]);
      }), whenElem(isJust(currentUser))(function(v) {
        return navItem(Settings.value)([i([css("ion-gear-a")])([text5(" Settings")])]);
      }), maybeElem(currentUser)(function(profile) {
        return navItem(new Profile(profile.username))([img([css("user-pic"), src9(toStringWithDefault(profile.image))]), text5(toString2(profile.username))]);
      }), whenElem(isNothing(currentUser))(function(v) {
        return navItem(Login.value)([text5("Log in")]);
      }), whenElem(isNothing(currentUser))(function(v) {
        return navItem(Register.value)([text5("Sign up")]);
      })])])]);
    };
  };

  // output/Foreign.Index/foreign.js
  function unsafeReadPropImpl(f, s, key2, value18) {
    return value18 == null ? f : s(value18[key2]);
  }

  // output/Foreign.Index/index.js
  var unsafeReadProp = function(dictMonad) {
    var fail4 = fail(dictMonad);
    var pure30 = pure(applicativeExceptT(dictMonad));
    return function(k) {
      return function(value18) {
        return unsafeReadPropImpl(fail4(new TypeMismatch("object", typeOf(value18))), pure30, k, value18);
      };
    };
  };
  var readProp = function(dictMonad) {
    return unsafeReadProp(dictMonad);
  };

  // output/Web.Event.Event/foreign.js
  function _currentTarget(e2) {
    return e2.currentTarget;
  }
  function preventDefault(e2) {
    return function() {
      return e2.preventDefault();
    };
  }

  // output/Web.Event.Event/index.js
  var currentTarget = function($5) {
    return toMaybe(_currentTarget($5));
  };

  // output/Web.HTML.Event.EventTypes/index.js
  var input2 = "input";
  var domcontentloaded = "DOMContentLoaded";
  var blur2 = "blur";

  // output/Web.UIEvent.KeyboardEvent.EventTypes/index.js
  var keydown = "keydown";

  // output/Web.UIEvent.MouseEvent.EventTypes/index.js
  var click2 = "click";

  // output/Halogen.HTML.Events/index.js
  var map40 = /* @__PURE__ */ map(functorMaybe);
  var composeKleisli3 = /* @__PURE__ */ composeKleisli(bindMaybe);
  var composeKleisliFlipped4 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var readProp2 = /* @__PURE__ */ readProp(monadIdentity);
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var mouseHandler = unsafeCoerce2;
  var keyHandler = unsafeCoerce2;
  var handler$prime = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return map40(Action.create)(f(ev));
      });
    };
  };
  var handler2 = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return new Just(new Action(f(ev)));
      });
    };
  };
  var onClick = /* @__PURE__ */ function() {
    var $15 = handler2(click2);
    return function($16) {
      return $15(mouseHandler($16));
    };
  }();
  var onKeyDown = /* @__PURE__ */ function() {
    var $23 = handler2(keydown);
    return function($24) {
      return $23(keyHandler($24));
    };
  }();
  var onSubmit = /* @__PURE__ */ handler2("submit");
  var focusHandler = unsafeCoerce2;
  var onBlur = /* @__PURE__ */ function() {
    var $55 = handler2(blur2);
    return function($56) {
      return $55(focusHandler($56));
    };
  }();
  var addForeignPropHandler = function(key2) {
    return function(prop9) {
      return function(reader) {
        return function(f) {
          var go2 = function(a2) {
            return composeKleisliFlipped4(reader)(readProp2(prop9))(unsafeToForeign(a2));
          };
          return handler$prime(key2)(composeKleisli3(currentTarget)(function(e2) {
            return either($$const(Nothing.value))(function($85) {
              return Just.create(f($85));
            })(runExcept(go2(e2)));
          }));
        };
      };
    };
  };
  var onValueInput = /* @__PURE__ */ addForeignPropHandler(input2)("value")(readString2);

  // output/Web.UIEvent.KeyboardEvent/foreign.js
  function code(e2) {
    return e2.code;
  }

  // output/Web.UIEvent.KeyboardEvent/index.js
  var toEvent = unsafeCoerce2;

  // output/Conduit.Component.TagInput/index.js
  var compare3 = /* @__PURE__ */ compare(ordString);
  var unwrap11 = /* @__PURE__ */ unwrap();
  var type_19 = /* @__PURE__ */ type_17(isPropInputType);
  var value14 = /* @__PURE__ */ value13(isPropString);
  var map41 = /* @__PURE__ */ map(functorArray);
  var toUnfoldable6 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
  var modify_3 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var discard4 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var bind11 = /* @__PURE__ */ bind(bindHalogenM);
  var get4 = /* @__PURE__ */ get(monadStateHalogenM);
  var when2 = /* @__PURE__ */ when(applicativeHalogenM);
  var modify5 = /* @__PURE__ */ modify2(monadStateHalogenM);
  var pure17 = /* @__PURE__ */ pure(applicativeHalogenM);
  var Tag = function(x) {
    return x;
  };
  var TagAdded = /* @__PURE__ */ function() {
    function TagAdded2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TagAdded2.create = function(value0) {
      return function(value1) {
        return new TagAdded2(value0, value1);
      };
    };
    return TagAdded2;
  }();
  var TagRemoved = /* @__PURE__ */ function() {
    function TagRemoved2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TagRemoved2.create = function(value0) {
      return function(value1) {
        return new TagRemoved2(value0, value1);
      };
    };
    return TagRemoved2;
  }();
  var HandleInput = /* @__PURE__ */ function() {
    function HandleInput2(value0) {
      this.value0 = value0;
    }
    ;
    HandleInput2.create = function(value0) {
      return new HandleInput2(value0);
    };
    return HandleInput2;
  }();
  var HandleKey = /* @__PURE__ */ function() {
    function HandleKey2(value0) {
      this.value0 = value0;
    }
    ;
    HandleKey2.create = function(value0) {
      return new HandleKey2(value0);
    };
    return HandleKey2;
  }();
  var RemoveTag = /* @__PURE__ */ function() {
    function RemoveTag2(value0) {
      this.value0 = value0;
    }
    ;
    RemoveTag2.create = function(value0) {
      return new RemoveTag2(value0);
    };
    return RemoveTag2;
  }();
  var Receive2 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var eqTag = {
    eq: function(x) {
      return function(y) {
        return x === y;
      };
    }
  };
  var notEq1 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqSet(eqTag));
  var ordTag = {
    compare: function(x) {
      return function(y) {
        return compare3(x)(y);
      };
    },
    Eq0: function() {
      return eqTag;
    }
  };
  var insert8 = /* @__PURE__ */ insert5(ordTag);
  var $$delete7 = /* @__PURE__ */ $$delete6(ordTag);
  var component = function(dictMonadEffect) {
    var liftEffect10 = liftEffect(monadEffectHalogenM(dictMonadEffect));
    var render = function(v) {
      var renderTag2 = function(tag) {
        return span4([css("tag-default tag-pill")])([i([css("ion-close-round"), onClick(function(v1) {
          return new RemoveTag(tag);
        })])([]), text5(unwrap11(tag))]);
      };
      return fieldset([css("form-group")])([input([css("form-control"), type_19(InputText.value), placeholder3("Enter tags"), value14(v.text), onValueInput(HandleInput.create), onKeyDown(HandleKey.create)]), div3([css("tag-list")])(map41(renderTag2)(toUnfoldable6(v.tags)))]);
    };
    var handleAction = function(v) {
      if (v instanceof HandleInput) {
        return modify_3(function(v12) {
          var $50 = {};
          for (var $51 in v12) {
            if ({}.hasOwnProperty.call(v12, $51)) {
              $50[$51] = v12[$51];
            }
            ;
          }
          ;
          $50.text = v.value0;
          return $50;
        });
      }
      ;
      if (v instanceof HandleKey) {
        var v1 = code(v.value0);
        if (v1 === "Enter") {
          return discard4(liftEffect10(preventDefault(toEvent(v.value0))))(function() {
            return bind11(get4)(function(st) {
              return when2(st.text !== "")(bind11(modify5(function(v2) {
                var $55 = {};
                for (var $56 in v2) {
                  if ({}.hasOwnProperty.call(v2, $56)) {
                    $55[$56] = v2[$56];
                  }
                  ;
                }
                ;
                $55.tags = insert8(st.text)(st.tags);
                $55.text = "";
                return $55;
              }))(function(newState) {
                return raise(new TagAdded(st.text, newState.tags));
              }));
            });
          });
        }
        ;
        return pure17(unit);
      }
      ;
      if (v instanceof RemoveTag) {
        return bind11(modify5(function(s) {
          var $59 = {};
          for (var $60 in s) {
            if ({}.hasOwnProperty.call(s, $60)) {
              $59[$60] = s[$60];
            }
            ;
          }
          ;
          $59.tags = $$delete7(v.value0)(s.tags);
          return $59;
        }))(function(st) {
          return raise(new TagRemoved(v.value0, st.tags));
        });
      }
      ;
      if (v instanceof Receive2) {
        return bind11(get4)(function(st) {
          return when2(notEq1(v.value0.tags)(st.tags))(modify_3(function(v12) {
            var $63 = {};
            for (var $64 in v12) {
              if ({}.hasOwnProperty.call(v12, $64)) {
                $63[$64] = v12[$64];
              }
              ;
            }
            ;
            $63.tags = v.value0.tags;
            return $63;
          }));
        });
      }
      ;
      throw new Error("Failed pattern match at Conduit.Component.TagInput (line 57, column 18 - line 77, column 36): " + [v.constructor.name]);
    };
    return mkComponent({
      initialState: function(v) {
        return {
          tags: v.tags,
          text: ""
        };
      },
      render,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction,
        receive: function($70) {
          return Just.create(Receive2.create($70));
        }
      })
    });
  };

  // output/Conduit.Form.Validation/index.js
  var map43 = /* @__PURE__ */ map(functorEither);
  var Required = /* @__PURE__ */ function() {
    function Required2() {
    }
    ;
    Required2.value = new Required2();
    return Required2;
  }();
  var TooShort = /* @__PURE__ */ function() {
    function TooShort2() {
    }
    ;
    TooShort2.value = new TooShort2();
    return TooShort2;
  }();
  var TooLong = /* @__PURE__ */ function() {
    function TooLong2() {
    }
    ;
    TooLong2.value = new TooLong2();
    return TooLong2;
  }();
  var InvalidEmail = /* @__PURE__ */ function() {
    function InvalidEmail2() {
    }
    ;
    InvalidEmail2.value = new InvalidEmail2();
    return InvalidEmail2;
  }();
  var InvalidUsername = /* @__PURE__ */ function() {
    function InvalidUsername2() {
    }
    ;
    InvalidUsername2.value = new InvalidUsername2();
    return InvalidUsername2;
  }();
  var InvalidAvatar = /* @__PURE__ */ function() {
    function InvalidAvatar2() {
    }
    ;
    InvalidAvatar2.value = new InvalidAvatar2();
    return InvalidAvatar2;
  }();
  var usernameFormat = /* @__PURE__ */ function() {
    var $19 = note(InvalidUsername.value);
    return function($20) {
      return $19(parse($20));
    };
  }();
  var toOptional = function(dictMonoid) {
    var mempty7 = mempty(dictMonoid);
    return function(dictEq) {
      var eq11 = eq(dictEq);
      return function(k) {
        return function(value18) {
          var $14 = eq11(value18)(mempty7);
          if ($14) {
            return new Right(Nothing.value);
          }
          ;
          return map43(Just.create)(k(value18));
        };
      };
    };
  };
  var errorToString = function(v) {
    if (v instanceof Required) {
      return "This field is required.";
    }
    ;
    if (v instanceof TooShort) {
      return "Not enough characters entered";
    }
    ;
    if (v instanceof TooLong) {
      return "Too many characters entered";
    }
    ;
    if (v instanceof InvalidEmail) {
      return "Invalid email address";
    }
    ;
    if (v instanceof InvalidUsername) {
      return "Invalid username";
    }
    ;
    if (v instanceof InvalidAvatar) {
      return "Invalid image URL";
    }
    ;
    throw new Error("Failed pattern match at Conduit.Form.Validation (line 35, column 17 - line 41, column 39): " + [v.constructor.name]);
  };
  var check = function(f) {
    return function(err) {
      return function(a2) {
        if (f(a2)) {
          return new Right(a2);
        }
        ;
        if (otherwise) {
          return new Left(err);
        }
        ;
        throw new Error("Failed pattern match at Conduit.Form.Validation (line 87, column 1 - line 87, column 74): " + [f.constructor.name, err.constructor.name, a2.constructor.name]);
      };
    };
  };
  var emailFormat = /* @__PURE__ */ function() {
    var $21 = map43(Email);
    var $22 = check(contains("@"))(InvalidEmail.value);
    return function($23) {
      return $21($22($23));
    };
  }();
  var maxLength3 = function(n) {
    return check(function(str) {
      return length5(str) <= n;
    })(TooLong.value);
  };
  var minLength3 = function(n) {
    return check(function(str) {
      return length5(str) > n;
    })(TooShort.value);
  };
  var required4 = function(dictEq) {
    var notEq8 = notEq(dictEq);
    return function(dictMonoid) {
      var mempty7 = mempty(dictMonoid);
      return check(function(v) {
        return notEq8(v)(mempty7);
      })(Required.value);
    };
  };
  var avatarFormat = /* @__PURE__ */ function() {
    var $24 = note(InvalidAvatar.value);
    return function($25) {
      return $24(parse4($25));
    };
  }();

  // output/Conduit.Form.Field/index.js
  var append10 = /* @__PURE__ */ append(semigroupArray);
  var value15 = /* @__PURE__ */ value13(isPropString);
  var bind13 = /* @__PURE__ */ bind(bindMaybe);
  var pure18 = /* @__PURE__ */ pure(applicativeMaybe);
  var type_20 = /* @__PURE__ */ type_17(isPropInputType);
  var textarea2 = function(v) {
    return function(props) {
      return fieldset([css("form-group")])([textarea(append10([css("form-control form-control-lg"), rows4(8), value15(v.state.value), onValueInput(v.action.handleChange), onBlur(v.action.handleBlur)])(props))]);
    };
  };
  var textInput = function(v) {
    return function(props) {
      return fieldset([css("form-group")])([input(append10([css("form-control form-control-lg"), value15(v.state.value), onValueInput(v.action.handleChange), onBlur(v.action.handleBlur)])(props)), maybeElem(bind13(v.state.result)(either(pure18)($$const(Nothing.value))))(function(err) {
        return div3([css("error-messages")])([text5(errorToString(err))]);
      })]);
    };
  };
  var submitButton = function(label5) {
    return function(bool) {
      return function(action2) {
        return input([css("btn btn-lg btn-primary pull-xs-right"), type_20(InputSubmit.value), enabled(bool), onClick(function(v) {
          return action2;
        }), value15(label5)]);
      };
    };
  };

  // output/Record.Builder/foreign.js
  function copyRecord(rec) {
    var copy2 = {};
    for (var key2 in rec) {
      if ({}.hasOwnProperty.call(rec, key2)) {
        copy2[key2] = rec[key2];
      }
    }
    return copy2;
  }
  function unsafeInsert(l) {
    return function(a2) {
      return function(rec) {
        rec[l] = a2;
        return rec;
      };
    };
  }
  function unsafeModify(l) {
    return function(f) {
      return function(rec) {
        rec[l] = f(rec[l]);
        return rec;
      };
    };
  }

  // output/Record.Builder/index.js
  var semigroupoidBuilder = semigroupoidFn;
  var modify6 = function() {
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        return function(l) {
          return function(f) {
            return function(r1) {
              return unsafeModify(reflectSymbol2(l))(f)(r1);
            };
          };
        };
      };
    };
  };
  var insert9 = function() {
    return function() {
      return function(dictIsSymbol) {
        var reflectSymbol2 = reflectSymbol(dictIsSymbol);
        return function(l) {
          return function(a2) {
            return function(r1) {
              return unsafeInsert(reflectSymbol2(l))(a2)(r1);
            };
          };
        };
      };
    };
  };
  var categoryBuilder = categoryFn;
  var build = function(v) {
    return function(r1) {
      return v(copyRecord(r1));
    };
  };

  // output/ConvertableOptions/index.js
  var merge2 = /* @__PURE__ */ merge()();
  var defaultsRecord = function() {
    return function() {
      return {
        defaults: flip(merge2)
      };
    };
  };
  var defaults = function(dict) {
    return dict.defaults;
  };

  // output/Data.Variant/index.js
  var overSome = function() {
    return function() {
      return function() {
        return function() {
          return function(r) {
            return function(k) {
              return function(v) {
                if (unsafeHas(v.type)(r)) {
                  return {
                    type: v.type,
                    value: unsafeGet(v.type)(r)(v.value)
                  };
                }
                ;
                return k(v);
              };
            };
          };
        };
      };
    };
  };
  var overSome1 = /* @__PURE__ */ overSome()()()();
  var over3 = function() {
    return function() {
      return function() {
        return function() {
          return function(r) {
            return overSome1(r)(unsafeCoerce2);
          };
        };
      };
    };
  };
  var inj = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(p2) {
        return function(value18) {
          return {
            type: reflectSymbol2(p2),
            value: value18
          };
        };
      };
    };
  };

  // output/Foreign.Object.Unsafe/foreign.js
  function unsafeIndex3(m) {
    return function(k) {
      return m[k];
    };
  }

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var slot_ = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component12) {
              return function(input3) {
                return widget(new ComponentSlot(componentSlot22(label5)(p2)(component12)(input3)($$const(Nothing.value))));
              };
            };
          };
        };
      };
    };
  };
  var slot = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component12) {
              return function(input3) {
                return function(outputQuery) {
                  return widget(new ComponentSlot(componentSlot22(label5)(p2)(component12)(input3)(function($11) {
                    return Just.create(outputQuery($11));
                  })));
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Heterogeneous.Folding/index.js
  var hfoldlWithIndex = function(dict) {
    return dict.hfoldlWithIndex;
  };
  var foldlRecordRowList = function(dict) {
    return dict.foldlRecordRowList;
  };
  var hfoldlRecordWithIndex = function() {
    return function(dictFoldlRecord) {
      var foldlRecordRowList1 = foldlRecordRowList(dictFoldlRecord);
      return {
        hfoldlWithIndex: function(f) {
          return function(x) {
            return foldlRecordRowList1(f)(x)($$Proxy.value);
          };
        }
      };
    };
  };
  var foldlRecordNil = {
    foldlRecordRowList: function(v) {
      return function(x) {
        return function(v1) {
          return function(v2) {
            return x;
          };
        };
      };
    }
  };
  var foldingWithIndex = function(dict) {
    return dict.foldingWithIndex;
  };
  var foldlRecordCons = function(dictIsSymbol) {
    var get13 = get3(dictIsSymbol)();
    return function() {
      return function(dictFoldingWithIndex) {
        var foldingWithIndex1 = foldingWithIndex(dictFoldingWithIndex);
        return function(dictFoldlRecord) {
          var foldlRecordRowList1 = foldlRecordRowList(dictFoldlRecord);
          return {
            foldlRecordRowList: function(f) {
              return function(x) {
                return function(v) {
                  return function(r) {
                    return foldlRecordRowList1(f)(foldingWithIndex1(f)($$Proxy.value)(x)(get13($$Proxy.value)(r)))($$Proxy.value)(r);
                  };
                };
              };
            }
          };
        };
      };
    };
  };

  // output/Heterogeneous.Mapping/index.js
  var identity19 = /* @__PURE__ */ identity(categoryBuilder);
  var compose1 = /* @__PURE__ */ compose(semigroupoidBuilder);
  var modify7 = /* @__PURE__ */ modify6()();
  var ConstMapping = function(x) {
    return x;
  };
  var mappingWithIndex = function(dict) {
    return dict.mappingWithIndex;
  };
  var mapping = function(dict) {
    return dict.mapping;
  };
  var mapRecordWithIndexNil = {
    mapRecordWithIndexBuilder: function(v) {
      return function(v1) {
        return identity19;
      };
    }
  };
  var mapRecordWithIndexBuilder = function(dict) {
    return dict.mapRecordWithIndexBuilder;
  };
  var mapRecordWithIndexCons = function(dictIsSymbol) {
    var modify1 = modify7(dictIsSymbol);
    return function(dictMappingWithIndex) {
      var mappingWithIndex1 = mappingWithIndex(dictMappingWithIndex);
      return function(dictMapRecordWithIndex) {
        var mapRecordWithIndexBuilder1 = mapRecordWithIndexBuilder(dictMapRecordWithIndex);
        return function() {
          return function() {
            return {
              mapRecordWithIndexBuilder: function(v) {
                return function(f) {
                  return compose1(modify1($$Proxy.value)(mappingWithIndex1(f)($$Proxy.value)))(mapRecordWithIndexBuilder1($$Proxy.value)(f));
                };
              }
            };
          };
        };
      };
    };
  };
  var hmapWithIndexRecord = function() {
    return function(dictMapRecordWithIndex) {
      return {
        hmapWithIndex: function() {
          var $102 = mapRecordWithIndexBuilder(dictMapRecordWithIndex)($$Proxy.value);
          return function($103) {
            return build($102($103));
          };
        }()
      };
    };
  };
  var hmapWithIndex = function(dict) {
    return dict.hmapWithIndex;
  };
  var hmapRecord = function() {
    return function(dictMapRecordWithIndex) {
      return {
        hmap: function() {
          var $108 = mapRecordWithIndexBuilder(dictMapRecordWithIndex)($$Proxy.value);
          return function($109) {
            return build($108(ConstMapping($109)));
          };
        }()
      };
    };
  };
  var hmap = function(dict) {
    return dict.hmap;
  };
  var constMapping = function(dictMapping) {
    var mapping1 = mapping(dictMapping);
    return {
      mappingWithIndex: function(v) {
        return function(v1) {
          return mapping1(v);
        };
      }
    };
  };

  // output/Formless/index.js
  var map45 = /* @__PURE__ */ map(functorMaybe);
  var pure19 = /* @__PURE__ */ pure(applicativeMaybe);
  var identity20 = /* @__PURE__ */ identity(categoryBuilder);
  var inj3 = /* @__PURE__ */ inj();
  var apply6 = /* @__PURE__ */ apply(applyMaybe);
  var composeFlipped2 = /* @__PURE__ */ composeFlipped(semigroupoidBuilder);
  var insert10 = /* @__PURE__ */ insert9()();
  var over4 = /* @__PURE__ */ over3()()()();
  var discard5 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var pure110 = /* @__PURE__ */ pure(applicativeHalogenM);
  var bind14 = /* @__PURE__ */ bind(bindHalogenM);
  var $$delete8 = /* @__PURE__ */ $$delete3({
    reflectSymbol: function() {
      return "liftAction";
    }
  })()();
  var coerce6 = /* @__PURE__ */ coerce();
  var bindFlipped10 = /* @__PURE__ */ bindFlipped(bindHalogenM);
  var innerIsSymbol = {
    reflectSymbol: function() {
      return "inner";
    }
  };
  var request4 = /* @__PURE__ */ request3()(innerIsSymbol)(ordUnit);
  var gets2 = /* @__PURE__ */ gets(monadStateHalogenM);
  var for_2 = /* @__PURE__ */ for_(applicativeHalogenM);
  var for_1 = /* @__PURE__ */ for_2(foldableMaybe);
  var modify_4 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var get5 = /* @__PURE__ */ get(monadStateHalogenM);
  var for_22 = /* @__PURE__ */ for_2(foldableArray);
  var tell3 = /* @__PURE__ */ tell2()(innerIsSymbol)(ordUnit);
  var map116 = /* @__PURE__ */ map(functorObject);
  var slot2 = /* @__PURE__ */ slot()(innerIsSymbol)(ordUnit);
  var query3 = /* @__PURE__ */ query()(innerIsSymbol)(ordUnit);
  var MkFieldState = /* @__PURE__ */ function() {
    function MkFieldState2() {
    }
    ;
    MkFieldState2.value = new MkFieldState2();
    return MkFieldState2;
  }();
  var MkFieldResult = /* @__PURE__ */ function() {
    function MkFieldResult2() {
    }
    ;
    MkFieldResult2.value = new MkFieldResult2();
    return MkFieldResult2;
  }();
  var MkFieldOutput = /* @__PURE__ */ function() {
    function MkFieldOutput2() {
    }
    ;
    MkFieldOutput2.value = new MkFieldOutput2();
    return MkFieldOutput2;
  }();
  var Query3 = /* @__PURE__ */ function() {
    function Query4(value0) {
      this.value0 = value0;
    }
    ;
    Query4.create = function(value0) {
      return new Query4(value0);
    };
    return Query4;
  }();
  var Validate = /* @__PURE__ */ function() {
    function Validate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Validate2.create = function(value0) {
      return function(value1) {
        return new Validate2(value0, value1);
      };
    };
    return Validate2;
  }();
  var SubmitAttempt = /* @__PURE__ */ function() {
    function SubmitAttempt2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SubmitAttempt2.create = function(value0) {
      return function(value1) {
        return new SubmitAttempt2(value0, value1);
      };
    };
    return SubmitAttempt2;
  }();
  var Submit = /* @__PURE__ */ function() {
    function Submit2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Submit2.create = function(value0) {
      return function(value1) {
        return new Submit2(value0, value1);
      };
    };
    return Submit2;
  }();
  var Reset = /* @__PURE__ */ function() {
    function Reset2(value0) {
      this.value0 = value0;
    }
    ;
    Reset2.create = function(value0) {
      return new Reset2(value0);
    };
    return Reset2;
  }();
  var SubmitForm = /* @__PURE__ */ function() {
    function SubmitForm2(value0) {
      this.value0 = value0;
    }
    ;
    SubmitForm2.create = function(value0) {
      return new SubmitForm2(value0);
    };
    return SubmitForm2;
  }();
  var ResetForm = /* @__PURE__ */ function() {
    function ResetForm2() {
    }
    ;
    ResetForm2.value = new ResetForm2();
    return ResetForm2;
  }();
  var SetForm = /* @__PURE__ */ function() {
    function SetForm2(value0) {
      this.value0 = value0;
    }
    ;
    SetForm2.create = function(value0) {
      return new SetForm2(value0);
    };
    return SetForm2;
  }();
  var SetFormConfig = /* @__PURE__ */ function() {
    function SetFormConfig2(value0) {
      this.value0 = value0;
    }
    ;
    SetFormConfig2.create = function(value0) {
      return new SetFormConfig2(value0);
    };
    return SetFormConfig2;
  }();
  var ChangeField = /* @__PURE__ */ function() {
    function ChangeField2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ChangeField2.create = function(value0) {
      return function(value1) {
        return new ChangeField2(value0, value1);
      };
    };
    return ChangeField2;
  }();
  var BlurField = /* @__PURE__ */ function() {
    function BlurField2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    BlurField2.create = function(value0) {
      return function(value1) {
        return new BlurField2(value0, value1);
      };
    };
    return BlurField2;
  }();
  var ModifyField = /* @__PURE__ */ function() {
    function ModifyField2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ModifyField2.create = function(value0) {
      return function(value1) {
        return new ModifyField2(value0, value1);
      };
    };
    return ModifyField2;
  }();
  var ValidateField = /* @__PURE__ */ function() {
    function ValidateField2(value0) {
      this.value0 = value0;
    }
    ;
    ValidateField2.create = function(value0) {
      return new ValidateField2(value0);
    };
    return ValidateField2;
  }();
  var ResetField = /* @__PURE__ */ function() {
    function ResetField2(value0) {
      this.value0 = value0;
    }
    ;
    ResetField2.create = function(value0) {
      return new ResetField2(value0);
    };
    return ResetField2;
  }();
  var Raise2 = /* @__PURE__ */ function() {
    function Raise4(value0) {
      this.value0 = value0;
    }
    ;
    Raise4.create = function(value0) {
      return new Raise4(value0);
    };
    return Raise4;
  }();
  var Eval = /* @__PURE__ */ function() {
    function Eval6(value0) {
      this.value0 = value0;
    }
    ;
    Eval6.create = function(value0) {
      return new Eval6(value0);
    };
    return Eval6;
  }();
  var Initialize2 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive3 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var HandleForm = /* @__PURE__ */ function() {
    function HandleForm2(value0) {
      this.value0 = value0;
    }
    ;
    HandleForm2.create = function(value0) {
      return new HandleForm2(value0);
    };
    return HandleForm2;
  }();
  var mkFieldStates1 = function(dictHMap) {
    return {
      mkFieldStates: hmap(dictHMap)(MkFieldState.value),
      HMap0: function() {
        return dictHMap;
      }
    };
  };
  var mkFieldResults1 = function(dictHFoldlWithIndex) {
    return {
      mkFieldResults: function() {
        var $267 = map45(flip(build)({}));
        var $268 = hfoldlWithIndex(dictHFoldlWithIndex)(MkFieldResult.value)(pure19(identity20));
        return function($269) {
          return $267($268($269));
        };
      }(),
      HFoldlWithIndex0: function() {
        return dictHFoldlWithIndex;
      }
    };
  };
  var mkFieldOutputs1 = function(dictHFoldlWithIndex) {
    return {
      mkFieldOutputs: function() {
        var $270 = map45(flip(build)({}));
        var $271 = hfoldlWithIndex(dictHFoldlWithIndex)(MkFieldOutput.value)(pure19(identity20));
        return function($272) {
          return $270($271($272));
        };
      }(),
      HFoldlWithIndex0: function() {
        return dictHFoldlWithIndex;
      }
    };
  };
  var mkFieldActions1 = function(dictHMapWithIndex) {
    var hmapWithIndex2 = hmapWithIndex(dictHMapWithIndex);
    return {
      mkFieldActions: function(lift13) {
        return hmapWithIndex2(lift13);
      },
      HMapWithIndex0: function() {
        return dictHMapWithIndex;
      }
    };
  };
  var mappingWithIndexMkFieldAc = function(dictIsSymbol) {
    var inj1 = inj3(dictIsSymbol);
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function(dictTypeEquals) {
      return function() {
        return {
          mappingWithIndex: function(v) {
            return function(sym) {
              return function(v1) {
                var fieldVariant = inj1(sym)(unit);
                return {
                  key: reflectSymbol2(sym),
                  modify: function() {
                    var $273 = ModifyField.create(fieldVariant);
                    return function($274) {
                      return v($273($274));
                    };
                  }(),
                  reset: v(new ResetField(fieldVariant)),
                  validate: v(new ValidateField(fieldVariant)),
                  handleChange: function() {
                    var $275 = ChangeField.create(fieldVariant);
                    return function($276) {
                      return v($275($276));
                    };
                  }(),
                  handleBlur: function() {
                    var $277 = BlurField.create(fieldVariant);
                    return function($278) {
                      return v($277($278));
                    };
                  }()
                };
              };
            };
          }
        };
      };
    };
  };
  var mappingMkFieldStateFieldS = {
    mapping: function(v) {
      return function(input3) {
        return {
          initialValue: input3,
          value: input3,
          result: Nothing.value
        };
      };
    }
  };
  var foldingWithIndexMkFieldRe = function(dictIsSymbol) {
    var insert13 = insert10(dictIsSymbol);
    return function(dictTypeEquals) {
      var from4 = from2(dictTypeEquals);
      return function() {
        return function() {
          return {
            foldingWithIndex: function(v) {
              return function(prop9) {
                return function(rin) {
                  return function(field) {
                    var v1 = from4(field);
                    return apply6(map45(composeFlipped2)(rin))(map45(insert13(prop9))(v1.result));
                  };
                };
              };
            }
          };
        };
      };
    };
  };
  var foldingWithIndexMkFieldOu = function(dictIsSymbol) {
    var insert13 = insert10(dictIsSymbol);
    return function(dictTypeEquals) {
      var from4 = from2(dictTypeEquals);
      return function() {
        return function() {
          return {
            foldingWithIndex: function(v) {
              return function(prop9) {
                return function(rin) {
                  return function(field) {
                    var result = from4(field);
                    return apply6(map45(composeFlipped2)(rin))(map45(insert13(prop9))(hush(result)));
                  };
                };
              };
            }
          };
        };
      };
    };
  };
  var when$prime = function(dictApplicative) {
    var pure210 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1(unit);
        }
        ;
        return pure210(unit);
      };
    };
  };
  var when$prime1 = /* @__PURE__ */ when$prime(applicativeHalogenM);
  var validate = function() {
    return function() {
      return function() {
        return function() {
          return flip(over4);
        };
      };
    };
  };
  var mkFieldStates = function(dict) {
    return dict.mkFieldStates;
  };
  var mkFieldResults = function(dict) {
    return dict.mkFieldResults;
  };
  var mkFieldOutputs = function(dict) {
    return dict.mkFieldOutputs;
  };
  var mkFieldActions = function(dict) {
    return dict.mkFieldActions;
  };
  var mkConfig = function(dict) {
    return dict.mkConfig;
  };
  var handleSubmitValidate = function(onSubmit2) {
    return function(validate$prime) {
      return function(validators) {
        return function(v) {
          if (v instanceof Submit) {
            return discard5(onSubmit2(v.value0))(function() {
              return pure110(new Just(v.value1));
            });
          }
          ;
          if (v instanceof Validate) {
            return pure110(new Just(v.value1(validate$prime(v.value0)(validators))));
          }
          ;
          return pure110(Nothing.value);
        };
      };
    };
  };
  var formless = function(dictMonadEffect) {
    var liftEffect10 = liftEffect(monadEffectHalogenM(dictMonadEffect));
    return function(dictMkFieldStates) {
      var mkFieldStates2 = mkFieldStates(dictMkFieldStates);
      return function(dictMkFieldActions) {
        var mkFieldActions2 = mkFieldActions(dictMkFieldActions);
        return function(dictMkFieldResults) {
          var mkFieldResults2 = mkFieldResults(dictMkFieldResults);
          return function(dictMkFieldOutputs) {
            var mkFieldOutputs2 = mkFieldOutputs(dictMkFieldOutputs);
            return function(dictMkConfig) {
              var mkConfig2 = mkConfig(dictMkConfig);
              return function(providedConfig) {
                return function(initialForm) {
                  return function(component12) {
                    var setFieldResult = function(v) {
                      return function(object10) {
                        var field = unsafeIndex3(object10)(v.type);
                        return insert(v.type)({
                          initialValue: field.initialValue,
                          value: field.value,
                          result: new Just(v.value)
                        })(object10);
                      };
                    };
                    var modifyField = function(v) {
                      return function(object10) {
                        var field = unsafeIndex3(object10)(v.type);
                        return insert(v.type)(v.value(field))(object10);
                      };
                    };
                    var initialState = function(input3) {
                      var initialFullConfig = mkConfig2(providedConfig);
                      var initialFormState = {
                        submitCount: 0,
                        errorCount: 0,
                        allTouched: false
                      };
                      var initialFormActions = {
                        setFields: function($280) {
                          return initialFullConfig.liftAction(SetForm.create($280));
                        },
                        reset: initialFullConfig.liftAction(ResetForm.value),
                        setConfig: function($281) {
                          return initialFullConfig.liftAction(SetFormConfig.create($281));
                        },
                        submit: initialFullConfig.liftAction(new SubmitForm(Nothing.value)),
                        handleSubmit: function($282) {
                          return initialFullConfig.liftAction(SubmitForm.create(Just.create($282)));
                        }
                      };
                      var initialFieldStates = mkFieldStates2(initialForm);
                      var initialFieldActions = mkFieldActions2(initialFullConfig.liftAction)(initialFieldStates);
                      var initialConfig = $$delete8($$Proxy.value)(initialFullConfig);
                      return {
                        input: input3,
                        fieldObject: initialFieldStates,
                        fieldActions: initialFieldActions,
                        formState: initialFormState,
                        formActions: initialFormActions,
                        formConfig: initialConfig
                      };
                    };
                    var getKeys = function($283) {
                      return coerce6(keys($283));
                    };
                    var getField = function(v) {
                      return function(object10) {
                        var field = unsafeIndex3(object10)(v);
                        return {
                          type: v,
                          value: field.value
                        };
                      };
                    };
                    var fieldsKey = function($284) {
                      return coerce6($284.type);
                    };
                    var mkFieldRep = function(variant) {
                      return function(value18) {
                        return {
                          type: coerce6(fieldsKey(variant)),
                          value: value18
                        };
                      };
                    };
                    var countErrors = fold2(function(acc) {
                      return function(v) {
                        return function(v1) {
                          if (v1.result instanceof Just && v1.result.value0 instanceof Left) {
                            return acc + 1 | 0;
                          }
                          ;
                          return acc;
                        };
                      };
                    })(0);
                    var allTouched = fold2(function(acc) {
                      return function(v) {
                        return function(v1) {
                          if (v1.result instanceof Just) {
                            return acc && true;
                          }
                          ;
                          return false;
                        };
                      };
                    })(true);
                    var runValidation = function(fieldKey) {
                      return bind14(bindFlipped10(function() {
                        var $285 = request4($$Proxy.value)(unit);
                        var $286 = getField(fieldKey);
                        return function($287) {
                          return $285(Validate.create($286($287)));
                        };
                      }())(gets2(function(v) {
                        return v.fieldObject;
                      })))(function(mbResult) {
                        return for_1(mbResult)(function(resultVariant) {
                          return modify_4(function(state3) {
                            var fieldObject = setFieldResult(resultVariant)(state3.fieldObject);
                            var $199 = {};
                            for (var $200 in state3) {
                              if ({}.hasOwnProperty.call(state3, $200)) {
                                $199[$200] = state3[$200];
                              }
                              ;
                            }
                            ;
                            $199.fieldObject = fieldObject;
                            $199.formState = function() {
                              var $196 = {};
                              for (var $197 in state3.formState) {
                                if ({}.hasOwnProperty.call(state3.formState, $197)) {
                                  $196[$197] = state3["formState"][$197];
                                }
                                ;
                              }
                              ;
                              $196.errorCount = countErrors(fieldObject);
                              $196.allTouched = allTouched(fieldObject);
                              return $196;
                            }();
                            return $199;
                          });
                        });
                      });
                    };
                    var runFormAction = function(action2) {
                      return handleAction(new HandleForm(new Eval(action2)));
                    };
                    var handleAction = function(v) {
                      if (v instanceof Initialize2) {
                        return bind14(get5)(function(v1) {
                          return when$prime1(v1.formConfig.validateOnMount)(function(v2) {
                            return for_22(getKeys(v1.fieldObject))(runValidation);
                          });
                        });
                      }
                      ;
                      if (v instanceof Receive3) {
                        return bind14(get5)(function(v1) {
                          return when$prime1(!unsafeRefEq(v1.input)(v.value0))(function(v2) {
                            return modify_4(function(v3) {
                              var $207 = {};
                              for (var $208 in v3) {
                                if ({}.hasOwnProperty.call(v3, $208)) {
                                  $207[$208] = v3[$208];
                                }
                                ;
                              }
                              ;
                              $207.input = v.value0;
                              return $207;
                            });
                          });
                        });
                      }
                      ;
                      if (v instanceof HandleForm && v.value0 instanceof Raise2) {
                        return raise(v.value0.value0);
                      }
                      ;
                      if (v instanceof HandleForm && v.value0 instanceof Eval) {
                        if (v.value0.value0 instanceof SubmitForm) {
                          return discard5(for_1(v.value0.value0.value0)(function(event) {
                            return liftEffect10(preventDefault(event));
                          }))(function() {
                            return discard5(bind14(get5)(function(v1) {
                              return for_22(getKeys(v1.fieldObject))(runValidation);
                            }))(function() {
                              return bind14(get5)(function(v1) {
                                return discard5(modify_4(function(state3) {
                                  var $221 = {};
                                  for (var $222 in state3) {
                                    if ({}.hasOwnProperty.call(state3, $222)) {
                                      $221[$222] = state3[$222];
                                    }
                                    ;
                                  }
                                  ;
                                  $221.formState = function() {
                                    var $218 = {};
                                    for (var $219 in state3.formState) {
                                      if ({}.hasOwnProperty.call(state3.formState, $219)) {
                                        $218[$219] = state3["formState"][$219];
                                      }
                                      ;
                                    }
                                    ;
                                    $218.submitCount = state3.formState.submitCount + 1 | 0;
                                    return $218;
                                  }();
                                  return $221;
                                }))(function() {
                                  return for_1(mkFieldResults2(v1.fieldObject))(function(results) {
                                    var v2 = mkFieldOutputs2(results);
                                    if (v2 instanceof Nothing) {
                                      return tell3($$Proxy.value)(unit)(SubmitAttempt.create(results));
                                    }
                                    ;
                                    if (v2 instanceof Just) {
                                      return tell3($$Proxy.value)(unit)(Submit.create(v2.value0));
                                    }
                                    ;
                                    throw new Error("Failed pattern match at Formless (line 429, column 75 - line 431, column 64): " + [v2.constructor.name]);
                                  });
                                });
                              });
                            });
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof SetForm) {
                          return modify_4(function(state3) {
                            var $228 = {};
                            for (var $229 in state3) {
                              if ({}.hasOwnProperty.call(state3, $229)) {
                                $228[$229] = state3[$229];
                              }
                              ;
                            }
                            ;
                            $228.fieldObject = v.value0.value0.value0;
                            return $228;
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof SetFormConfig) {
                          return modify_4(function(state3) {
                            var $232 = {};
                            for (var $233 in state3) {
                              if ({}.hasOwnProperty.call(state3, $233)) {
                                $232[$233] = state3[$233];
                              }
                              ;
                            }
                            ;
                            $232.formConfig = v.value0.value0.value0;
                            return $232;
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof ResetForm) {
                          var reset2 = function(field) {
                            var $236 = {};
                            for (var $237 in field) {
                              if ({}.hasOwnProperty.call(field, $237)) {
                                $236[$237] = field[$237];
                              }
                              ;
                            }
                            ;
                            $236.value = field.initialValue;
                            $236.result = Nothing.value;
                            return $236;
                          };
                          return discard5(modify_4(function(state3) {
                            var $239 = {};
                            for (var $240 in state3) {
                              if ({}.hasOwnProperty.call(state3, $240)) {
                                $239[$240] = state3[$240];
                              }
                              ;
                            }
                            ;
                            $239.fieldObject = map116(reset2)(state3.fieldObject);
                            $239.formState = {
                              submitCount: 0,
                              errorCount: 0,
                              allTouched: false
                            };
                            return $239;
                          }))(function() {
                            return tell3($$Proxy.value)(unit)(Reset.create);
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof ChangeField) {
                          return bind14(get5)(function(v1) {
                            var modify13 = mkFieldRep(v.value0.value0.value0)(function(v2) {
                              return {
                                initialValue: v2.initialValue,
                                result: v2.result,
                                value: v.value0.value0.value1
                              };
                            });
                            return discard5(modify_4(function(state3) {
                              var $243 = {};
                              for (var $244 in state3) {
                                if ({}.hasOwnProperty.call(state3, $244)) {
                                  $243[$244] = state3[$244];
                                }
                                ;
                              }
                              ;
                              $243.fieldObject = modifyField(modify13)(state3.fieldObject);
                              return $243;
                            }))(function() {
                              return when$prime1(v1.formConfig.validateOnChange)(function(v2) {
                                return runFormAction(new ValidateField(v.value0.value0.value0));
                              });
                            });
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof BlurField) {
                          return bind14(get5)(function(v1) {
                            return when$prime1(v1.formConfig.validateOnBlur)(function(v2) {
                              return runFormAction(new ValidateField(v.value0.value0.value0));
                            });
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof ModifyField) {
                          return bind14(get5)(function(v1) {
                            var modify13 = mkFieldRep(v.value0.value0.value0)(v.value0.value0.value1);
                            return discard5(modify_4(function(state3) {
                              var $254 = {};
                              for (var $255 in state3) {
                                if ({}.hasOwnProperty.call(state3, $255)) {
                                  $254[$255] = state3[$255];
                                }
                                ;
                              }
                              ;
                              $254.fieldObject = modifyField(modify13)(state3.fieldObject);
                              return $254;
                            }))(function() {
                              return when$prime1(v1.formConfig.validateOnModify)(function(v2) {
                                return runFormAction(new ValidateField(v.value0.value0.value0));
                              });
                            });
                          });
                        }
                        ;
                        if (v.value0.value0 instanceof ValidateField) {
                          return runValidation(fieldsKey(v.value0.value0.value0));
                        }
                        ;
                        if (v.value0.value0 instanceof ResetField) {
                          var reset2 = function(field) {
                            return {
                              initialValue: field.initialValue,
                              value: field.initialValue,
                              result: Nothing.value
                            };
                          };
                          var modify12 = mkFieldRep(v.value0.value0.value0)(reset2);
                          return modify_4(function(state3) {
                            var $261 = {};
                            for (var $262 in state3) {
                              if ({}.hasOwnProperty.call(state3, $262)) {
                                $261[$262] = state3[$262];
                              }
                              ;
                            }
                            ;
                            $261.fieldObject = modifyField(modify12)(state3.fieldObject);
                            return $261;
                          });
                        }
                        ;
                        throw new Error("Failed pattern match at Formless (line 421, column 33 - line 473, column 89): " + [v.value0.value0.constructor.name]);
                      }
                      ;
                      throw new Error("Failed pattern match at Formless (line 407, column 18 - line 473, column 89): " + [v.constructor.name]);
                    };
                    return mkComponent({
                      initialState,
                      render: function(state3) {
                        var context = {
                          input: state3.input,
                          fields: state3.fieldObject,
                          actions: state3.fieldActions,
                          formState: state3.formState,
                          formActions: state3.formActions
                        };
                        return slot2($$Proxy.value)(unit)(component12)(context)(HandleForm.create);
                      },
                      "eval": mkEval({
                        initialize: new Just(Initialize2.value),
                        receive: function($288) {
                          return Just.create(Receive3.create($288));
                        },
                        finalize: Nothing.value,
                        handleAction,
                        handleQuery: function() {
                          var $289 = query3($$Proxy.value)(unit);
                          return function($290) {
                            return $289(Query3.create($290));
                          };
                        }()
                      })
                    });
                  };
                };
              };
            };
          };
        };
      };
    };
  };
  var $$eval = function($291) {
    return raise(Eval.create($291));
  };
  var defaultConfig = {
    validateOnBlur: true,
    validateOnChange: false,
    validateOnModify: false,
    validateOnMount: false
  };
  var mkConfig1 = function(dictDefaults) {
    var defaults3 = defaults(dictDefaults);
    return {
      mkConfig: function(provided) {
        return defaults3(defaultConfig)(provided);
      },
      Defaults0: function() {
        return dictDefaults;
      }
    };
  };

  // output/Halogen.Store.Connect/index.js
  var bind15 = /* @__PURE__ */ bind(bindHalogenM);
  var $$void8 = /* @__PURE__ */ $$void(functorHalogenM);
  var map46 = /* @__PURE__ */ map(functorEmitter);
  var innerIsSymbol2 = {
    reflectSymbol: function() {
      return "inner";
    }
  };
  var slot3 = /* @__PURE__ */ slot()(innerIsSymbol2)(ordUnit);
  var discard6 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var map117 = /* @__PURE__ */ map(functorHalogenM);
  var modify_5 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var gets3 = /* @__PURE__ */ gets(monadStateHalogenM);
  var unless3 = /* @__PURE__ */ unless(applicativeHalogenM);
  var pure20 = /* @__PURE__ */ pure(applicativeHalogenM);
  var query4 = /* @__PURE__ */ query()(innerIsSymbol2)(ordUnit);
  var Initialize3 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive4 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var Update = /* @__PURE__ */ function() {
    function Update2(value0) {
      this.value0 = value0;
    }
    ;
    Update2.create = function(value0) {
      return new Update2(value0);
    };
    return Update2;
  }();
  var Raise3 = /* @__PURE__ */ function() {
    function Raise4(value0) {
      this.value0 = value0;
    }
    ;
    Raise4.create = function(value0) {
      return new Raise4(value0);
    };
    return Raise4;
  }();
  var subscribe3 = function(dictMonadStore) {
    var emitSelected2 = emitSelected(monadStoreHalogenM(dictMonadStore));
    return function(selector) {
      return function(action2) {
        return bind15(emitSelected2(selector))(function(emitter) {
          return $$void8(subscribe2(map46(action2)(emitter)));
        });
      };
    };
  };
  var connect = function(dictMonadEffect) {
    return function(dictMonadStore) {
      var subscribe1 = subscribe3(dictMonadStore);
      var getStore3 = getStore(monadStoreHalogenM(dictMonadStore));
      return function(v) {
        return function(component12) {
          var renderInner = function(input3) {
            return function(context) {
              return slot3($$Proxy.value)(unit)(component12)({
                input: input3,
                context
              })(Raise3.create);
            };
          };
          var render = function(state3) {
            if (state3.context instanceof Just) {
              return renderInner(state3.input)(state3.context.value0);
            }
            ;
            return text5("");
          };
          var initialState = function(input3) {
            return {
              context: Nothing.value,
              initialized: false,
              input: input3
            };
          };
          var handleAction = function(v1) {
            if (v1 instanceof Initialize3) {
              return discard6(subscribe1(v)(Update.create))(function() {
                return bind15(map117(v.select)(getStore3))(function(context) {
                  return modify_5(function(v2) {
                    var $39 = {};
                    for (var $40 in v2) {
                      if ({}.hasOwnProperty.call(v2, $40)) {
                        $39[$40] = v2[$40];
                      }
                      ;
                    }
                    ;
                    $39.context = new Just(context);
                    return $39;
                  });
                });
              });
            }
            ;
            if (v1 instanceof Receive4) {
              return bind15(gets3(function(v2) {
                return v2.input;
              }))(function(oldInput) {
                return unless3(unsafeRefEq(oldInput)(v1.value0))(modify_5(function(v2) {
                  var $42 = {};
                  for (var $43 in v2) {
                    if ({}.hasOwnProperty.call(v2, $43)) {
                      $42[$43] = v2[$43];
                    }
                    ;
                  }
                  ;
                  $42.input = v1.value0;
                  return $42;
                }));
              });
            }
            ;
            if (v1 instanceof Update) {
              return bind15(gets3(function(v2) {
                return v2.context;
              }))(function(v2) {
                if (v2 instanceof Just && unsafeRefEq(v2.value0)(v1.value0)) {
                  return pure20(unit);
                }
                ;
                return modify_5(function(v3) {
                  var $48 = {};
                  for (var $49 in v3) {
                    if ({}.hasOwnProperty.call(v3, $49)) {
                      $48[$49] = v3[$49];
                    }
                    ;
                  }
                  ;
                  $48.context = new Just(v1.value0);
                  return $48;
                });
              });
            }
            ;
            if (v1 instanceof Raise3) {
              return raise(v1.value0);
            }
            ;
            throw new Error("Failed pattern match at Halogen.Store.Connect (line 74, column 18 - line 91, column 21): " + [v1.constructor.name]);
          };
          return mkComponent({
            initialState,
            render,
            "eval": mkEval({
              handleAction,
              handleQuery: query4($$Proxy.value)(unit),
              initialize: new Just(Initialize3.value),
              finalize: Nothing.value,
              receive: function($53) {
                return Just.create(Receive4.create($53));
              }
            })
          });
        };
      };
    };
  };

  // output/Data.Lens.Prism/index.js
  var identity21 = /* @__PURE__ */ identity(categoryFn);
  var prism = function(to2) {
    return function(fro) {
      return function(dictChoice) {
        var Profunctor0 = dictChoice.Profunctor0();
        var dimap3 = dimap(Profunctor0);
        var right2 = right(dictChoice);
        var rmap5 = rmap2(Profunctor0);
        return function(pab) {
          return dimap3(fro)(either(identity21)(identity21))(right2(rmap5(to2)(pab)));
        };
      };
    };
  };

  // output/Network.RemoteData/index.js
  var NotAsked = /* @__PURE__ */ function() {
    function NotAsked2() {
    }
    ;
    NotAsked2.value = new NotAsked2();
    return NotAsked2;
  }();
  var Loading2 = /* @__PURE__ */ function() {
    function Loading3() {
    }
    ;
    Loading3.value = new Loading3();
    return Loading3;
  }();
  var Failure = /* @__PURE__ */ function() {
    function Failure2(value0) {
      this.value0 = value0;
    }
    ;
    Failure2.create = function(value0) {
      return new Failure2(value0);
    };
    return Failure2;
  }();
  var Success2 = /* @__PURE__ */ function() {
    function Success3(value0) {
      this.value0 = value0;
    }
    ;
    Success3.create = function(value0) {
      return new Success3(value0);
    };
    return Success3;
  }();
  var toMaybe2 = function(v) {
    if (v instanceof Success2) {
      return new Just(v.value0);
    }
    ;
    return Nothing.value;
  };
  var fromMaybe2 = function(v) {
    if (v instanceof Nothing) {
      return NotAsked.value;
    }
    ;
    if (v instanceof Just) {
      return new Success2(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Network.RemoteData (line 129, column 1 - line 129, column 51): " + [v.constructor.name]);
  };
  var _Success = function(dictChoice) {
    var unwrap15 = function(v) {
      if (v instanceof Success2) {
        return new Right(v.value0);
      }
      ;
      return new Left(v);
    };
    return prism(Success2.create)(unwrap15)(dictChoice);
  };

  // output/Conduit.Page.Editor/index.js
  var value16 = /* @__PURE__ */ value13(isPropString);
  var bind16 = /* @__PURE__ */ bind(bindMaybe);
  var pure21 = /* @__PURE__ */ pure(applicativeMaybe);
  var slot4 = /* @__PURE__ */ slot()({
    reflectSymbol: function() {
      return "tagInput";
    }
  })(ordUnit);
  var fromFoldable9 = /* @__PURE__ */ fromFoldable5(foldableArray)(ordTag);
  var composeKleisli4 = /* @__PURE__ */ composeKleisli(bindEither);
  var required5 = /* @__PURE__ */ required4(eqString)(monoidString);
  var coerce7 = /* @__PURE__ */ coerce();
  var pure111 = /* @__PURE__ */ pure(applicativeEither);
  var bind17 = /* @__PURE__ */ bind(bindHalogenM);
  var gets4 = /* @__PURE__ */ gets(monadStateHalogenM);
  var map47 = /* @__PURE__ */ map(functorMaybe);
  var discard7 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_6 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var for_3 = /* @__PURE__ */ for_(applicativeHalogenM)(foldableMaybe);
  var validate2 = /* @__PURE__ */ validate()()()();
  var map118 = /* @__PURE__ */ map(functorArray);
  var modify8 = /* @__PURE__ */ modify2(monadStateHalogenM);
  var when3 = /* @__PURE__ */ when(applicativeHalogenM);
  var notEq2 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(eqSlug));
  var toUnfoldable7 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
  var bodyIsSymbol3 = {
    reflectSymbol: function() {
      return "body";
    }
  };
  var mapRecordWithIndexCons2 = /* @__PURE__ */ mapRecordWithIndexCons(bodyIsSymbol3);
  var constMapping2 = /* @__PURE__ */ constMapping(mappingMkFieldStateFieldS);
  var descriptionIsSymbol2 = {
    reflectSymbol: function() {
      return "description";
    }
  };
  var mapRecordWithIndexCons1 = /* @__PURE__ */ mapRecordWithIndexCons(descriptionIsSymbol2);
  var tagListIsSymbol = {
    reflectSymbol: function() {
      return "tagList";
    }
  };
  var mapRecordWithIndexCons22 = /* @__PURE__ */ mapRecordWithIndexCons(tagListIsSymbol);
  var titleIsSymbol = {
    reflectSymbol: function() {
      return "title";
    }
  };
  var mapRecordWithIndexCons3 = /* @__PURE__ */ mapRecordWithIndexCons(titleIsSymbol);
  var mkFieldStates12 = /* @__PURE__ */ mkFieldStates1(/* @__PURE__ */ hmapRecord()(/* @__PURE__ */ mapRecordWithIndexCons2(constMapping2)(/* @__PURE__ */ mapRecordWithIndexCons1(constMapping2)(/* @__PURE__ */ mapRecordWithIndexCons22(constMapping2)(/* @__PURE__ */ mapRecordWithIndexCons3(constMapping2)(mapRecordWithIndexNil)()())()())()())()()));
  var mkFieldActions12 = /* @__PURE__ */ mkFieldActions1(/* @__PURE__ */ hmapWithIndexRecord()(/* @__PURE__ */ mapRecordWithIndexCons2(/* @__PURE__ */ mappingWithIndexMkFieldAc(bodyIsSymbol3)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons1(/* @__PURE__ */ mappingWithIndexMkFieldAc(descriptionIsSymbol2)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons22(/* @__PURE__ */ mappingWithIndexMkFieldAc(tagListIsSymbol)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons3(/* @__PURE__ */ mappingWithIndexMkFieldAc(titleIsSymbol)(refl)())(mapRecordWithIndexNil)()())()())()())()()));
  var hfoldlRecordWithIndex2 = /* @__PURE__ */ hfoldlRecordWithIndex();
  var foldlRecordCons2 = /* @__PURE__ */ foldlRecordCons(bodyIsSymbol3)();
  var foldlRecordCons1 = /* @__PURE__ */ foldlRecordCons(descriptionIsSymbol2)();
  var foldlRecordCons22 = /* @__PURE__ */ foldlRecordCons(tagListIsSymbol)();
  var foldlRecordCons3 = /* @__PURE__ */ foldlRecordCons(titleIsSymbol)();
  var mkFieldResults12 = /* @__PURE__ */ mkFieldResults1(/* @__PURE__ */ hfoldlRecordWithIndex2(/* @__PURE__ */ foldlRecordCons2(/* @__PURE__ */ foldingWithIndexMkFieldRe(bodyIsSymbol3)(refl)()())(/* @__PURE__ */ foldlRecordCons1(/* @__PURE__ */ foldingWithIndexMkFieldRe(descriptionIsSymbol2)(refl)()())(/* @__PURE__ */ foldlRecordCons22(/* @__PURE__ */ foldingWithIndexMkFieldRe(tagListIsSymbol)(refl)()())(/* @__PURE__ */ foldlRecordCons3(/* @__PURE__ */ foldingWithIndexMkFieldRe(titleIsSymbol)(refl)()())(foldlRecordNil))))));
  var mkFieldOutputs12 = /* @__PURE__ */ mkFieldOutputs1(/* @__PURE__ */ hfoldlRecordWithIndex2(/* @__PURE__ */ foldlRecordCons2(/* @__PURE__ */ foldingWithIndexMkFieldOu(bodyIsSymbol3)(refl)()())(/* @__PURE__ */ foldlRecordCons1(/* @__PURE__ */ foldingWithIndexMkFieldOu(descriptionIsSymbol2)(refl)()())(/* @__PURE__ */ foldlRecordCons22(/* @__PURE__ */ foldingWithIndexMkFieldOu(tagListIsSymbol)(refl)()())(/* @__PURE__ */ foldlRecordCons3(/* @__PURE__ */ foldingWithIndexMkFieldOu(titleIsSymbol)(refl)()())(foldlRecordNil))))));
  var mkConfig12 = /* @__PURE__ */ mkConfig1(/* @__PURE__ */ defaultsRecord()());
  var mempty3 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidRecord()(/* @__PURE__ */ monoidRecordCons(bodyIsSymbol3)(monoidString)()(/* @__PURE__ */ monoidRecordCons(descriptionIsSymbol2)(monoidString)()(/* @__PURE__ */ monoidRecordCons(tagListIsSymbol)(monoidArray)()(/* @__PURE__ */ monoidRecordCons(titleIsSymbol)(monoidString)()(monoidRecordNil))))));
  var selectEq2 = /* @__PURE__ */ selectEq(/* @__PURE__ */ eqMaybe(/* @__PURE__ */ eqRec()(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(eqRowNil)()({
    reflectSymbol: function() {
      return "username";
    }
  })(eqUsername))()({
    reflectSymbol: function() {
      return "image";
    }
  })(/* @__PURE__ */ eqMaybe(eqAvatar)))()({
    reflectSymbol: function() {
      return "bio";
    }
  })(/* @__PURE__ */ eqMaybe(eqString)))));
  var Initialize4 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive5 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var Eval2 = /* @__PURE__ */ function() {
    function Eval6(value0) {
      this.value0 = value0;
    }
    ;
    Eval6.create = function(value0) {
      return new Eval6(value0);
    };
    return Eval6;
  }();
  var HandleTagInput = /* @__PURE__ */ function() {
    function HandleTagInput2(value0) {
      this.value0 = value0;
    }
    ;
    HandleTagInput2.create = function(value0) {
      return new HandleTagInput2(value0);
    };
    return HandleTagInput2;
  }();
  var DisableOnClick = /* @__PURE__ */ function() {
    function DisableOnClick5() {
    }
    ;
    DisableOnClick5.value = new DisableOnClick5();
    return DisableOnClick5;
  }();
  var component2 = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var component1 = component(MonadEffect0);
    var formless2 = formless(MonadEffect0)(mkFieldStates12)(mkFieldActions12)(mkFieldResults12)(mkFieldOutputs12)(mkConfig12);
    var connect2 = connect(MonadEffect0);
    return function(dictMonadStore) {
      var connect1 = connect2(dictMonadStore);
      return function(dictNavigate) {
        var navigate2 = navigate(navigateHalogenM(dictNavigate));
        return function(dictManageArticle) {
          var manageArticleHalogenM2 = manageArticleHalogenM(dictManageArticle);
          var createArticle2 = createArticle(manageArticleHalogenM2);
          var updateArticle2 = updateArticle(manageArticleHalogenM2);
          var getArticle2 = getArticle(manageArticleHalogenM2);
          var render = function(v) {
            var container = function(form2) {
              return div3([css("editor-page")])([div3([css("container page")])([div3([css("row")])([div3([css("col-md-10 offset-md-1 col-xs-12")])(form2)])])]);
            };
            return div_([header(v.currentUser)(Editor.value), container([form([onSubmit(v.form.formActions.handleSubmit)])([fieldset_([textInput({
              state: v.form.fields.title,
              action: v.form.actions.title
            })([placeholder3("Article Title")]), textInput({
              state: v.form.fields.description,
              action: v.form.actions.description
            })([placeholder3("What's this article about?")]), fieldset([css("form-group")])([textarea([css("form-control form-control-lg"), placeholder3("Write your article (in markdown)"), value16(v.form.fields.body.value), rows4(8), onValueInput(v.form.actions.body.handleChange), onBlur(v.form.actions.body.handleBlur)]), maybeElem(bind16(v.form.fields.body.result)(either(pure21)($$const(Nothing.value))))(function(err) {
              return div3([css("error-messages")])([text5(errorToString(err))]);
            })]), slot4($$Proxy.value)(unit)(component1)({
              tags: fromFoldable9(v.form.fields.tagList.value)
            })(HandleTagInput.create), submitButton(function() {
              var v1 = toMaybe2(v.article);
              if (v1 instanceof Nothing) {
                return "Publish";
              }
              ;
              if (v1 instanceof Just) {
                return "Commit changes";
              }
              ;
              throw new Error("Failed pattern match at Conduit.Page.Editor (line 187, column 42 - line 189, column 50): " + [v1.constructor.name]);
            }())(function() {
              if (v.form.fields.body.result instanceof Just && (v.form.fields.body.result.value0 instanceof Right && (v.form.fields.title.result instanceof Just && (v.form.fields.title.result.value0 instanceof Right && (v.form.fields.description.result instanceof Just && (v.form.fields.description.result.value0 instanceof Right && (v.form.fields.tagList.result instanceof Just && (v.form.fields.tagList.result.value0 instanceof Right && v.click)))))))) {
                return true;
              }
              ;
              return false;
            }())(DisableOnClick.value)])])])]);
          };
          var handleQuery = function() {
            var validation2 = {
              title: composeKleisli4(required5)(minLength3(1)),
              description: composeKleisli4(required5)(minLength3(1)),
              body: composeKleisli4(required5)(minLength3(3)),
              tagList: function($317) {
                return pure111(coerce7($317));
              }
            };
            var onSubmit2 = function(article2) {
              return bind17(gets4(function(v) {
                return v.form.input;
              }))(function(mbSlug) {
                return bind17(function() {
                  if (mbSlug instanceof Nothing) {
                    return createArticle2(article2);
                  }
                  ;
                  if (mbSlug instanceof Just) {
                    return updateArticle2(mbSlug.value0)(article2);
                  }
                  ;
                  throw new Error("Failed pattern match at Conduit.Page.Editor (line 142, column 34 - line 144, column 50): " + [mbSlug.constructor.name]);
                }())(function(mbArticleWithMetadata) {
                  var slug2 = map47(function(v) {
                    return v.slug;
                  })(mbArticleWithMetadata);
                  return discard7(modify_6(function(v) {
                    var $265 = {};
                    for (var $266 in v) {
                      if ({}.hasOwnProperty.call(v, $266)) {
                        $265[$266] = v[$266];
                      }
                      ;
                    }
                    ;
                    $265.article = fromMaybe2(mbArticleWithMetadata);
                    $265.form = function() {
                      var $262 = {};
                      for (var $263 in v.form) {
                        if ({}.hasOwnProperty.call(v.form, $263)) {
                          $262[$263] = v["form"][$263];
                        }
                        ;
                      }
                      ;
                      $262.input = slug2;
                      return $262;
                    }();
                    return $265;
                  }))(function() {
                    return for_3(slug2)(function($318) {
                      return navigate2(ViewArticle.create($318));
                    });
                  });
                });
              });
            };
            return handleSubmitValidate(onSubmit2)(validate2)(validation2);
          }();
          var handleAction = function(v) {
            if (v instanceof Initialize4) {
              return bind17(gets4(function(v1) {
                return v1.form.input;
              }))(function(mbSlug) {
                return for_3(mbSlug)(function(slug2) {
                  return discard7(modify_6(function(v1) {
                    var $269 = {};
                    for (var $270 in v1) {
                      if ({}.hasOwnProperty.call(v1, $270)) {
                        $269[$270] = v1[$270];
                      }
                      ;
                    }
                    ;
                    $269.article = Loading2.value;
                    return $269;
                  }))(function() {
                    return bind17(getArticle2(slug2))(function(mbArticle) {
                      return discard7(modify_6(function(v1) {
                        var $272 = {};
                        for (var $273 in v1) {
                          if ({}.hasOwnProperty.call(v1, $273)) {
                            $272[$273] = v1[$273];
                          }
                          ;
                        }
                        ;
                        $272.article = fromMaybe2(mbArticle);
                        return $272;
                      }))(function() {
                        return for_3(mbArticle)(function(v1) {
                          return bind17(gets4(function(v2) {
                            return v2.form;
                          }))(function(v2) {
                            var newFields = function() {
                              var $289 = {};
                              for (var $290 in v2.fields) {
                                if ({}.hasOwnProperty.call(v2.fields, $290)) {
                                  $289[$290] = v2["fields"][$290];
                                }
                                ;
                              }
                              ;
                              $289.title = function() {
                                var $277 = {};
                                for (var $278 in v2.fields.title) {
                                  if ({}.hasOwnProperty.call(v2.fields.title, $278)) {
                                    $277[$278] = v2["fields"]["title"][$278];
                                  }
                                  ;
                                }
                                ;
                                $277.value = v1.title;
                                return $277;
                              }();
                              $289.description = function() {
                                var $280 = {};
                                for (var $281 in v2.fields.description) {
                                  if ({}.hasOwnProperty.call(v2.fields.description, $281)) {
                                    $280[$281] = v2["fields"]["description"][$281];
                                  }
                                  ;
                                }
                                ;
                                $280.value = v1.description;
                                return $280;
                              }();
                              $289.body = function() {
                                var $283 = {};
                                for (var $284 in v2.fields.body) {
                                  if ({}.hasOwnProperty.call(v2.fields.body, $284)) {
                                    $283[$284] = v2["fields"]["body"][$284];
                                  }
                                  ;
                                }
                                ;
                                $283.value = v1.body;
                                return $283;
                              }();
                              $289.tagList = function() {
                                var $286 = {};
                                for (var $287 in v2.fields.tagList) {
                                  if ({}.hasOwnProperty.call(v2.fields.tagList, $287)) {
                                    $286[$287] = v2["fields"]["tagList"][$287];
                                  }
                                  ;
                                }
                                ;
                                $286.value = map118(Tag)(v1.tagList);
                                return $286;
                              }();
                              return $289;
                            }();
                            return handleAction(v2.formActions.setFields(newFields));
                          });
                        });
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v instanceof Receive5) {
              return bind17(modify8(function(v1) {
                var $298 = {};
                for (var $299 in v1) {
                  if ({}.hasOwnProperty.call(v1, $299)) {
                    $298[$299] = v1[$299];
                  }
                  ;
                }
                ;
                $298.currentUser = v.value0.context;
                $298.form = v.value0.input;
                return $298;
              }))(function(state3) {
                return when3(notEq2(v.value0.input.input)(state3.form.input))(handleAction(Initialize4.value));
              });
            }
            ;
            if (v instanceof Eval2) {
              return $$eval(v.value0);
            }
            ;
            if (v instanceof HandleTagInput) {
              if (v.value0 instanceof TagAdded) {
                return bind17(gets4(function(v1) {
                  return v1.form.actions.tagList;
                }))(function(tagList) {
                  return handleAction(tagList.handleChange(toUnfoldable7(v.value0.value1)));
                });
              }
              ;
              if (v.value0 instanceof TagRemoved) {
                return bind17(gets4(function(v1) {
                  return v1.form.actions.tagList;
                }))(function(tagList) {
                  return handleAction(tagList.handleChange(toUnfoldable7(v.value0.value1)));
                });
              }
              ;
              throw new Error("Failed pattern match at Conduit.Page.Editor (line 127, column 27 - line 133, column 67): " + [v.value0.constructor.name]);
            }
            ;
            if (v instanceof DisableOnClick) {
              return modify_6(function(st) {
                var $311 = {};
                for (var $312 in st) {
                  if ({}.hasOwnProperty.call(st, $312)) {
                    $311[$312] = st[$312];
                  }
                  ;
                }
                ;
                $311.click = false;
                return $311;
              });
            }
            ;
            throw new Error("Failed pattern match at Conduit.Page.Editor (line 99, column 18 - line 135, column 61): " + [v.constructor.name]);
          };
          return formless2({
            liftAction: Eval2.create
          })(mempty3)(connect1(selectEq2(function(v) {
            return v.currentUser;
          }))(mkComponent({
            initialState: function(v) {
              return {
                article: NotAsked.value,
                currentUser: v.context,
                form: v.input,
                click: true
              };
            },
            render,
            "eval": mkEval({
              finalize: defaultEval.finalize,
              receive: function($319) {
                return Just.create(Receive5.create($319));
              },
              initialize: new Just(Initialize4.value),
              handleAction,
              handleQuery
            })
          })));
        };
      };
    };
  };

  // output/Conduit.Capability.Resource.Tag/index.js
  var lift8 = /* @__PURE__ */ lift(monadTransHalogenM);
  var getAllTags = function(dict) {
    return dict.getAllTags;
  };
  var manageTagHalogenM = function(dictManageTag) {
    return {
      getAllTags: lift8(dictManageTag.Monad0())(getAllTags(dictManageTag)),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };

  // output/Data.Lens.Fold/index.js
  var unwrap12 = /* @__PURE__ */ unwrap();
  var foldMapOf = /* @__PURE__ */ under()()(Forget);
  var preview = function(p2) {
    var $135 = foldMapOf(p2)(function($137) {
      return First(Just.create($137));
    });
    return function($136) {
      return unwrap12($135($136));
    };
  };

  // output/Data.Lens.Setter/index.js
  var over5 = function(l) {
    return l;
  };
  var set2 = function(l) {
    return function(b2) {
      return over5(l)($$const(b2));
    };
  };

  // output/Conduit.Component.Part.FavoriteButton/index.js
  var show6 = /* @__PURE__ */ show(showInt);
  var bind18 = /* @__PURE__ */ bind(bindHalogenM);
  var get6 = /* @__PURE__ */ get(monadStateHalogenM);
  var for_4 = /* @__PURE__ */ for_(applicativeHalogenM)(foldableMaybe);
  var wanderForget2 = /* @__PURE__ */ wanderForget(monoidFirst);
  var when4 = /* @__PURE__ */ when(applicativeHalogenM);
  var lift9 = /* @__PURE__ */ lift(monadTransHalogenM);
  var modify_7 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var Icon = /* @__PURE__ */ function() {
    function Icon2() {
    }
    ;
    Icon2.value = new Icon2();
    return Icon2;
  }();
  var Medium = /* @__PURE__ */ function() {
    function Medium2() {
    }
    ;
    Medium2.value = new Medium2();
    return Medium2;
  }();
  var favoriteButton = function(buttonSize) {
    return function(favoriteAct) {
      return function(unfavoriteAct) {
        return function(article2) {
          return button([css("btn btn-sm " + function() {
            if (article2.favorited) {
              return "btn-primary";
            }
            ;
            return "btn-outline-primary";
          }()), onClick(function(v) {
            if (article2.favorited) {
              return unfavoriteAct;
            }
            ;
            return favoriteAct;
          })])([i([css("ion-heart")])([]), span_([text5(function() {
            if (article2.favorited && buttonSize instanceof Medium) {
              return " Unfavorite Article";
            }
            ;
            if (buttonSize instanceof Medium) {
              return " Favorite Article";
            }
            ;
            return " ";
          }())]), span4([css("counter")])([text5(function() {
            if (buttonSize instanceof Icon) {
              return " " + show6(article2.favoritesCount);
            }
            ;
            return " (" + (show6(article2.favoritesCount) + ")");
          }())])]);
        };
      };
    };
  };
  var act = function(dictManageArticle) {
    var lift1 = lift9(dictManageArticle.Monad0());
    return function(cond) {
      return function(f) {
        return function(_article3) {
          var _article1 = _article3(wanderForget2);
          var _article22 = _article3(wanderFunction);
          return bind18(get6)(function(st) {
            return for_4(preview(_article1)(st))(function(article2) {
              return when4(cond(article2))(bind18(lift1(f(article2.slug)))(function(mbArticle) {
                return for_4(mbArticle)(function() {
                  var $39 = set2(_article22);
                  return function($40) {
                    return modify_7($39($40));
                  };
                }());
              }));
            });
          });
        };
      };
    };
  };
  var favorite = function(dictManageArticle) {
    var act1 = act(dictManageArticle);
    var favoriteArticle2 = favoriteArticle(dictManageArticle);
    return function(_article3) {
      return act1(function($41) {
        return !function(v) {
          return v.favorited;
        }($41);
      })(favoriteArticle2)(function(dictWander) {
        return _article3(dictWander);
      });
    };
  };
  var unfavorite = function(dictManageArticle) {
    var act1 = act(dictManageArticle);
    var unfavoriteArticle2 = unfavoriteArticle(dictManageArticle);
    return function(_article3) {
      return act1(function(v) {
        return v.favorited;
      })(unfavoriteArticle2)(function(dictWander) {
        return _article3(dictWander);
      });
    };
  };

  // output/Conduit.Component.HTML.ArticleList/index.js
  var guard5 = /* @__PURE__ */ guard(monoidString);
  var show7 = /* @__PURE__ */ show(showInt);
  var map48 = /* @__PURE__ */ map(functorArray);
  var enumFromTo2 = /* @__PURE__ */ enumFromTo(enumInt)(unfoldable1Array);
  var div4 = /* @__PURE__ */ div(euclideanRingInt);
  var mapFlipped5 = /* @__PURE__ */ mapFlipped(functorArray);
  var length10 = /* @__PURE__ */ length2(foldableArray)(semiringInt);
  var renderTag = function(tag) {
    return li([css("tag-default tag-pill tag-outline")])([text5(tag)]);
  };
  var renderPageLink = function(act3) {
    return function(activeIndex) {
      return function(index6) {
        return li([css("page-item" + guard5(activeIndex === index6)(" active"))])([a([css("page-link"), href4(""), onClick(act3(index6))])([text5(show7(index6))])]);
      };
    };
  };
  var renderPagination = function(act3) {
    return function(currentIndex) {
      return function(v) {
        return whenElem(v.total > 20)(function(v1) {
          return ul([css("pagination")])(map48(renderPageLink(act3)(currentIndex))(enumFromTo2(1)(div4(v.total)(20))));
        });
      };
    };
  };
  var articlePreview = function(favoriteAct) {
    return function(unfavoriteAct) {
      return function(ix4) {
        return function(article2) {
          return div3([css("article-preview")])([div3([css("article-meta")])([a([safeHref(new Profile(article2.author.username))])([img([src9(toStringWithDefault(article2.author.image)), alt10(toString2(article2.author.username))])]), div3([css("info")])([a([css("author"), safeHref(new Profile(article2.author.username))])([text5(toString2(article2.author.username))]), span4([css("date")])([text5(toDisplayWeekName(article2.createdAt))])]), div3([css("pull-xs-right")])([favoriteButton(Icon.value)(favoriteAct(ix4))(unfavoriteAct(ix4))(article2)])]), a([css("preview-link"), safeHref(new ViewArticle(article2.slug))])([h1_([text5(article2.title)]), p_([text5(article2.description)]), span_([text5("Read more...")]), ul([css("tag-list")])(mapFlipped5(article2.tagList)(renderTag))])]);
        };
      };
    };
  };
  var articleList = function(favoriteAct) {
    return function(unfavoriteAct) {
      var text6 = function(str) {
        return div3([css("article-preview")])([text5(str)]);
      };
      return function(v) {
        if (v instanceof NotAsked) {
          return text6("Articles not yet loaded");
        }
        ;
        if (v instanceof Loading2) {
          return text6("Loading...");
        }
        ;
        if (v instanceof Failure) {
          return text6("Error loading articles: " + v.value0);
        }
        ;
        if (v instanceof Success2 && length10(v.value0.body) === 0) {
          return text6("No articles are here...yet!");
        }
        ;
        if (v instanceof Success2) {
          return div_(mapWithIndex(articlePreview(favoriteAct)(unfavoriteAct))(v.value0.body));
        }
        ;
        throw new Error("Failed pattern match at Conduit.Component.HTML.ArticleList (line 31, column 41 - line 42, column 78): " + [v.constructor.name]);
      };
    };
  };

  // output/Conduit.Component.HTML.Footer/index.js
  var footer2 = /* @__PURE__ */ footer_([/* @__PURE__ */ div3([/* @__PURE__ */ css("container")])([/* @__PURE__ */ a([/* @__PURE__ */ css("logo-font"), /* @__PURE__ */ href4("/")])([/* @__PURE__ */ text5("conduit")]), /* @__PURE__ */ span4([/* @__PURE__ */ css("attribution")])([/* @__PURE__ */ text5("An interactive learning project from "), /* @__PURE__ */ a([/* @__PURE__ */ href4("https://thinkster.io")])([/* @__PURE__ */ text5("Thinkster")]), /* @__PURE__ */ text5(". Code & design licensed under MIT. Implemented by "), /* @__PURE__ */ a([/* @__PURE__ */ href4("https://thomashoneyman.com")])([/* @__PURE__ */ text5("Thomas Honeyman")]), /* @__PURE__ */ text5(".")])])]);

  // output/Data.Lens.AffineTraversal/index.js
  var identity22 = /* @__PURE__ */ identity(categoryFn);
  var fanout2 = /* @__PURE__ */ fanout(categoryFn)(strongFn);
  var affineTraversal$prime = function(to2) {
    return function(dictStrong) {
      var second3 = second(dictStrong);
      return function(dictChoice) {
        var dimap3 = dimap(dictChoice.Profunctor0());
        var right2 = right(dictChoice);
        return function(pab) {
          return dimap3(to2)(function(v) {
            return either(identity22)(v.value0)(v.value1);
          })(second3(right2(pab)));
        };
      };
    };
  };
  var affineTraversal = function(set3) {
    return function(pre2) {
      return function(dictStrong) {
        return function(dictChoice) {
          return affineTraversal$prime(fanout2(set3)(pre2))(dictStrong)(dictChoice);
        };
      };
    };
  };

  // output/Data.Lens.Lens/index.js
  var lens$prime = function(to2) {
    return function(dictStrong) {
      var dimap3 = dimap(dictStrong.Profunctor0());
      var first2 = first(dictStrong);
      return function(pab) {
        return dimap3(to2)(function(v) {
          return v.value1(v.value0);
        })(first2(pab));
      };
    };
  };
  var lens = function(get13) {
    return function(set3) {
      return function(dictStrong) {
        return lens$prime(function(s) {
          return new Tuple(get13(s), function(b2) {
            return set3(s)(b2);
          });
        })(dictStrong);
      };
    };
  };

  // output/Data.Lens.Index/index.js
  var ix = function(dict) {
    return dict.ix;
  };
  var indexArray = {
    ix: function(n) {
      return function(dictStrong) {
        return function(dictChoice) {
          var set3 = function(s) {
            return function(b2) {
              return fromMaybe(s)(updateAt(n)(b2)(s));
            };
          };
          var pre2 = function(s) {
            return maybe(new Left(s))(Right.create)(index(s)(n));
          };
          return affineTraversal(set3)(pre2)(dictStrong)(dictChoice);
        };
      };
    }
  };

  // output/Data.Lens.Record/index.js
  var prop5 = function(dictIsSymbol) {
    var get13 = get3(dictIsSymbol)();
    var set3 = set(dictIsSymbol)()();
    return function() {
      return function() {
        return function(l) {
          return function(dictStrong) {
            return lens(get13(l))(flip(set3(l)))(dictStrong);
          };
        };
      };
    };
  };

  // output/Web.UIEvent.MouseEvent/index.js
  var toEvent2 = unsafeCoerce2;

  // output/Conduit.Page.Home/index.js
  var prop6 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "articles";
    }
  })()();
  var prop12 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "body";
    }
  })()();
  var ix2 = /* @__PURE__ */ ix(indexArray);
  var guard6 = /* @__PURE__ */ guard(monoidString);
  var map49 = /* @__PURE__ */ map(functorArray);
  var discard8 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var $$void9 = /* @__PURE__ */ $$void(functorHalogenM);
  var bind19 = /* @__PURE__ */ bind(bindHalogenM);
  var get7 = /* @__PURE__ */ get(monadStateHalogenM);
  var modify_8 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var when5 = /* @__PURE__ */ when(applicativeHalogenM);
  var modify9 = /* @__PURE__ */ modify2(monadStateHalogenM);
  var selectEq3 = /* @__PURE__ */ selectEq(/* @__PURE__ */ eqMaybe(/* @__PURE__ */ eqRec()(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(eqRowNil)()({
    reflectSymbol: function() {
      return "username";
    }
  })(eqUsername))()({
    reflectSymbol: function() {
      return "image";
    }
  })(/* @__PURE__ */ eqMaybe(eqAvatar)))()({
    reflectSymbol: function() {
      return "bio";
    }
  })(/* @__PURE__ */ eqMaybe(eqString)))));
  var Feed2 = /* @__PURE__ */ function() {
    function Feed3() {
    }
    ;
    Feed3.value = new Feed3();
    return Feed3;
  }();
  var Global = /* @__PURE__ */ function() {
    function Global2() {
    }
    ;
    Global2.value = new Global2();
    return Global2;
  }();
  var Tag2 = /* @__PURE__ */ function() {
    function Tag3(value0) {
      this.value0 = value0;
    }
    ;
    Tag3.create = function(value0) {
      return new Tag3(value0);
    };
    return Tag3;
  }();
  var Initialize5 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive6 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var ShowTab = /* @__PURE__ */ function() {
    function ShowTab2(value0) {
      this.value0 = value0;
    }
    ;
    ShowTab2.create = function(value0) {
      return new ShowTab2(value0);
    };
    return ShowTab2;
  }();
  var LoadFeed = /* @__PURE__ */ function() {
    function LoadFeed2(value0) {
      this.value0 = value0;
    }
    ;
    LoadFeed2.create = function(value0) {
      return new LoadFeed2(value0);
    };
    return LoadFeed2;
  }();
  var LoadArticles = /* @__PURE__ */ function() {
    function LoadArticles3(value0) {
      this.value0 = value0;
    }
    ;
    LoadArticles3.create = function(value0) {
      return new LoadArticles3(value0);
    };
    return LoadArticles3;
  }();
  var LoadTags = /* @__PURE__ */ function() {
    function LoadTags2() {
    }
    ;
    LoadTags2.value = new LoadTags2();
    return LoadTags2;
  }();
  var FavoriteArticle = /* @__PURE__ */ function() {
    function FavoriteArticle4(value0) {
      this.value0 = value0;
    }
    ;
    FavoriteArticle4.create = function(value0) {
      return new FavoriteArticle4(value0);
    };
    return FavoriteArticle4;
  }();
  var UnfavoriteArticle = /* @__PURE__ */ function() {
    function UnfavoriteArticle4(value0) {
      this.value0 = value0;
    }
    ;
    UnfavoriteArticle4.create = function(value0) {
      return new UnfavoriteArticle4(value0);
    };
    return UnfavoriteArticle4;
  }();
  var SelectPage = /* @__PURE__ */ function() {
    function SelectPage3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SelectPage3.create = function(value0) {
      return function(value1) {
        return new SelectPage3(value0, value1);
      };
    };
    return SelectPage3;
  }();
  var tabIsTag = function(v) {
    if (v instanceof Tag2) {
      return true;
    }
    ;
    return false;
  };
  var eqTab = {
    eq: function(x) {
      return function(y) {
        if (x instanceof Feed2 && y instanceof Feed2) {
          return true;
        }
        ;
        if (x instanceof Global && y instanceof Global) {
          return true;
        }
        ;
        if (x instanceof Tag2 && y instanceof Tag2) {
          return x.value0 === y.value0;
        }
        ;
        return false;
      };
    }
  };
  var eq13 = /* @__PURE__ */ eq(eqTab);
  var notEq3 = /* @__PURE__ */ notEq(eqTab);
  var _article = function(i2) {
    return function(dictWander) {
      var Strong0 = dictWander.Strong0();
      var Choice1 = dictWander.Choice1();
      var $160 = prop6($$Proxy.value)(Strong0);
      var $161 = _Success(Choice1);
      var $162 = prop12($$Proxy.value)(Strong0);
      var $163 = ix2(i2)(Strong0)(Choice1);
      return function($164) {
        return $160($161($162($163($164))));
      };
    };
  };
  var component3 = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var liftEffect10 = liftEffect(monadEffectHalogenM(MonadEffect0));
    var connect2 = connect(MonadEffect0);
    return function(dictMonadStore) {
      var connect1 = connect2(dictMonadStore);
      return function(dictNavigate) {
        return function(dictManageTag) {
          var getAllTags2 = getAllTags(manageTagHalogenM(dictManageTag));
          return function(dictManageArticle) {
            var manageArticleHalogenM2 = manageArticleHalogenM(dictManageArticle);
            var getCurrentUserFeed2 = getCurrentUserFeed(manageArticleHalogenM2);
            var getArticles2 = getArticles(manageArticleHalogenM2);
            var favorite2 = favorite(dictManageArticle);
            var unfavorite2 = unfavorite(dictManageArticle);
            var render = function(v) {
              var tab = function(thisTab) {
                return li([css("nav-item")])([a([css("nav-link" + guard6(eq13(v.tab)(thisTab))(" active")), onClick(function(v1) {
                  return new ShowTab(thisTab);
                }), href4("#/")])(function() {
                  if (thisTab instanceof Feed2) {
                    return [text5("Your Feed")];
                  }
                  ;
                  if (thisTab instanceof Global) {
                    return [text5("Global Feed")];
                  }
                  ;
                  if (thisTab instanceof Tag2) {
                    return [i([css("ion-pound")])([]), text5("#" + thisTab.value0)];
                  }
                  ;
                  throw new Error("Failed pattern match at Conduit.Page.Home (line 221, column 13 - line 231, column 18): " + [thisTab.constructor.name]);
                }())]);
              };
              var renderTag2 = function(tag) {
                return a([css("tag-default tag-pill"), onClick(function(v1) {
                  return new ShowTab(new Tag2(tag));
                }), href4("#/")])([text5(tag)]);
              };
              var renderTags = function(v1) {
                if (v1 instanceof NotAsked) {
                  return div_([text5("Tags not loaded")]);
                }
                ;
                if (v1 instanceof Loading2) {
                  return div_([text5("Loading Tags")]);
                }
                ;
                if (v1 instanceof Failure) {
                  return div_([text5("Failed loading tags: " + v1.value0)]);
                }
                ;
                if (v1 instanceof Success2) {
                  return div3([css("tag-list")])(map49(renderTag2)(v1.value0));
                }
                ;
                throw new Error("Failed pattern match at Conduit.Page.Home (line 234, column 18 - line 247, column 37): " + [v1.constructor.name]);
              };
              var mainView = div3([css("col-md-9")])([div3([css("feed-toggle")])([ul([css("nav nav-pills outline-active")])([whenElem(isJust(v.currentUser))(function(v1) {
                return tab(Feed2.value);
              }), tab(Global.value), whenElem(tabIsTag(v.tab))(function(v1) {
                return tab(v.tab);
              })])]), articleList(FavoriteArticle.create)(UnfavoriteArticle.create)(v.articles), maybeElem(toMaybe2(v.articles))(function(paginated) {
                return renderPagination(SelectPage.create)(v.page)(paginated);
              })]);
              var banner = div3([css("banner")])([div3([css("container")])([h1([css("logo-font")])([text5("conduit")]), p_([text5("A place to share your knowledge.")])])]);
              return div_([header(v.currentUser)(Home.value), div3([css("home-page")])([whenElem(isNothing(v.currentUser))(function(v1) {
                return banner;
              }), div3([css("container page")])([div3([css("row")])([mainView, div3([css("col-md-3")])([div3([css("sidebar")])([p_([text5("Popular Tags")]), renderTags(v.tags)])])])])]), footer2]);
            };
            var initialState = function(v) {
              return {
                tags: NotAsked.value,
                articles: NotAsked.value,
                tab: Global.value,
                currentUser: v.context,
                page: 1
              };
            };
            var handleAction = function(v) {
              if (v instanceof Initialize5) {
                return discard8($$void9(fork(handleAction(LoadTags.value))))(function() {
                  return bind19(get7)(function(state3) {
                    if (state3.currentUser instanceof Nothing) {
                      return $$void9(fork(handleAction(new LoadArticles(noArticleParams))));
                    }
                    ;
                    return discard8($$void9(fork(handleAction(new LoadFeed({
                      limit: new Just(20),
                      offset: Nothing.value
                    })))))(function() {
                      return modify_8(function(v1) {
                        var $117 = {};
                        for (var $118 in v1) {
                          if ({}.hasOwnProperty.call(v1, $118)) {
                            $117[$118] = v1[$118];
                          }
                          ;
                        }
                        ;
                        $117.tab = Feed2.value;
                        return $117;
                      });
                    });
                  });
                });
              }
              ;
              if (v instanceof Receive6) {
                return modify_8(function(v1) {
                  var $120 = {};
                  for (var $121 in v1) {
                    if ({}.hasOwnProperty.call(v1, $121)) {
                      $120[$121] = v1[$121];
                    }
                    ;
                  }
                  ;
                  $120.currentUser = v.value0.context;
                  return $120;
                });
              }
              ;
              if (v instanceof LoadTags) {
                return discard8(modify_8(function(v1) {
                  var $125 = {};
                  for (var $126 in v1) {
                    if ({}.hasOwnProperty.call(v1, $126)) {
                      $125[$126] = v1[$126];
                    }
                    ;
                  }
                  ;
                  $125.tags = Loading2.value;
                  return $125;
                }))(function() {
                  return bind19(getAllTags2)(function(tags) {
                    return modify_8(function(v1) {
                      var $128 = {};
                      for (var $129 in v1) {
                        if ({}.hasOwnProperty.call(v1, $129)) {
                          $128[$129] = v1[$129];
                        }
                        ;
                      }
                      ;
                      $128.tags = fromMaybe2(tags);
                      return $128;
                    });
                  });
                });
              }
              ;
              if (v instanceof LoadFeed) {
                return discard8(modify_8(function(v1) {
                  var $131 = {};
                  for (var $132 in v1) {
                    if ({}.hasOwnProperty.call(v1, $132)) {
                      $131[$132] = v1[$132];
                    }
                    ;
                  }
                  ;
                  $131.articles = Loading2.value;
                  return $131;
                }))(function() {
                  return bind19(getCurrentUserFeed2(v.value0))(function(articles) {
                    return modify_8(function(v1) {
                      var $134 = {};
                      for (var $135 in v1) {
                        if ({}.hasOwnProperty.call(v1, $135)) {
                          $134[$135] = v1[$135];
                        }
                        ;
                      }
                      ;
                      $134.articles = fromMaybe2(articles);
                      return $134;
                    });
                  });
                });
              }
              ;
              if (v instanceof LoadArticles) {
                return discard8(modify_8(function(v1) {
                  var $138 = {};
                  for (var $139 in v1) {
                    if ({}.hasOwnProperty.call(v1, $139)) {
                      $138[$139] = v1[$139];
                    }
                    ;
                  }
                  ;
                  $138.articles = Loading2.value;
                  return $138;
                }))(function() {
                  return bind19(getArticles2(v.value0))(function(articles) {
                    return modify_8(function(v1) {
                      var $141 = {};
                      for (var $142 in v1) {
                        if ({}.hasOwnProperty.call(v1, $142)) {
                          $141[$142] = v1[$142];
                        }
                        ;
                      }
                      ;
                      $141.articles = fromMaybe2(articles);
                      return $141;
                    });
                  });
                });
              }
              ;
              if (v instanceof ShowTab) {
                return bind19(get7)(function(st) {
                  return when5(notEq3(v.value0)(st.tab))(discard8(modify_8(function(v1) {
                    var $145 = {};
                    for (var $146 in v1) {
                      if ({}.hasOwnProperty.call(v1, $146)) {
                        $145[$146] = v1[$146];
                      }
                      ;
                    }
                    ;
                    $145.tab = v.value0;
                    return $145;
                  }))(function() {
                    return $$void9(fork(handleAction(function() {
                      if (v.value0 instanceof Feed2) {
                        return new LoadFeed({
                          limit: new Just(20),
                          offset: Nothing.value
                        });
                      }
                      ;
                      if (v.value0 instanceof Global) {
                        return new LoadArticles({
                          tag: noArticleParams.tag,
                          author: noArticleParams.author,
                          favorited: noArticleParams.favorited,
                          offset: noArticleParams.offset,
                          limit: new Just(20)
                        });
                      }
                      ;
                      if (v.value0 instanceof Tag2) {
                        return new LoadArticles({
                          author: noArticleParams.author,
                          favorited: noArticleParams.favorited,
                          offset: noArticleParams.offset,
                          tag: new Just(v.value0.value0),
                          limit: new Just(20)
                        });
                      }
                      ;
                      throw new Error("Failed pattern match at Conduit.Page.Home (line 130, column 38 - line 136, column 79): " + [v.value0.constructor.name]);
                    }())));
                  }));
                });
              }
              ;
              if (v instanceof FavoriteArticle) {
                return favorite2(function(dictWander) {
                  return _article(v.value0)(dictWander);
                });
              }
              ;
              if (v instanceof UnfavoriteArticle) {
                return unfavorite2(function(dictWander) {
                  return _article(v.value0)(dictWander);
                });
              }
              ;
              if (v instanceof SelectPage) {
                return discard8(liftEffect10(preventDefault(toEvent2(v.value1))))(function() {
                  return bind19(modify9(function(v1) {
                    var $153 = {};
                    for (var $154 in v1) {
                      if ({}.hasOwnProperty.call(v1, $154)) {
                        $153[$154] = v1[$154];
                      }
                      ;
                    }
                    ;
                    $153.page = v.value0;
                    return $153;
                  }))(function(st) {
                    var offset = new Just(v.value0 * 20 | 0);
                    return $$void9(fork(handleAction(function() {
                      if (st.tab instanceof Feed2) {
                        return new LoadFeed({
                          limit: new Just(20),
                          offset
                        });
                      }
                      ;
                      if (st.tab instanceof Global) {
                        return new LoadArticles({
                          tag: noArticleParams.tag,
                          author: noArticleParams.author,
                          favorited: noArticleParams.favorited,
                          limit: new Just(20),
                          offset
                        });
                      }
                      ;
                      if (st.tab instanceof Tag2) {
                        return new LoadArticles({
                          author: noArticleParams.author,
                          favorited: noArticleParams.favorited,
                          tag: new Just(st.tab.value0),
                          limit: new Just(20),
                          offset
                        });
                      }
                      ;
                      throw new Error("Failed pattern match at Conduit.Page.Home (line 148, column 36 - line 154, column 94): " + [st.tab.constructor.name]);
                    }())));
                  });
                });
              }
              ;
              throw new Error("Failed pattern match at Conduit.Page.Home (line 97, column 18 - line 154, column 94): " + [v.constructor.name]);
            };
            return connect1(selectEq3(function(v) {
              return v.currentUser;
            }))(mkComponent({
              initialState,
              render,
              "eval": mkEval({
                handleQuery: defaultEval.handleQuery,
                finalize: defaultEval.finalize,
                handleAction,
                receive: function($165) {
                  return Just.create(Receive6.create($165));
                },
                initialize: new Just(Initialize5.value)
              })
            }));
          };
        };
      };
    };
  };

  // output/Conduit.Capability.Resource.User/index.js
  var lift10 = /* @__PURE__ */ lift(monadTransHalogenM);
  var updateUser = function(dict) {
    return dict.updateUser;
  };
  var unfollowUser = function(dict) {
    return dict.unfollowUser;
  };
  var registerUser = function(dict) {
    return dict.registerUser;
  };
  var loginUser = function(dict) {
    return dict.loginUser;
  };
  var getCurrentUser = function(dict) {
    return dict.getCurrentUser;
  };
  var getAuthor = function(dict) {
    return dict.getAuthor;
  };
  var followUser = function(dict) {
    return dict.followUser;
  };
  var manageUserHalogenM = function(dictManageUser) {
    var lift1 = lift10(dictManageUser.Monad0());
    return {
      loginUser: function() {
        var $19 = loginUser(dictManageUser);
        return function($20) {
          return lift1($19($20));
        };
      }(),
      registerUser: function() {
        var $21 = registerUser(dictManageUser);
        return function($22) {
          return lift1($21($22));
        };
      }(),
      getCurrentUser: lift1(getCurrentUser(dictManageUser)),
      getAuthor: function() {
        var $23 = getAuthor(dictManageUser);
        return function($24) {
          return lift1($23($24));
        };
      }(),
      updateUser: function() {
        var $25 = updateUser(dictManageUser);
        return function($26) {
          return lift1($25($26));
        };
      }(),
      followUser: function() {
        var $27 = followUser(dictManageUser);
        return function($28) {
          return lift1($27($28));
        };
      }(),
      unfollowUser: function() {
        var $29 = unfollowUser(dictManageUser);
        return function($30) {
          return lift1($29($30));
        };
      }(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };

  // output/Conduit.Page.Login/index.js
  var type_21 = /* @__PURE__ */ type_17(isPropInputType);
  var composeKleisli5 = /* @__PURE__ */ composeKleisli(bindEither);
  var required6 = /* @__PURE__ */ required4(eqString)(monoidString);
  var composeKleisli1 = /* @__PURE__ */ composeKleisli(bindHalogenM);
  var modify_9 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var discard9 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var bind20 = /* @__PURE__ */ bind(bindHalogenM);
  var gets5 = /* @__PURE__ */ gets(monadStateHalogenM);
  var when6 = /* @__PURE__ */ when(applicativeHalogenM);
  var validate3 = /* @__PURE__ */ validate()()()();
  var emailIsSymbol3 = {
    reflectSymbol: function() {
      return "email";
    }
  };
  var mapRecordWithIndexCons4 = /* @__PURE__ */ mapRecordWithIndexCons(emailIsSymbol3);
  var constMapping3 = /* @__PURE__ */ constMapping(mappingMkFieldStateFieldS);
  var passwordIsSymbol2 = {
    reflectSymbol: function() {
      return "password";
    }
  };
  var mapRecordWithIndexCons12 = /* @__PURE__ */ mapRecordWithIndexCons(passwordIsSymbol2);
  var mkFieldStates13 = /* @__PURE__ */ mkFieldStates1(/* @__PURE__ */ hmapRecord()(/* @__PURE__ */ mapRecordWithIndexCons4(constMapping3)(/* @__PURE__ */ mapRecordWithIndexCons12(constMapping3)(mapRecordWithIndexNil)()())()()));
  var mkFieldActions13 = /* @__PURE__ */ mkFieldActions1(/* @__PURE__ */ hmapWithIndexRecord()(/* @__PURE__ */ mapRecordWithIndexCons4(/* @__PURE__ */ mappingWithIndexMkFieldAc(emailIsSymbol3)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons12(/* @__PURE__ */ mappingWithIndexMkFieldAc(passwordIsSymbol2)(refl)())(mapRecordWithIndexNil)()())()()));
  var hfoldlRecordWithIndex3 = /* @__PURE__ */ hfoldlRecordWithIndex();
  var foldlRecordCons4 = /* @__PURE__ */ foldlRecordCons(emailIsSymbol3)();
  var foldlRecordCons12 = /* @__PURE__ */ foldlRecordCons(passwordIsSymbol2)();
  var mkFieldResults13 = /* @__PURE__ */ mkFieldResults1(/* @__PURE__ */ hfoldlRecordWithIndex3(/* @__PURE__ */ foldlRecordCons4(/* @__PURE__ */ foldingWithIndexMkFieldRe(emailIsSymbol3)(refl)()())(/* @__PURE__ */ foldlRecordCons12(/* @__PURE__ */ foldingWithIndexMkFieldRe(passwordIsSymbol2)(refl)()())(foldlRecordNil))));
  var mkFieldOutputs13 = /* @__PURE__ */ mkFieldOutputs1(/* @__PURE__ */ hfoldlRecordWithIndex3(/* @__PURE__ */ foldlRecordCons4(/* @__PURE__ */ foldingWithIndexMkFieldOu(emailIsSymbol3)(refl)()())(/* @__PURE__ */ foldlRecordCons12(/* @__PURE__ */ foldingWithIndexMkFieldOu(passwordIsSymbol2)(refl)()())(foldlRecordNil))));
  var mkConfig13 = /* @__PURE__ */ mkConfig1(/* @__PURE__ */ defaultsRecord()());
  var mempty4 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidRecord()(/* @__PURE__ */ monoidRecordCons(emailIsSymbol3)(monoidString)()(/* @__PURE__ */ monoidRecordCons(passwordIsSymbol2)(monoidString)()(monoidRecordNil))));
  var Receive7 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var Eval3 = /* @__PURE__ */ function() {
    function Eval6(value0) {
      this.value0 = value0;
    }
    ;
    Eval6.create = function(value0) {
      return new Eval6(value0);
    };
    return Eval6;
  }();
  var DisableOnClick2 = /* @__PURE__ */ function() {
    function DisableOnClick5() {
    }
    ;
    DisableOnClick5.value = new DisableOnClick5();
    return DisableOnClick5;
  }();
  var component4 = function(dictMonadAff) {
    var formless2 = formless(dictMonadAff.MonadEffect0())(mkFieldStates13)(mkFieldActions13)(mkFieldResults13)(mkFieldOutputs13)(mkConfig13);
    return function(dictNavigate) {
      var navigate2 = navigate(navigateHalogenM(dictNavigate));
      return function(dictManageUser) {
        var render = function(v) {
          var container = function(html2) {
            return div3([css("auth-page")])([header(Nothing.value)(Login.value), div3([css("container page")])([div3([css("row")])([div3([css("col-md-6 offset-md-3 col-xs12")])(html2)])])]);
          };
          return container([h1([css("text-xs-center")])([text5("Sign In")]), p([css("text-xs-center")])([a([safeHref(Register.value)])([text5("Need an account?")])]), form([onSubmit(v.form.formActions.handleSubmit)])([whenElem(v.loginError)(function(v1) {
            return div3([css("error-messages")])([text5("Email or password is invalid")]);
          }), fieldset_([textInput({
            state: v.form.fields.email,
            action: v.form.actions.email
          })([placeholder3("Email"), type_21(InputEmail.value)]), textInput({
            state: v.form.fields.password,
            action: v.form.actions.password
          })([placeholder3("Password"), type_21(InputPassword.value)]), submitButton("Log in")(function() {
            if (v.form.fields.email.result instanceof Just && (v.form.fields.email.result.value0 instanceof Right && (v.form.fields.password.result instanceof Just && (v.form.fields.password.result.value0 instanceof Right && v.click)))) {
              return true;
            }
            ;
            return false;
          }())(DisableOnClick2.value)])])]);
        };
        var handleQuery = function() {
          var validation2 = {
            email: composeKleisli5(required6)(composeKleisli5(minLength3(3))(emailFormat)),
            password: composeKleisli5(required6)(composeKleisli5(minLength3(2))(maxLength3(20)))
          };
          var onSubmit2 = composeKleisli1(loginUser(manageUserHalogenM(dictManageUser)))(function(v) {
            if (v instanceof Nothing) {
              return modify_9(function(v1) {
                var $136 = {};
                for (var $137 in v1) {
                  if ({}.hasOwnProperty.call(v1, $137)) {
                    $136[$137] = v1[$137];
                  }
                  ;
                }
                ;
                $136.loginError = true;
                return $136;
              });
            }
            ;
            if (v instanceof Just) {
              return discard9(modify_9(function(v1) {
                var $139 = {};
                for (var $140 in v1) {
                  if ({}.hasOwnProperty.call(v1, $140)) {
                    $139[$140] = v1[$140];
                  }
                  ;
                }
                ;
                $139.loginError = false;
                return $139;
              }))(function() {
                return bind20(gets5(function(v1) {
                  return v1.form.input;
                }))(function(v1) {
                  return when6(v1.redirect)(navigate2(Home.value));
                });
              });
            }
            ;
            throw new Error("Failed pattern match at Conduit.Page.Login (line 81, column 32 - line 87, column 40): " + [v.constructor.name]);
          });
          return handleSubmitValidate(onSubmit2)(validate3)(validation2);
        }();
        var handleAction = function(v) {
          if (v instanceof Receive7) {
            return modify_9(function(v1) {
              var $146 = {};
              for (var $147 in v1) {
                if ({}.hasOwnProperty.call(v1, $147)) {
                  $146[$147] = v1[$147];
                }
                ;
              }
              ;
              $146.form = v.value0;
              return $146;
            });
          }
          ;
          if (v instanceof Eval3) {
            return $$eval(v.value0);
          }
          ;
          if (v instanceof DisableOnClick2) {
            return modify_9(function(st) {
              var $151 = {};
              for (var $152 in st) {
                if ({}.hasOwnProperty.call(st, $152)) {
                  $151[$152] = st[$152];
                }
                ;
              }
              ;
              $151.click = false;
              return $151;
            });
          }
          ;
          throw new Error("Failed pattern match at Conduit.Page.Login (line 71, column 18 - line 74, column 61): " + [v.constructor.name]);
        };
        return formless2({
          liftAction: Eval3.create
        })(mempty4)(mkComponent({
          initialState: function(context) {
            return {
              form: context,
              loginError: false,
              click: true
            };
          },
          render,
          "eval": mkEval({
            initialize: defaultEval.initialize,
            finalize: defaultEval.finalize,
            receive: function($154) {
              return Just.create(Receive7.create($154));
            },
            handleAction,
            handleQuery
          })
        }));
      };
    };
  };

  // output/Conduit.Component.Part.FollowButton/index.js
  var bind21 = /* @__PURE__ */ bind(bindHalogenM);
  var get8 = /* @__PURE__ */ get(monadStateHalogenM);
  var for_5 = /* @__PURE__ */ for_(applicativeHalogenM)(foldableMaybe);
  var wanderForget3 = /* @__PURE__ */ wanderForget(monoidFirst);
  var when7 = /* @__PURE__ */ when(applicativeHalogenM);
  var lift11 = /* @__PURE__ */ lift(monadTransHalogenM);
  var modify_10 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var eq8 = /* @__PURE__ */ eq(eqRelation);
  var followButton = function(followAct) {
    return function(unfollowAct) {
      return function(author) {
        if (author.relation instanceof Following) {
          return button([css("btn btn-sm action-btn btn-secondary"), onClick(function(v) {
            return unfollowAct;
          })])([text5(" Unfollow " + toString2(author.username))]);
        }
        ;
        if (author.relation instanceof NotFollowing) {
          return button([css("btn btn-sm action-btn btn-outline-secondary"), onClick(function(v) {
            return followAct;
          })])([i([css("ion-plus-round")])([]), text5(" Follow " + toString2(author.username))]);
        }
        ;
        if (author.relation instanceof You) {
          return text5("");
        }
        ;
        throw new Error("Failed pattern match at Conduit.Component.Part.FollowButton (line 30, column 45 - line 47, column 20): " + [author.relation.constructor.name]);
      };
    };
  };
  var act2 = function(dictManageUser) {
    var lift1 = lift11(dictManageUser.Monad0());
    return function(cond) {
      return function(f) {
        return function(_author2) {
          var _author1 = _author2(wanderForget3);
          var _author22 = _author2(wanderFunction);
          return bind21(get8)(function(st) {
            return for_5(preview(_author1)(st))(function(author) {
              return when7(cond(author))(bind21(lift1(f(author.username)))(function(mbProfile) {
                return for_5(mbProfile)(function() {
                  var $31 = set2(_author22);
                  return function($32) {
                    return modify_10($31($32));
                  };
                }());
              }));
            });
          });
        };
      };
    };
  };
  var follow = function(dictManageUser) {
    var act1 = act2(dictManageUser);
    var followUser2 = followUser(dictManageUser);
    return function(_author2) {
      return act1(function() {
        var $33 = eq8(NotFollowing.value);
        return function($34) {
          return $33(function(v) {
            return v.relation;
          }($34));
        };
      }())(followUser2)(function(dictWander) {
        return _author2(dictWander);
      });
    };
  };
  var unfollow = function(dictManageUser) {
    var act1 = act2(dictManageUser);
    var unfollowUser2 = unfollowUser(dictManageUser);
    return function(_author2) {
      return act1(function() {
        var $35 = eq8(Following.value);
        return function($36) {
          return $35(function(v) {
            return v.relation;
          }($36));
        };
      }())(unfollowUser2)(function(dictWander) {
        return _author2(dictWander);
      });
    };
  };

  // output/Conduit.Page.Profile/index.js
  var prop7 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "author";
    }
  })()();
  var prop13 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "articles";
    }
  })()();
  var prop23 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "body";
    }
  })()();
  var ix3 = /* @__PURE__ */ ix(indexArray);
  var bindFlipped11 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var guard7 = /* @__PURE__ */ guard(monoidString);
  var bind22 = /* @__PURE__ */ bind(bindHalogenM);
  var get9 = /* @__PURE__ */ get(monadStateHalogenM);
  var discard10 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var $$void10 = /* @__PURE__ */ $$void(functorHalogenM);
  var when8 = /* @__PURE__ */ when(applicativeHalogenM);
  var modify_11 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var notEq4 = /* @__PURE__ */ notEq(eqUsername);
  var eqMaybe2 = /* @__PURE__ */ eqMaybe(/* @__PURE__ */ eqRec()(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(eqRowNil)()({
    reflectSymbol: function() {
      return "username";
    }
  })(eqUsername))()({
    reflectSymbol: function() {
      return "image";
    }
  })(/* @__PURE__ */ eqMaybe(eqAvatar)))()({
    reflectSymbol: function() {
      return "bio";
    }
  })(/* @__PURE__ */ eqMaybe(eqString))));
  var notEq12 = /* @__PURE__ */ notEq(eqMaybe2);
  var modify10 = /* @__PURE__ */ modify2(monadStateHalogenM);
  var selectEq4 = /* @__PURE__ */ selectEq(eqMaybe2);
  var ArticlesTab = /* @__PURE__ */ function() {
    function ArticlesTab2() {
    }
    ;
    ArticlesTab2.value = new ArticlesTab2();
    return ArticlesTab2;
  }();
  var FavoritesTab = /* @__PURE__ */ function() {
    function FavoritesTab2() {
    }
    ;
    FavoritesTab2.value = new FavoritesTab2();
    return FavoritesTab2;
  }();
  var Initialize6 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive8 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var LoadArticles2 = /* @__PURE__ */ function() {
    function LoadArticles3() {
    }
    ;
    LoadArticles3.value = new LoadArticles3();
    return LoadArticles3;
  }();
  var LoadFavorites = /* @__PURE__ */ function() {
    function LoadFavorites2() {
    }
    ;
    LoadFavorites2.value = new LoadFavorites2();
    return LoadFavorites2;
  }();
  var LoadAuthor = /* @__PURE__ */ function() {
    function LoadAuthor2() {
    }
    ;
    LoadAuthor2.value = new LoadAuthor2();
    return LoadAuthor2;
  }();
  var FollowAuthor = /* @__PURE__ */ function() {
    function FollowAuthor3() {
    }
    ;
    FollowAuthor3.value = new FollowAuthor3();
    return FollowAuthor3;
  }();
  var UnfollowAuthor = /* @__PURE__ */ function() {
    function UnfollowAuthor3() {
    }
    ;
    UnfollowAuthor3.value = new UnfollowAuthor3();
    return UnfollowAuthor3;
  }();
  var FavoriteArticle2 = /* @__PURE__ */ function() {
    function FavoriteArticle4(value0) {
      this.value0 = value0;
    }
    ;
    FavoriteArticle4.create = function(value0) {
      return new FavoriteArticle4(value0);
    };
    return FavoriteArticle4;
  }();
  var UnfavoriteArticle2 = /* @__PURE__ */ function() {
    function UnfavoriteArticle4(value0) {
      this.value0 = value0;
    }
    ;
    UnfavoriteArticle4.create = function(value0) {
      return new UnfavoriteArticle4(value0);
    };
    return UnfavoriteArticle4;
  }();
  var SelectPage2 = /* @__PURE__ */ function() {
    function SelectPage3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    SelectPage3.create = function(value0) {
      return function(value1) {
        return new SelectPage3(value0, value1);
      };
    };
    return SelectPage3;
  }();
  var eqTab2 = {
    eq: function(x) {
      return function(y) {
        if (x instanceof ArticlesTab && y instanceof ArticlesTab) {
          return true;
        }
        ;
        if (x instanceof FavoritesTab && y instanceof FavoritesTab) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq9 = /* @__PURE__ */ eq(eqTab2);
  var notEq22 = /* @__PURE__ */ notEq(eqTab2);
  var _author = function(dictWander) {
    var $161 = prop7($$Proxy.value)(dictWander.Strong0());
    var $162 = _Success(dictWander.Choice1());
    return function($163) {
      return $161($162($163));
    };
  };
  var _article2 = function(i2) {
    return function(dictWander) {
      var Strong0 = dictWander.Strong0();
      var Choice1 = dictWander.Choice1();
      var $164 = prop13($$Proxy.value)(Strong0);
      var $165 = _Success(Choice1);
      var $166 = prop23($$Proxy.value)(Strong0);
      var $167 = ix3(i2)(Strong0)(Choice1);
      return function($168) {
        return $164($165($166($167($168))));
      };
    };
  };
  var component5 = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var liftEffect10 = liftEffect(monadEffectHalogenM(MonadEffect0));
    var connect2 = connect(MonadEffect0);
    return function(dictMonadStore) {
      var connect1 = connect2(dictMonadStore);
      return function(dictManageUser) {
        var getAuthor2 = getAuthor(manageUserHalogenM(dictManageUser));
        var follow2 = follow(dictManageUser);
        var unfollow2 = unfollow(dictManageUser);
        return function(dictManageArticle) {
          var getArticles2 = getArticles(manageArticleHalogenM(dictManageArticle));
          var favorite2 = favorite(dictManageArticle);
          var unfavorite2 = unfavorite(dictManageArticle);
          var render = function(state3) {
            var userInfo = div3([css("user-info")])([div3([css("container")])([div3([css("row")])([div3([css("col-xs-12 col-md-10 offset-md-1")])([img([css("user-img"), src9(toStringWithDefault(bindFlipped11(function(v) {
              return v.image;
            })(toMaybe2(state3.author))))]), h4_([text5(toString2(state3.username))]), maybeElem(bindFlipped11(function(v) {
              return v.bio;
            })(toMaybe2(state3.author)))(function(str) {
              return p_([text5(str)]);
            }), maybeElem(toMaybe2(state3.author))(followButton(FollowAuthor.value)(UnfollowAuthor.value))])])])]);
            var mkTab = function(thisTab) {
              return li([css("nav-item")])([function() {
                if (thisTab instanceof ArticlesTab) {
                  return a([css("nav-link" + guard7(eq9(state3.tab)(thisTab))(" active")), safeHref(new Profile(state3.username))])([text5("My Articles")]);
                }
                ;
                if (thisTab instanceof FavoritesTab) {
                  return a([css("nav-link" + guard7(eq9(state3.tab)(thisTab))(" active")), safeHref(new Favorites(state3.username))])([text5("My Favorites")]);
                }
                ;
                throw new Error("Failed pattern match at Conduit.Page.Profile (line 238, column 11 - line 250, column 43): " + [thisTab.constructor.name]);
              }()]);
            };
            var mainView = div3([css("col-xs-12 col-md-10 offset-md-1")])([div3([css("articles-toggle")])([ul([css("nav nav-pills outline-active")])([mkTab(ArticlesTab.value), mkTab(FavoritesTab.value)])]), whenElem(eq9(state3.tab)(ArticlesTab.value))(function(v) {
              return div_([articleList(FavoriteArticle2.create)(UnfavoriteArticle2.create)(state3.articles), maybeElem(toMaybe2(state3.articles))(function(paginated) {
                return renderPagination(SelectPage2.create)(state3.page)(paginated);
              })]);
            }), whenElem(eq9(state3.tab)(FavoritesTab.value))(function(v) {
              return div_([articleList(FavoriteArticle2.create)(UnfavoriteArticle2.create)(state3.favorites), maybeElem(toMaybe2(state3.favorites))(function(paginated) {
                return renderPagination(SelectPage2.create)(state3.page)(paginated);
              })]);
            })]);
            return div_([header(state3.currentUser)(new Profile(state3.username)), div3([css("profile-page")])([userInfo, div3([css("container")])([div3([css("row")])([mainView])])]), footer2]);
          };
          var initialState = function(v) {
            return {
              articles: NotAsked.value,
              favorites: NotAsked.value,
              author: NotAsked.value,
              currentUser: v.context,
              page: 1,
              tab: v.input.tab,
              username: v.input.username
            };
          };
          var handleAction = function(v) {
            if (v instanceof Initialize6) {
              return bind22(get9)(function(v1) {
                return discard10($$void10(fork(handleAction(LoadAuthor.value))))(function() {
                  return $$void10(fork(function() {
                    if (v1.tab instanceof ArticlesTab) {
                      return handleAction(LoadArticles2.value);
                    }
                    ;
                    if (v1.tab instanceof FavoritesTab) {
                      return handleAction(LoadFavorites.value);
                    }
                    ;
                    throw new Error("Failed pattern match at Conduit.Page.Profile (line 108, column 23 - line 110, column 51): " + [v1.tab.constructor.name]);
                  }()));
                });
              });
            }
            ;
            if (v instanceof Receive8) {
              return bind22(get9)(function(st) {
                return discard10(when8(notEq22(st.tab)(v.value0.input.tab))(discard10(modify_11(function(v1) {
                  var $118 = {};
                  for (var $119 in v1) {
                    if ({}.hasOwnProperty.call(v1, $119)) {
                      $118[$119] = v1[$119];
                    }
                    ;
                  }
                  ;
                  $118.tab = v.value0.input.tab;
                  return $118;
                }))(function() {
                  return $$void10(fork(function() {
                    if (v.value0.input.tab instanceof ArticlesTab) {
                      return handleAction(LoadArticles2.value);
                    }
                    ;
                    if (v.value0.input.tab instanceof FavoritesTab) {
                      return handleAction(LoadFavorites.value);
                    }
                    ;
                    throw new Error("Failed pattern match at Conduit.Page.Profile (line 116, column 25 - line 118, column 53): " + [v.value0.input.tab.constructor.name]);
                  }()));
                })))(function() {
                  return discard10(when8(notEq4(st.username)(v.value0.input.username))(discard10(modify_11(function(v1) {
                    var $122 = {};
                    for (var $123 in v1) {
                      if ({}.hasOwnProperty.call(v1, $123)) {
                        $122[$123] = v1[$123];
                      }
                      ;
                    }
                    ;
                    $122.username = v.value0.input.username;
                    return $122;
                  }))(function() {
                    return $$void10(fork(handleAction(Initialize6.value)));
                  })))(function() {
                    return when8(notEq12(st.currentUser)(v.value0.context))(modify_11(function(v1) {
                      var $125 = {};
                      for (var $126 in v1) {
                        if ({}.hasOwnProperty.call(v1, $126)) {
                          $125[$126] = v1[$126];
                        }
                        ;
                      }
                      ;
                      $125.currentUser = v.value0.context;
                      return $125;
                    }));
                  });
                });
              });
            }
            ;
            if (v instanceof LoadArticles2) {
              return bind22(modify10(function(v1) {
                var $133 = {};
                for (var $134 in v1) {
                  if ({}.hasOwnProperty.call(v1, $134)) {
                    $133[$134] = v1[$134];
                  }
                  ;
                }
                ;
                $133.articles = Loading2.value;
                return $133;
              }))(function(st) {
                var params2 = {
                  favorited: noArticleParams.favorited,
                  limit: noArticleParams.limit,
                  tag: noArticleParams.tag,
                  author: new Just(st.username),
                  offset: function() {
                    var $136 = st.page > 1;
                    if ($136) {
                      return new Just(st.page * 20 | 0);
                    }
                    ;
                    return Nothing.value;
                  }()
                };
                return bind22(getArticles2(params2))(function(articles) {
                  return modify_11(function(v1) {
                    var $137 = {};
                    for (var $138 in v1) {
                      if ({}.hasOwnProperty.call(v1, $138)) {
                        $137[$138] = v1[$138];
                      }
                      ;
                    }
                    ;
                    $137.articles = fromMaybe2(articles);
                    return $137;
                  });
                });
              });
            }
            ;
            if (v instanceof LoadFavorites) {
              return bind22(modify10(function(v1) {
                var $140 = {};
                for (var $141 in v1) {
                  if ({}.hasOwnProperty.call(v1, $141)) {
                    $140[$141] = v1[$141];
                  }
                  ;
                }
                ;
                $140.favorites = Loading2.value;
                return $140;
              }))(function(st) {
                var params2 = {
                  author: noArticleParams.author,
                  limit: noArticleParams.limit,
                  tag: noArticleParams.tag,
                  favorited: new Just(st.username),
                  offset: function() {
                    var $143 = st.page > 1;
                    if ($143) {
                      return new Just(st.page * 20 | 0);
                    }
                    ;
                    return Nothing.value;
                  }()
                };
                return bind22(getArticles2(params2))(function(favorites) {
                  return modify_11(function(v1) {
                    var $144 = {};
                    for (var $145 in v1) {
                      if ({}.hasOwnProperty.call(v1, $145)) {
                        $144[$145] = v1[$145];
                      }
                      ;
                    }
                    ;
                    $144.favorites = fromMaybe2(favorites);
                    return $144;
                  });
                });
              });
            }
            ;
            if (v instanceof LoadAuthor) {
              return bind22(modify10(function(v1) {
                var $147 = {};
                for (var $148 in v1) {
                  if ({}.hasOwnProperty.call(v1, $148)) {
                    $147[$148] = v1[$148];
                  }
                  ;
                }
                ;
                $147.author = Loading2.value;
                return $147;
              }))(function(st) {
                return bind22(getAuthor2(st.username))(function(author) {
                  return modify_11(function(v1) {
                    var $150 = {};
                    for (var $151 in v1) {
                      if ({}.hasOwnProperty.call(v1, $151)) {
                        $150[$151] = v1[$151];
                      }
                      ;
                    }
                    ;
                    $150.author = fromMaybe2(author);
                    return $150;
                  });
                });
              });
            }
            ;
            if (v instanceof FollowAuthor) {
              return follow2(function(dictWander) {
                return _author(dictWander);
              });
            }
            ;
            if (v instanceof UnfollowAuthor) {
              return unfollow2(function(dictWander) {
                return _author(dictWander);
              });
            }
            ;
            if (v instanceof FavoriteArticle2) {
              return favorite2(function(dictWander) {
                return _article2(v.value0)(dictWander);
              });
            }
            ;
            if (v instanceof UnfavoriteArticle2) {
              return unfavorite2(function(dictWander) {
                return _article2(v.value0)(dictWander);
              });
            }
            ;
            if (v instanceof SelectPage2) {
              return discard10(liftEffect10(preventDefault(toEvent2(v.value1))))(function() {
                return bind22(modify10(function(v1) {
                  var $155 = {};
                  for (var $156 in v1) {
                    if ({}.hasOwnProperty.call(v1, $156)) {
                      $155[$156] = v1[$156];
                    }
                    ;
                  }
                  ;
                  $155.page = v.value0;
                  return $155;
                }))(function(st) {
                  return $$void10(fork(handleAction(function() {
                    if (st.tab instanceof FavoritesTab) {
                      return LoadFavorites.value;
                    }
                    ;
                    if (st.tab instanceof ArticlesTab) {
                      return LoadArticles2.value;
                    }
                    ;
                    throw new Error("Failed pattern match at Conduit.Page.Profile (line 165, column 36 - line 167, column 36): " + [st.tab.constructor.name]);
                  }())));
                });
              });
            }
            ;
            throw new Error("Failed pattern match at Conduit.Page.Profile (line 104, column 18 - line 167, column 36): " + [v.constructor.name]);
          };
          return connect1(selectEq4(function(v) {
            return v.currentUser;
          }))(mkComponent({
            initialState,
            render,
            "eval": mkEval({
              handleQuery: defaultEval.handleQuery,
              finalize: defaultEval.finalize,
              handleAction,
              receive: function($169) {
                return Just.create(Receive8.create($169));
              },
              initialize: new Just(Initialize6.value)
            })
          }));
        };
      };
    };
  };

  // output/Conduit.Page.Register/index.js
  var type_22 = /* @__PURE__ */ type_17(isPropInputType);
  var composeKleisli6 = /* @__PURE__ */ composeKleisli(bindEither);
  var required7 = /* @__PURE__ */ required4(eqString)(monoidString);
  var composeKleisli12 = /* @__PURE__ */ composeKleisli(bindHalogenM);
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var validate4 = /* @__PURE__ */ validate()()()();
  var modify_12 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var emailIsSymbol4 = {
    reflectSymbol: function() {
      return "email";
    }
  };
  var mapRecordWithIndexCons5 = /* @__PURE__ */ mapRecordWithIndexCons(emailIsSymbol4);
  var constMapping4 = /* @__PURE__ */ constMapping(mappingMkFieldStateFieldS);
  var passwordIsSymbol3 = {
    reflectSymbol: function() {
      return "password";
    }
  };
  var mapRecordWithIndexCons13 = /* @__PURE__ */ mapRecordWithIndexCons(passwordIsSymbol3);
  var usernameIsSymbol = {
    reflectSymbol: function() {
      return "username";
    }
  };
  var mapRecordWithIndexCons23 = /* @__PURE__ */ mapRecordWithIndexCons(usernameIsSymbol);
  var mkFieldStates14 = /* @__PURE__ */ mkFieldStates1(/* @__PURE__ */ hmapRecord()(/* @__PURE__ */ mapRecordWithIndexCons5(constMapping4)(/* @__PURE__ */ mapRecordWithIndexCons13(constMapping4)(/* @__PURE__ */ mapRecordWithIndexCons23(constMapping4)(mapRecordWithIndexNil)()())()())()()));
  var mkFieldActions14 = /* @__PURE__ */ mkFieldActions1(/* @__PURE__ */ hmapWithIndexRecord()(/* @__PURE__ */ mapRecordWithIndexCons5(/* @__PURE__ */ mappingWithIndexMkFieldAc(emailIsSymbol4)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons13(/* @__PURE__ */ mappingWithIndexMkFieldAc(passwordIsSymbol3)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons23(/* @__PURE__ */ mappingWithIndexMkFieldAc(usernameIsSymbol)(refl)())(mapRecordWithIndexNil)()())()())()()));
  var hfoldlRecordWithIndex4 = /* @__PURE__ */ hfoldlRecordWithIndex();
  var foldlRecordCons5 = /* @__PURE__ */ foldlRecordCons(emailIsSymbol4)();
  var foldlRecordCons13 = /* @__PURE__ */ foldlRecordCons(passwordIsSymbol3)();
  var foldlRecordCons23 = /* @__PURE__ */ foldlRecordCons(usernameIsSymbol)();
  var mkFieldResults14 = /* @__PURE__ */ mkFieldResults1(/* @__PURE__ */ hfoldlRecordWithIndex4(/* @__PURE__ */ foldlRecordCons5(/* @__PURE__ */ foldingWithIndexMkFieldRe(emailIsSymbol4)(refl)()())(/* @__PURE__ */ foldlRecordCons13(/* @__PURE__ */ foldingWithIndexMkFieldRe(passwordIsSymbol3)(refl)()())(/* @__PURE__ */ foldlRecordCons23(/* @__PURE__ */ foldingWithIndexMkFieldRe(usernameIsSymbol)(refl)()())(foldlRecordNil)))));
  var mkFieldOutputs14 = /* @__PURE__ */ mkFieldOutputs1(/* @__PURE__ */ hfoldlRecordWithIndex4(/* @__PURE__ */ foldlRecordCons5(/* @__PURE__ */ foldingWithIndexMkFieldOu(emailIsSymbol4)(refl)()())(/* @__PURE__ */ foldlRecordCons13(/* @__PURE__ */ foldingWithIndexMkFieldOu(passwordIsSymbol3)(refl)()())(/* @__PURE__ */ foldlRecordCons23(/* @__PURE__ */ foldingWithIndexMkFieldOu(usernameIsSymbol)(refl)()())(foldlRecordNil)))));
  var mkConfig14 = /* @__PURE__ */ mkConfig1(/* @__PURE__ */ defaultsRecord()());
  var mempty5 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidRecord()(/* @__PURE__ */ monoidRecordCons(emailIsSymbol4)(monoidString)()(/* @__PURE__ */ monoidRecordCons(passwordIsSymbol3)(monoidString)()(/* @__PURE__ */ monoidRecordCons(usernameIsSymbol)(monoidString)()(monoidRecordNil)))));
  var Receive9 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var Eval4 = /* @__PURE__ */ function() {
    function Eval6(value0) {
      this.value0 = value0;
    }
    ;
    Eval6.create = function(value0) {
      return new Eval6(value0);
    };
    return Eval6;
  }();
  var DisableOnClick3 = /* @__PURE__ */ function() {
    function DisableOnClick5() {
    }
    ;
    DisableOnClick5.value = new DisableOnClick5();
    return DisableOnClick5;
  }();
  var component6 = function(dictMonadAff) {
    var formless2 = formless(dictMonadAff.MonadEffect0())(mkFieldStates14)(mkFieldActions14)(mkFieldResults14)(mkFieldOutputs14)(mkConfig14);
    return function(dictManageUser) {
      var registerUser2 = registerUser(manageUserHalogenM(dictManageUser));
      return function(dictNavigate) {
        var navigate2 = navigate(navigateHalogenM(dictNavigate));
        var render = function(v) {
          var container = function(html2) {
            return div_([header(Nothing.value)(Register.value), div3([css("auth-page")])([div3([css("container page")])([div3([css("row")])([div3([css("col-md-6 offset-md-3 col-xs12")])(html2)])])])]);
          };
          return container([h1([css("text-xs-center")])([text5("Sign Up")]), p([css("text-xs-center")])([a([safeHref(Login.value)])([text5("Already have an account?")])]), form([onSubmit(v.form.formActions.handleSubmit)])([fieldset_([textInput({
            state: v.form.fields.username,
            action: v.form.actions.username
          })([placeholder3("Username")]), textInput({
            state: v.form.fields.email,
            action: v.form.actions.email
          })([placeholder3("Email"), type_22(InputEmail.value)]), textInput({
            state: v.form.fields.password,
            action: v.form.actions.password
          })([placeholder3("Password "), type_22(InputPassword.value)]), submitButton("Sign Up")(function() {
            if (v.form.fields.password.result instanceof Just && (v.form.fields.password.result.value0 instanceof Right && (v.form.fields.email.result instanceof Just && (v.form.fields.email.result.value0 instanceof Right && (v.form.fields.username.result instanceof Just && (v.form.fields.username.result.value0 instanceof Right && v.click)))))) {
              return true;
            }
            ;
            return false;
          }())(DisableOnClick3.value)])])]);
        };
        var handleQuery = function() {
          var validation2 = {
            username: composeKleisli6(required7)(usernameFormat),
            email: composeKleisli6(required7)(composeKleisli6(minLength3(3))(emailFormat)),
            password: composeKleisli6(required7)(composeKleisli6(minLength3(8))(maxLength3(20)))
          };
          var onSubmit2 = composeKleisli12(registerUser2)(traverse_4(function(v) {
            return navigate2(Home.value);
          }));
          return handleSubmitValidate(onSubmit2)(validate4)(validation2);
        }();
        var handleAction = function(v) {
          if (v instanceof Receive9) {
            return modify_12(function(st) {
              var $161 = {};
              for (var $162 in st) {
                if ({}.hasOwnProperty.call(st, $162)) {
                  $161[$162] = st[$162];
                }
                ;
              }
              ;
              $161.form = v.value0;
              return $161;
            });
          }
          ;
          if (v instanceof Eval4) {
            return $$eval(v.value0);
          }
          ;
          if (v instanceof DisableOnClick3) {
            return modify_12(function(st) {
              var $166 = {};
              for (var $167 in st) {
                if ({}.hasOwnProperty.call(st, $167)) {
                  $166[$167] = st[$167];
                }
                ;
              }
              ;
              $166.click = false;
              return $166;
            });
          }
          ;
          throw new Error("Failed pattern match at Conduit.Page.Register (line 67, column 18 - line 70, column 60): " + [v.constructor.name]);
        };
        return formless2({
          liftAction: Eval4.create
        })(mempty5)(mkComponent({
          initialState: function(form2) {
            return {
              form: form2,
              click: true
            };
          },
          render,
          "eval": mkEval({
            initialize: defaultEval.initialize,
            finalize: defaultEval.finalize,
            receive: function($169) {
              return Just.create(Receive9.create($169));
            },
            handleAction,
            handleQuery
          })
        }));
      };
    };
  };

  // output/Conduit.Page.Settings/index.js
  var _Success2 = /* @__PURE__ */ _Success(/* @__PURE__ */ choiceForget(monoidFirst));
  var type_23 = /* @__PURE__ */ type_17(isPropInputType);
  var toOptional2 = /* @__PURE__ */ toOptional(monoidString)(eqString);
  var composeKleisli7 = /* @__PURE__ */ composeKleisli(bindEither);
  var required8 = /* @__PURE__ */ required4(eqString)(monoidString);
  var pure23 = /* @__PURE__ */ pure(applicativeEither);
  var discard11 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var bind23 = /* @__PURE__ */ bind(bindHalogenM);
  var modify_13 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var validate5 = /* @__PURE__ */ validate()()()();
  var gets6 = /* @__PURE__ */ gets(monadStateHalogenM);
  var map50 = /* @__PURE__ */ map(functorMaybe);
  var unwrap13 = /* @__PURE__ */ unwrap();
  var pure112 = /* @__PURE__ */ pure(applicativeHalogenM);
  var bioIsSymbol2 = {
    reflectSymbol: function() {
      return "bio";
    }
  };
  var mapRecordWithIndexCons6 = /* @__PURE__ */ mapRecordWithIndexCons(bioIsSymbol2);
  var constMapping5 = /* @__PURE__ */ constMapping(mappingMkFieldStateFieldS);
  var emailIsSymbol5 = {
    reflectSymbol: function() {
      return "email";
    }
  };
  var mapRecordWithIndexCons14 = /* @__PURE__ */ mapRecordWithIndexCons(emailIsSymbol5);
  var imageIsSymbol2 = {
    reflectSymbol: function() {
      return "image";
    }
  };
  var mapRecordWithIndexCons24 = /* @__PURE__ */ mapRecordWithIndexCons(imageIsSymbol2);
  var passwordIsSymbol4 = {
    reflectSymbol: function() {
      return "password";
    }
  };
  var mapRecordWithIndexCons32 = /* @__PURE__ */ mapRecordWithIndexCons(passwordIsSymbol4);
  var usernameIsSymbol2 = {
    reflectSymbol: function() {
      return "username";
    }
  };
  var mapRecordWithIndexCons42 = /* @__PURE__ */ mapRecordWithIndexCons(usernameIsSymbol2);
  var mkFieldStates15 = /* @__PURE__ */ mkFieldStates1(/* @__PURE__ */ hmapRecord()(/* @__PURE__ */ mapRecordWithIndexCons6(constMapping5)(/* @__PURE__ */ mapRecordWithIndexCons14(constMapping5)(/* @__PURE__ */ mapRecordWithIndexCons24(constMapping5)(/* @__PURE__ */ mapRecordWithIndexCons32(constMapping5)(/* @__PURE__ */ mapRecordWithIndexCons42(constMapping5)(mapRecordWithIndexNil)()())()())()())()())()()));
  var mkFieldActions15 = /* @__PURE__ */ mkFieldActions1(/* @__PURE__ */ hmapWithIndexRecord()(/* @__PURE__ */ mapRecordWithIndexCons6(/* @__PURE__ */ mappingWithIndexMkFieldAc(bioIsSymbol2)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons14(/* @__PURE__ */ mappingWithIndexMkFieldAc(emailIsSymbol5)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons24(/* @__PURE__ */ mappingWithIndexMkFieldAc(imageIsSymbol2)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons32(/* @__PURE__ */ mappingWithIndexMkFieldAc(passwordIsSymbol4)(refl)())(/* @__PURE__ */ mapRecordWithIndexCons42(/* @__PURE__ */ mappingWithIndexMkFieldAc(usernameIsSymbol2)(refl)())(mapRecordWithIndexNil)()())()())()())()())()()));
  var hfoldlRecordWithIndex5 = /* @__PURE__ */ hfoldlRecordWithIndex();
  var foldlRecordCons6 = /* @__PURE__ */ foldlRecordCons(bioIsSymbol2)();
  var foldlRecordCons14 = /* @__PURE__ */ foldlRecordCons(emailIsSymbol5)();
  var foldlRecordCons24 = /* @__PURE__ */ foldlRecordCons(imageIsSymbol2)();
  var foldlRecordCons32 = /* @__PURE__ */ foldlRecordCons(passwordIsSymbol4)();
  var foldlRecordCons42 = /* @__PURE__ */ foldlRecordCons(usernameIsSymbol2)();
  var mkFieldResults15 = /* @__PURE__ */ mkFieldResults1(/* @__PURE__ */ hfoldlRecordWithIndex5(/* @__PURE__ */ foldlRecordCons6(/* @__PURE__ */ foldingWithIndexMkFieldRe(bioIsSymbol2)(refl)()())(/* @__PURE__ */ foldlRecordCons14(/* @__PURE__ */ foldingWithIndexMkFieldRe(emailIsSymbol5)(refl)()())(/* @__PURE__ */ foldlRecordCons24(/* @__PURE__ */ foldingWithIndexMkFieldRe(imageIsSymbol2)(refl)()())(/* @__PURE__ */ foldlRecordCons32(/* @__PURE__ */ foldingWithIndexMkFieldRe(passwordIsSymbol4)(refl)()())(/* @__PURE__ */ foldlRecordCons42(/* @__PURE__ */ foldingWithIndexMkFieldRe(usernameIsSymbol2)(refl)()())(foldlRecordNil)))))));
  var mkFieldOutputs15 = /* @__PURE__ */ mkFieldOutputs1(/* @__PURE__ */ hfoldlRecordWithIndex5(/* @__PURE__ */ foldlRecordCons6(/* @__PURE__ */ foldingWithIndexMkFieldOu(bioIsSymbol2)(refl)()())(/* @__PURE__ */ foldlRecordCons14(/* @__PURE__ */ foldingWithIndexMkFieldOu(emailIsSymbol5)(refl)()())(/* @__PURE__ */ foldlRecordCons24(/* @__PURE__ */ foldingWithIndexMkFieldOu(imageIsSymbol2)(refl)()())(/* @__PURE__ */ foldlRecordCons32(/* @__PURE__ */ foldingWithIndexMkFieldOu(passwordIsSymbol4)(refl)()())(/* @__PURE__ */ foldlRecordCons42(/* @__PURE__ */ foldingWithIndexMkFieldOu(usernameIsSymbol2)(refl)()())(foldlRecordNil)))))));
  var mkConfig15 = /* @__PURE__ */ mkConfig1(/* @__PURE__ */ defaultsRecord()());
  var mempty6 = /* @__PURE__ */ mempty(/* @__PURE__ */ monoidRecord()(/* @__PURE__ */ monoidRecordCons(bioIsSymbol2)(monoidString)()(/* @__PURE__ */ monoidRecordCons(emailIsSymbol5)(monoidString)()(/* @__PURE__ */ monoidRecordCons(imageIsSymbol2)(monoidString)()(/* @__PURE__ */ monoidRecordCons(passwordIsSymbol4)(monoidString)()(/* @__PURE__ */ monoidRecordCons(usernameIsSymbol2)(monoidString)()(monoidRecordNil)))))));
  var Initialize7 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive10 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var Eval5 = /* @__PURE__ */ function() {
    function Eval6(value0) {
      this.value0 = value0;
    }
    ;
    Eval6.create = function(value0) {
      return new Eval6(value0);
    };
    return Eval6;
  }();
  var LogUserOut = /* @__PURE__ */ function() {
    function LogUserOut2() {
    }
    ;
    LogUserOut2.value = new LogUserOut2();
    return LogUserOut2;
  }();
  var DisableOnClick4 = /* @__PURE__ */ function() {
    function DisableOnClick5() {
    }
    ;
    DisableOnClick5.value = new DisableOnClick5();
    return DisableOnClick5;
  }();
  var component7 = function(dictMonadAff) {
    var formless2 = formless(dictMonadAff.MonadEffect0())(mkFieldStates15)(mkFieldActions15)(mkFieldResults15)(mkFieldOutputs15)(mkConfig15);
    return function(dictNavigate) {
      var logout2 = logout(navigateHalogenM(dictNavigate));
      return function(dictManageUser) {
        var manageUserHalogenM2 = manageUserHalogenM(dictManageUser);
        var updateUser2 = updateUser(manageUserHalogenM2);
        var getCurrentUser2 = getCurrentUser(manageUserHalogenM2);
        var render = function(v) {
          var container = function(html2) {
            return div_([header(preview(_Success2)(v.profile))(Settings.value), div3([css("settings-page")])([div3([css("container page")])([div3([css("row")])([div3([css("col-md-6 offset-md-3 col-xs12")])(html2)])])])]);
          };
          return container([h1([css("text-xs-center")])([text5("Your Settings")]), form([onSubmit(v.form.formActions.handleSubmit)])([fieldset_([textInput({
            state: v.form.fields.image,
            action: v.form.actions.image
          })([placeholder3("URL of profile picture")]), textInput({
            state: v.form.fields.username,
            action: v.form.actions.username
          })([placeholder3("Your name")]), textarea2({
            state: v.form.fields.bio,
            action: v.form.actions.bio
          })([placeholder3("Short bio about you")]), textInput({
            state: v.form.fields.email,
            action: v.form.actions.email
          })([placeholder3("Email"), type_23(InputEmail.value)]), textInput({
            state: v.form.fields.password,
            action: v.form.actions.password
          })([placeholder3("Password"), type_23(InputPassword.value)]), submitButton("Update settings")(function() {
            if (v.form.fields.password.result instanceof Just && (v.form.fields.password.result.value0 instanceof Right && (v.form.fields.email.result instanceof Just && (v.form.fields.email.result.value0 instanceof Right && (v.form.fields.username.result instanceof Just && (v.form.fields.username.result.value0 instanceof Right && (v.form.fields.image.result instanceof Just && (v.form.fields.image.result.value0 instanceof Right && v.click)))))))) {
              return true;
            }
            ;
            return false;
          }())(DisableOnClick4.value)])]), hr_, button([css("btn btn-outline-danger"), onClick(function(v1) {
            return LogUserOut.value;
          })])([text5("Log out")])]);
        };
        var handleQuery = function() {
          var validation2 = {
            image: toOptional2(avatarFormat),
            username: composeKleisli7(required8)(composeKleisli7(minLength3(3))(composeKleisli7(maxLength3(20))(usernameFormat))),
            bio: function($279) {
              return pure23(Just.create($279));
            },
            email: composeKleisli7(required8)(composeKleisli7(minLength3(3))(composeKleisli7(maxLength3(50))(emailFormat))),
            password: toOptional2(composeKleisli7(minLength3(3))(maxLength3(20)))
          };
          var onSubmit2 = function(fields) {
            return discard11(updateUser2(fields))(function() {
              return bind23(getCurrentUser2)(function(mbProfileWithEmail) {
                return modify_13(function(v) {
                  var $241 = {};
                  for (var $242 in v) {
                    if ({}.hasOwnProperty.call(v, $242)) {
                      $241[$242] = v[$242];
                    }
                    ;
                  }
                  ;
                  $241.profile = fromMaybe2(mbProfileWithEmail);
                  return $241;
                });
              });
            });
          };
          return handleSubmitValidate(onSubmit2)(validate5)(validation2);
        }();
        var handleAction = function(v) {
          if (v instanceof Initialize7) {
            return discard11(modify_13(function(v1) {
              var $245 = {};
              for (var $246 in v1) {
                if ({}.hasOwnProperty.call(v1, $246)) {
                  $245[$246] = v1[$246];
                }
                ;
              }
              ;
              $245.profile = Loading2.value;
              return $245;
            }))(function() {
              return bind23(getCurrentUser2)(function(mbProfileWithEmail) {
                return discard11(modify_13(function(v1) {
                  var $248 = {};
                  for (var $249 in v1) {
                    if ({}.hasOwnProperty.call(v1, $249)) {
                      $248[$249] = v1[$249];
                    }
                    ;
                  }
                  ;
                  $248.profile = fromMaybe2(mbProfileWithEmail);
                  return $248;
                }))(function() {
                  if (mbProfileWithEmail instanceof Nothing) {
                    return logout2;
                  }
                  ;
                  if (mbProfileWithEmail instanceof Just) {
                    return bind23(gets6(function(v1) {
                      return v1.form;
                    }))(function(v1) {
                      var newFields = function() {
                        var $268 = {};
                        for (var $269 in v1.fields) {
                          if ({}.hasOwnProperty.call(v1.fields, $269)) {
                            $268[$269] = v1["fields"][$269];
                          }
                          ;
                        }
                        ;
                        $268.image = function() {
                          var $253 = {};
                          for (var $254 in v1.fields.image) {
                            if ({}.hasOwnProperty.call(v1.fields.image, $254)) {
                              $253[$254] = v1["fields"]["image"][$254];
                            }
                            ;
                          }
                          ;
                          $253.value = fromMaybe("")(map50(toString5)(mbProfileWithEmail.value0.image));
                          return $253;
                        }();
                        $268.username = function() {
                          var $256 = {};
                          for (var $257 in v1.fields.username) {
                            if ({}.hasOwnProperty.call(v1.fields.username, $257)) {
                              $256[$257] = v1["fields"]["username"][$257];
                            }
                            ;
                          }
                          ;
                          $256.value = toString2(mbProfileWithEmail.value0.username);
                          return $256;
                        }();
                        $268.bio = function() {
                          var $259 = {};
                          for (var $260 in v1.fields.bio) {
                            if ({}.hasOwnProperty.call(v1.fields.bio, $260)) {
                              $259[$260] = v1["fields"]["bio"][$260];
                            }
                            ;
                          }
                          ;
                          $259.value = fromMaybe("")(mbProfileWithEmail.value0.bio);
                          return $259;
                        }();
                        $268.email = function() {
                          var $262 = {};
                          for (var $263 in v1.fields.email) {
                            if ({}.hasOwnProperty.call(v1.fields.email, $263)) {
                              $262[$263] = v1["fields"]["email"][$263];
                            }
                            ;
                          }
                          ;
                          $262.value = unwrap13(mbProfileWithEmail.value0.email);
                          return $262;
                        }();
                        $268.password = function() {
                          var $265 = {};
                          for (var $266 in v1.fields.password) {
                            if ({}.hasOwnProperty.call(v1.fields.password, $266)) {
                              $265[$266] = v1["fields"]["password"][$266];
                            }
                            ;
                          }
                          ;
                          $265.value = "";
                          return $265;
                        }();
                        return $268;
                      }();
                      return handleAction(v1.formActions.setFields(newFields));
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at Conduit.Page.Settings (line 87, column 7 - line 101, column 57): " + [mbProfileWithEmail.constructor.name]);
                });
              });
            });
          }
          ;
          if (v instanceof Receive10) {
            return modify_13(function(v1) {
              var $274 = {};
              for (var $275 in v1) {
                if ({}.hasOwnProperty.call(v1, $275)) {
                  $274[$275] = v1[$275];
                }
                ;
              }
              ;
              $274.form = v.value0;
              return $274;
            });
          }
          ;
          if (v instanceof Eval5) {
            return $$eval(v.value0);
          }
          ;
          if (v instanceof LogUserOut) {
            return logout2;
          }
          ;
          if (v instanceof DisableOnClick4) {
            return pure112(unit);
          }
          ;
          throw new Error("Failed pattern match at Conduit.Page.Settings (line 79, column 18 - line 112, column 32): " + [v.constructor.name]);
        };
        return formless2({
          liftAction: Eval5.create
        })(mempty6)(mkComponent({
          initialState: function(form2) {
            return {
              profile: NotAsked.value,
              form: form2,
              click: true
            };
          },
          render,
          "eval": mkEval({
            finalize: defaultEval.finalize,
            initialize: new Just(Initialize7.value),
            receive: function($280) {
              return Just.create(Receive10.create($280));
            },
            handleAction,
            handleQuery
          })
        }));
      };
    };
  };

  // output/Conduit.Capability.Resource.Comment/index.js
  var lift12 = /* @__PURE__ */ lift(monadTransHalogenM);
  var getComments = function(dict) {
    return dict.getComments;
  };
  var deleteComment = function(dict) {
    return dict.deleteComment;
  };
  var createComment = function(dict) {
    return dict.createComment;
  };
  var manageCommentHalogenM = function(dictManageComment) {
    var lift1 = lift12(dictManageComment.Monad0());
    var createComment1 = createComment(dictManageComment);
    var deleteComment1 = deleteComment(dictManageComment);
    return {
      getComments: function() {
        var $11 = getComments(dictManageComment);
        return function($12) {
          return lift1($11($12));
        };
      }(),
      createComment: function(s) {
        var $13 = createComment1(s);
        return function($14) {
          return lift1($13($14));
        };
      },
      deleteComment: function(s) {
        var $15 = deleteComment1(s);
        return function($16) {
          return lift1($15($16));
        };
      },
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };

  // output/Conduit.Component.RawHTML/foreign.js
  function unsafeSetInnerHTML(element3) {
    return function(html2) {
      return function() {
        element3.innerHTML = html2;
      };
    };
  }

  // node_modules/marked/lib/marked.esm.js
  function getDefaults() {
    return {
      baseUrl: null,
      breaks: false,
      extensions: null,
      gfm: true,
      headerIds: true,
      headerPrefix: "",
      highlight: null,
      langPrefix: "language-",
      mangle: true,
      pedantic: false,
      renderer: null,
      sanitize: false,
      sanitizer: null,
      silent: false,
      smartLists: false,
      smartypants: false,
      tokenizer: null,
      walkTokens: null,
      xhtml: false
    };
  }
  var defaults2 = getDefaults();
  function changeDefaults(newDefaults) {
    defaults2 = newDefaults;
  }
  var escapeTest = /[&<>"']/;
  var escapeReplace = /[&<>"']/g;
  var escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
  var escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;
  var escapeReplacements = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#39;"
  };
  var getEscapeReplacement = (ch) => escapeReplacements[ch];
  function escape(html2, encode5) {
    if (encode5) {
      if (escapeTest.test(html2)) {
        return html2.replace(escapeReplace, getEscapeReplacement);
      }
    } else {
      if (escapeTestNoEncode.test(html2)) {
        return html2.replace(escapeReplaceNoEncode, getEscapeReplacement);
      }
    }
    return html2;
  }
  var unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
  function unescape(html2) {
    return html2.replace(unescapeTest, (_, n) => {
      n = n.toLowerCase();
      if (n === "colon")
        return ":";
      if (n.charAt(0) === "#") {
        return n.charAt(1) === "x" ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));
      }
      return "";
    });
  }
  var caret = /(^|[^\[])\^/g;
  function edit(regex3, opt) {
    regex3 = typeof regex3 === "string" ? regex3 : regex3.source;
    opt = opt || "";
    const obj = {
      replace: (name16, val) => {
        val = val.source || val;
        val = val.replace(caret, "$1");
        regex3 = regex3.replace(name16, val);
        return obj;
      },
      getRegex: () => {
        return new RegExp(regex3, opt);
      }
    };
    return obj;
  }
  var nonWordAndColonTest = /[^\w:]/g;
  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
  function cleanUrl(sanitize, base2, href5) {
    if (sanitize) {
      let prot;
      try {
        prot = decodeURIComponent(unescape(href5)).replace(nonWordAndColonTest, "").toLowerCase();
      } catch (e2) {
        return null;
      }
      if (prot.indexOf("javascript:") === 0 || prot.indexOf("vbscript:") === 0 || prot.indexOf("data:") === 0) {
        return null;
      }
    }
    if (base2 && !originIndependentUrl.test(href5)) {
      href5 = resolveUrl(base2, href5);
    }
    try {
      href5 = encodeURI(href5).replace(/%25/g, "%");
    } catch (e2) {
      return null;
    }
    return href5;
  }
  var baseUrls = {};
  var justDomain = /^[^:]+:\/*[^/]*$/;
  var protocol2 = /^([^:]+:)[\s\S]*$/;
  var domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;
  function resolveUrl(base2, href5) {
    if (!baseUrls[" " + base2]) {
      if (justDomain.test(base2)) {
        baseUrls[" " + base2] = base2 + "/";
      } else {
        baseUrls[" " + base2] = rtrim(base2, "/", true);
      }
    }
    base2 = baseUrls[" " + base2];
    const relativeBase = base2.indexOf(":") === -1;
    if (href5.substring(0, 2) === "//") {
      if (relativeBase) {
        return href5;
      }
      return base2.replace(protocol2, "$1") + href5;
    } else if (href5.charAt(0) === "/") {
      if (relativeBase) {
        return href5;
      }
      return base2.replace(domain, "$1") + href5;
    } else {
      return base2 + href5;
    }
  }
  var noopTest = { exec: function noopTest2() {
  } };
  function merge3(obj) {
    let i2 = 1, target6, key2;
    for (; i2 < arguments.length; i2++) {
      target6 = arguments[i2];
      for (key2 in target6) {
        if (Object.prototype.hasOwnProperty.call(target6, key2)) {
          obj[key2] = target6[key2];
        }
      }
    }
    return obj;
  }
  function splitCells(tableRow, count) {
    const row = tableRow.replace(/\|/g, (match4, offset, str) => {
      let escaped = false, curr = offset;
      while (--curr >= 0 && str[curr] === "\\")
        escaped = !escaped;
      if (escaped) {
        return "|";
      } else {
        return " |";
      }
    }), cells2 = row.split(/ \|/);
    let i2 = 0;
    if (!cells2[0].trim()) {
      cells2.shift();
    }
    if (cells2.length > 0 && !cells2[cells2.length - 1].trim()) {
      cells2.pop();
    }
    if (cells2.length > count) {
      cells2.splice(count);
    } else {
      while (cells2.length < count)
        cells2.push("");
    }
    for (; i2 < cells2.length; i2++) {
      cells2[i2] = cells2[i2].trim().replace(/\\\|/g, "|");
    }
    return cells2;
  }
  function rtrim(str, c, invert) {
    const l = str.length;
    if (l === 0) {
      return "";
    }
    let suffLen = 0;
    while (suffLen < l) {
      const currChar = str.charAt(l - suffLen - 1);
      if (currChar === c && !invert) {
        suffLen++;
      } else if (currChar !== c && invert) {
        suffLen++;
      } else {
        break;
      }
    }
    return str.slice(0, l - suffLen);
  }
  function findClosingBracket(str, b2) {
    if (str.indexOf(b2[1]) === -1) {
      return -1;
    }
    const l = str.length;
    let level = 0, i2 = 0;
    for (; i2 < l; i2++) {
      if (str[i2] === "\\") {
        i2++;
      } else if (str[i2] === b2[0]) {
        level++;
      } else if (str[i2] === b2[1]) {
        level--;
        if (level < 0) {
          return i2;
        }
      }
    }
    return -1;
  }
  function checkSanitizeDeprecation(opt) {
    if (opt && opt.sanitize && !opt.silent) {
      console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options");
    }
  }
  function repeatString(pattern2, count) {
    if (count < 1) {
      return "";
    }
    let result = "";
    while (count > 1) {
      if (count & 1) {
        result += pattern2;
      }
      count >>= 1;
      pattern2 += pattern2;
    }
    return result + pattern2;
  }
  function outputLink(cap, link3, raw, lexer2) {
    const href5 = link3.href;
    const title5 = link3.title ? escape(link3.title) : null;
    const text6 = cap[1].replace(/\\([\[\]])/g, "$1");
    if (cap[0].charAt(0) !== "!") {
      lexer2.state.inLink = true;
      const token = {
        type: "link",
        raw,
        href: href5,
        title: title5,
        text: text6,
        tokens: lexer2.inlineTokens(text6, [])
      };
      lexer2.state.inLink = false;
      return token;
    }
    return {
      type: "image",
      raw,
      href: href5,
      title: title5,
      text: escape(text6)
    };
  }
  function indentCodeCompensation(raw, text6) {
    const matchIndentToCode = raw.match(/^(\s+)(?:```)/);
    if (matchIndentToCode === null) {
      return text6;
    }
    const indentToCode = matchIndentToCode[1];
    return text6.split("\n").map((node) => {
      const matchIndentInNode = node.match(/^\s+/);
      if (matchIndentInNode === null) {
        return node;
      }
      const [indentInNode] = matchIndentInNode;
      if (indentInNode.length >= indentToCode.length) {
        return node.slice(indentToCode.length);
      }
      return node;
    }).join("\n");
  }
  var Tokenizer = class {
    constructor(options3) {
      this.options = options3 || defaults2;
    }
    space(src10) {
      const cap = this.rules.block.newline.exec(src10);
      if (cap && cap[0].length > 0) {
        return {
          type: "space",
          raw: cap[0]
        };
      }
    }
    code(src10) {
      const cap = this.rules.block.code.exec(src10);
      if (cap) {
        const text6 = cap[0].replace(/^ {1,4}/gm, "");
        return {
          type: "code",
          raw: cap[0],
          codeBlockStyle: "indented",
          text: !this.options.pedantic ? rtrim(text6, "\n") : text6
        };
      }
    }
    fences(src10) {
      const cap = this.rules.block.fences.exec(src10);
      if (cap) {
        const raw = cap[0];
        const text6 = indentCodeCompensation(raw, cap[3] || "");
        return {
          type: "code",
          raw,
          lang: cap[2] ? cap[2].trim() : cap[2],
          text: text6
        };
      }
    }
    heading(src10) {
      const cap = this.rules.block.heading.exec(src10);
      if (cap) {
        let text6 = cap[2].trim();
        if (/#$/.test(text6)) {
          const trimmed = rtrim(text6, "#");
          if (this.options.pedantic) {
            text6 = trimmed.trim();
          } else if (!trimmed || / $/.test(trimmed)) {
            text6 = trimmed.trim();
          }
        }
        const token = {
          type: "heading",
          raw: cap[0],
          depth: cap[1].length,
          text: text6,
          tokens: []
        };
        this.lexer.inline(token.text, token.tokens);
        return token;
      }
    }
    hr(src10) {
      const cap = this.rules.block.hr.exec(src10);
      if (cap) {
        return {
          type: "hr",
          raw: cap[0]
        };
      }
    }
    blockquote(src10) {
      const cap = this.rules.block.blockquote.exec(src10);
      if (cap) {
        const text6 = cap[0].replace(/^ *>[ \t]?/gm, "");
        return {
          type: "blockquote",
          raw: cap[0],
          tokens: this.lexer.blockTokens(text6, []),
          text: text6
        };
      }
    }
    list(src10) {
      let cap = this.rules.block.list.exec(src10);
      if (cap) {
        let raw, istask, ischecked, indent, i2, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;
        let bull = cap[1].trim();
        const isordered = bull.length > 1;
        const list2 = {
          type: "list",
          raw: "",
          ordered: isordered,
          start: isordered ? +bull.slice(0, -1) : "",
          loose: false,
          items: []
        };
        bull = isordered ? `\\d{1,9}\\${bull.slice(-1)}` : `\\${bull}`;
        if (this.options.pedantic) {
          bull = isordered ? bull : "[*+-]";
        }
        const itemRegex = new RegExp(`^( {0,3}${bull})((?:[	 ][^\\n]*)?(?:\\n|$))`);
        while (src10) {
          endEarly = false;
          if (!(cap = itemRegex.exec(src10))) {
            break;
          }
          if (this.rules.block.hr.test(src10)) {
            break;
          }
          raw = cap[0];
          src10 = src10.substring(raw.length);
          line = cap[2].split("\n", 1)[0];
          nextLine = src10.split("\n", 1)[0];
          if (this.options.pedantic) {
            indent = 2;
            itemContents = line.trimLeft();
          } else {
            indent = cap[2].search(/[^ ]/);
            indent = indent > 4 ? 1 : indent;
            itemContents = line.slice(indent);
            indent += cap[1].length;
          }
          blankLine = false;
          if (!line && /^ *$/.test(nextLine)) {
            raw += nextLine + "\n";
            src10 = src10.substring(nextLine.length + 1);
            endEarly = true;
          }
          if (!endEarly) {
            const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\d{1,9}[.)])((?: [^\\n]*)?(?:\\n|$))`);
            const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`);
            while (src10) {
              rawLine = src10.split("\n", 1)[0];
              line = rawLine;
              if (this.options.pedantic) {
                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ");
              }
              if (nextBulletRegex.test(line)) {
                break;
              }
              if (hrRegex.test(src10)) {
                break;
              }
              if (line.search(/[^ ]/) >= indent || !line.trim()) {
                itemContents += "\n" + line.slice(indent);
              } else if (!blankLine) {
                itemContents += "\n" + line;
              } else {
                break;
              }
              if (!blankLine && !line.trim()) {
                blankLine = true;
              }
              raw += rawLine + "\n";
              src10 = src10.substring(rawLine.length + 1);
            }
          }
          if (!list2.loose) {
            if (endsWithBlankLine) {
              list2.loose = true;
            } else if (/\n *\n *$/.test(raw)) {
              endsWithBlankLine = true;
            }
          }
          if (this.options.gfm) {
            istask = /^\[[ xX]\] /.exec(itemContents);
            if (istask) {
              ischecked = istask[0] !== "[ ] ";
              itemContents = itemContents.replace(/^\[[ xX]\] +/, "");
            }
          }
          list2.items.push({
            type: "list_item",
            raw,
            task: !!istask,
            checked: ischecked,
            loose: false,
            text: itemContents
          });
          list2.raw += raw;
        }
        list2.items[list2.items.length - 1].raw = raw.trimRight();
        list2.items[list2.items.length - 1].text = itemContents.trimRight();
        list2.raw = list2.raw.trimRight();
        const l = list2.items.length;
        for (i2 = 0; i2 < l; i2++) {
          this.lexer.state.top = false;
          list2.items[i2].tokens = this.lexer.blockTokens(list2.items[i2].text, []);
          const spacers = list2.items[i2].tokens.filter((t) => t.type === "space");
          const hasMultipleLineBreaks = spacers.every((t) => {
            const chars = t.raw.split("");
            let lineBreaks = 0;
            for (const char2 of chars) {
              if (char2 === "\n") {
                lineBreaks += 1;
              }
              if (lineBreaks > 1) {
                return true;
              }
            }
            return false;
          });
          if (!list2.loose && spacers.length && hasMultipleLineBreaks) {
            list2.loose = true;
            list2.items[i2].loose = true;
          }
        }
        return list2;
      }
    }
    html(src10) {
      const cap = this.rules.block.html.exec(src10);
      if (cap) {
        const token = {
          type: "html",
          raw: cap[0],
          pre: !this.options.sanitizer && (cap[1] === "pre" || cap[1] === "script" || cap[1] === "style"),
          text: cap[0]
        };
        if (this.options.sanitize) {
          token.type = "paragraph";
          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);
          token.tokens = [];
          this.lexer.inline(token.text, token.tokens);
        }
        return token;
      }
    }
    def(src10) {
      const cap = this.rules.block.def.exec(src10);
      if (cap) {
        if (cap[3])
          cap[3] = cap[3].substring(1, cap[3].length - 1);
        const tag = cap[1].toLowerCase().replace(/\s+/g, " ");
        return {
          type: "def",
          tag,
          raw: cap[0],
          href: cap[2],
          title: cap[3]
        };
      }
    }
    table(src10) {
      const cap = this.rules.block.table.exec(src10);
      if (cap) {
        const item = {
          type: "table",
          header: splitCells(cap[1]).map((c) => {
            return { text: c };
          }),
          align: cap[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\n[ \t]*$/, "").split("\n") : []
        };
        if (item.header.length === item.align.length) {
          item.raw = cap[0];
          let l = item.align.length;
          let i2, j, k, row;
          for (i2 = 0; i2 < l; i2++) {
            if (/^ *-+: *$/.test(item.align[i2])) {
              item.align[i2] = "right";
            } else if (/^ *:-+: *$/.test(item.align[i2])) {
              item.align[i2] = "center";
            } else if (/^ *:-+ *$/.test(item.align[i2])) {
              item.align[i2] = "left";
            } else {
              item.align[i2] = null;
            }
          }
          l = item.rows.length;
          for (i2 = 0; i2 < l; i2++) {
            item.rows[i2] = splitCells(item.rows[i2], item.header.length).map((c) => {
              return { text: c };
            });
          }
          l = item.header.length;
          for (j = 0; j < l; j++) {
            item.header[j].tokens = [];
            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);
          }
          l = item.rows.length;
          for (j = 0; j < l; j++) {
            row = item.rows[j];
            for (k = 0; k < row.length; k++) {
              row[k].tokens = [];
              this.lexer.inlineTokens(row[k].text, row[k].tokens);
            }
          }
          return item;
        }
      }
    }
    lheading(src10) {
      const cap = this.rules.block.lheading.exec(src10);
      if (cap) {
        const token = {
          type: "heading",
          raw: cap[0],
          depth: cap[2].charAt(0) === "=" ? 1 : 2,
          text: cap[1],
          tokens: []
        };
        this.lexer.inline(token.text, token.tokens);
        return token;
      }
    }
    paragraph(src10) {
      const cap = this.rules.block.paragraph.exec(src10);
      if (cap) {
        const token = {
          type: "paragraph",
          raw: cap[0],
          text: cap[1].charAt(cap[1].length - 1) === "\n" ? cap[1].slice(0, -1) : cap[1],
          tokens: []
        };
        this.lexer.inline(token.text, token.tokens);
        return token;
      }
    }
    text(src10) {
      const cap = this.rules.block.text.exec(src10);
      if (cap) {
        const token = {
          type: "text",
          raw: cap[0],
          text: cap[0],
          tokens: []
        };
        this.lexer.inline(token.text, token.tokens);
        return token;
      }
    }
    escape(src10) {
      const cap = this.rules.inline.escape.exec(src10);
      if (cap) {
        return {
          type: "escape",
          raw: cap[0],
          text: escape(cap[1])
        };
      }
    }
    tag(src10) {
      const cap = this.rules.inline.tag.exec(src10);
      if (cap) {
        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {
          this.lexer.state.inLink = true;
        } else if (this.lexer.state.inLink && /^<\/a>/i.test(cap[0])) {
          this.lexer.state.inLink = false;
        }
        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
          this.lexer.state.inRawBlock = true;
        } else if (this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
          this.lexer.state.inRawBlock = false;
        }
        return {
          type: this.options.sanitize ? "text" : "html",
          raw: cap[0],
          inLink: this.lexer.state.inLink,
          inRawBlock: this.lexer.state.inRawBlock,
          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]
        };
      }
    }
    link(src10) {
      const cap = this.rules.inline.link.exec(src10);
      if (cap) {
        const trimmedUrl = cap[2].trim();
        if (!this.options.pedantic && /^</.test(trimmedUrl)) {
          if (!/>$/.test(trimmedUrl)) {
            return;
          }
          const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), "\\");
          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {
            return;
          }
        } else {
          const lastParenIndex = findClosingBracket(cap[2], "()");
          if (lastParenIndex > -1) {
            const start2 = cap[0].indexOf("!") === 0 ? 5 : 4;
            const linkLen = start2 + cap[1].length + lastParenIndex;
            cap[2] = cap[2].substring(0, lastParenIndex);
            cap[0] = cap[0].substring(0, linkLen).trim();
            cap[3] = "";
          }
        }
        let href5 = cap[2];
        let title5 = "";
        if (this.options.pedantic) {
          const link3 = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href5);
          if (link3) {
            href5 = link3[1];
            title5 = link3[3];
          }
        } else {
          title5 = cap[3] ? cap[3].slice(1, -1) : "";
        }
        href5 = href5.trim();
        if (/^</.test(href5)) {
          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {
            href5 = href5.slice(1);
          } else {
            href5 = href5.slice(1, -1);
          }
        }
        return outputLink(cap, {
          href: href5 ? href5.replace(this.rules.inline._escapes, "$1") : href5,
          title: title5 ? title5.replace(this.rules.inline._escapes, "$1") : title5
        }, cap[0], this.lexer);
      }
    }
    reflink(src10, links) {
      let cap;
      if ((cap = this.rules.inline.reflink.exec(src10)) || (cap = this.rules.inline.nolink.exec(src10))) {
        let link3 = (cap[2] || cap[1]).replace(/\s+/g, " ");
        link3 = links[link3.toLowerCase()];
        if (!link3 || !link3.href) {
          const text6 = cap[0].charAt(0);
          return {
            type: "text",
            raw: text6,
            text: text6
          };
        }
        return outputLink(cap, link3, cap[0], this.lexer);
      }
    }
    emStrong(src10, maskedSrc, prevChar = "") {
      let match4 = this.rules.inline.emStrong.lDelim.exec(src10);
      if (!match4)
        return;
      if (match4[3] && prevChar.match(/[\p{L}\p{N}]/u))
        return;
      const nextChar = match4[1] || match4[2] || "";
      if (!nextChar || nextChar && (prevChar === "" || this.rules.inline.punctuation.exec(prevChar))) {
        const lLength = match4[0].length - 1;
        let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;
        const endReg = match4[0][0] === "*" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
        endReg.lastIndex = 0;
        maskedSrc = maskedSrc.slice(-1 * src10.length + lLength);
        while ((match4 = endReg.exec(maskedSrc)) != null) {
          rDelim = match4[1] || match4[2] || match4[3] || match4[4] || match4[5] || match4[6];
          if (!rDelim)
            continue;
          rLength = rDelim.length;
          if (match4[3] || match4[4]) {
            delimTotal += rLength;
            continue;
          } else if (match4[5] || match4[6]) {
            if (lLength % 3 && !((lLength + rLength) % 3)) {
              midDelimTotal += rLength;
              continue;
            }
          }
          delimTotal -= rLength;
          if (delimTotal > 0)
            continue;
          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);
          if (Math.min(lLength, rLength) % 2) {
            const text7 = src10.slice(1, lLength + match4.index + rLength);
            return {
              type: "em",
              raw: src10.slice(0, lLength + match4.index + rLength + 1),
              text: text7,
              tokens: this.lexer.inlineTokens(text7, [])
            };
          }
          const text6 = src10.slice(2, lLength + match4.index + rLength - 1);
          return {
            type: "strong",
            raw: src10.slice(0, lLength + match4.index + rLength + 1),
            text: text6,
            tokens: this.lexer.inlineTokens(text6, [])
          };
        }
      }
    }
    codespan(src10) {
      const cap = this.rules.inline.code.exec(src10);
      if (cap) {
        let text6 = cap[2].replace(/\n/g, " ");
        const hasNonSpaceChars = /[^ ]/.test(text6);
        const hasSpaceCharsOnBothEnds = /^ /.test(text6) && / $/.test(text6);
        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {
          text6 = text6.substring(1, text6.length - 1);
        }
        text6 = escape(text6, true);
        return {
          type: "codespan",
          raw: cap[0],
          text: text6
        };
      }
    }
    br(src10) {
      const cap = this.rules.inline.br.exec(src10);
      if (cap) {
        return {
          type: "br",
          raw: cap[0]
        };
      }
    }
    del(src10) {
      const cap = this.rules.inline.del.exec(src10);
      if (cap) {
        return {
          type: "del",
          raw: cap[0],
          text: cap[2],
          tokens: this.lexer.inlineTokens(cap[2], [])
        };
      }
    }
    autolink(src10, mangle2) {
      const cap = this.rules.inline.autolink.exec(src10);
      if (cap) {
        let text6, href5;
        if (cap[2] === "@") {
          text6 = escape(this.options.mangle ? mangle2(cap[1]) : cap[1]);
          href5 = "mailto:" + text6;
        } else {
          text6 = escape(cap[1]);
          href5 = text6;
        }
        return {
          type: "link",
          raw: cap[0],
          text: text6,
          href: href5,
          tokens: [
            {
              type: "text",
              raw: text6,
              text: text6
            }
          ]
        };
      }
    }
    url(src10, mangle2) {
      let cap;
      if (cap = this.rules.inline.url.exec(src10)) {
        let text6, href5;
        if (cap[2] === "@") {
          text6 = escape(this.options.mangle ? mangle2(cap[0]) : cap[0]);
          href5 = "mailto:" + text6;
        } else {
          let prevCapZero;
          do {
            prevCapZero = cap[0];
            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];
          } while (prevCapZero !== cap[0]);
          text6 = escape(cap[0]);
          if (cap[1] === "www.") {
            href5 = "http://" + text6;
          } else {
            href5 = text6;
          }
        }
        return {
          type: "link",
          raw: cap[0],
          text: text6,
          href: href5,
          tokens: [
            {
              type: "text",
              raw: text6,
              text: text6
            }
          ]
        };
      }
    }
    inlineText(src10, smartypants2) {
      const cap = this.rules.inline.text.exec(src10);
      if (cap) {
        let text6;
        if (this.lexer.state.inRawBlock) {
          text6 = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];
        } else {
          text6 = escape(this.options.smartypants ? smartypants2(cap[0]) : cap[0]);
        }
        return {
          type: "text",
          raw: cap[0],
          text: text6
        };
      }
    }
  };
  var block = {
    newline: /^(?: *(?:\n|$))+/,
    code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
    fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
    hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
    heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
    blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
    list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
    html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
    def: /^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
    table: noopTest,
    lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
    // regex template, placeholders will be replaced according to different paragraph
    // interruption rules of commonmark and the original markdown spec:
    _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
    text: /^[^\n]+/
  };
  block._label = /(?!\s*\])(?:\\.|[^\[\]\\])+/;
  block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
  block.def = edit(block.def).replace("label", block._label).replace("title", block._title).getRegex();
  block.bullet = /(?:[*+-]|\d{1,9}[.)])/;
  block.listItemStart = edit(/^( *)(bull) */).replace("bull", block.bullet).getRegex();
  block.list = edit(block.list).replace(/bull/g, block.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + block.def.source + ")").getRegex();
  block._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";
  block._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
  block.html = edit(block.html, "i").replace("comment", block._comment).replace("tag", block._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
  block.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
  block.blockquote = edit(block.blockquote).replace("paragraph", block.paragraph).getRegex();
  block.normal = merge3({}, block);
  block.gfm = merge3({}, block.normal, {
    table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
    // Cells
  });
  block.gfm.table = edit(block.gfm.table).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
  block.gfm.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", block.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
  block.pedantic = merge3({}, block.normal, {
    html: edit(
      `^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`
    ).replace("comment", block._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
    def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
    heading: /^(#{1,6})(.*)(?:\n+|$)/,
    fences: noopTest,
    // fences not supported
    paragraph: edit(block.normal._paragraph).replace("hr", block.hr).replace("heading", " *#{1,6} *[^\n]").replace("lheading", block.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
  });
  var inline = {
    escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
    autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
    url: noopTest,
    tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
    // CDATA section
    link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
    reflink: /^!?\[(label)\]\[(ref)\]/,
    nolink: /^!?\[(ref)\](?:\[\])?/,
    reflinkSearch: "reflink|nolink(?!\\()",
    emStrong: {
      lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.
      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a
      rDelimAst: /^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[^*]+(?=[^*])|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,
      rDelimUnd: /^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[^_]+(?=[^_])|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
      // ^- Not allowed for _
    },
    code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
    br: /^( {2,}|\\)\n(?!\s*$)/,
    del: noopTest,
    text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
    punctuation: /^([\spunctuation])/
  };
  inline._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~";
  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();
  inline.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g;
  inline.escapedEmSt = /\\\*|\\_/g;
  inline._comment = edit(block._comment).replace("(?:-->|$)", "-->").getRegex();
  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();
  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, "g").replace(/punct/g, inline._punctuation).getRegex();
  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, "g").replace(/punct/g, inline._punctuation).getRegex();
  inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
  inline.autolink = edit(inline.autolink).replace("scheme", inline._scheme).replace("email", inline._email).getRegex();
  inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
  inline.tag = edit(inline.tag).replace("comment", inline._comment).replace("attribute", inline._attribute).getRegex();
  inline._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
  inline._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
  inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
  inline.link = edit(inline.link).replace("label", inline._label).replace("href", inline._href).replace("title", inline._title).getRegex();
  inline.reflink = edit(inline.reflink).replace("label", inline._label).replace("ref", block._label).getRegex();
  inline.nolink = edit(inline.nolink).replace("ref", block._label).getRegex();
  inline.reflinkSearch = edit(inline.reflinkSearch, "g").replace("reflink", inline.reflink).replace("nolink", inline.nolink).getRegex();
  inline.normal = merge3({}, inline);
  inline.pedantic = merge3({}, inline.normal, {
    strong: {
      start: /^__|\*\*/,
      middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
      endAst: /\*\*(?!\*)/g,
      endUnd: /__(?!_)/g
    },
    em: {
      start: /^_|\*/,
      middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
      endAst: /\*(?!\*)/g,
      endUnd: /_(?!_)/g
    },
    link: edit(/^!?\[(label)\]\((.*?)\)/).replace("label", inline._label).getRegex(),
    reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", inline._label).getRegex()
  });
  inline.gfm = merge3({}, inline.normal, {
    escape: edit(inline.escape).replace("])", "~|])").getRegex(),
    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
    url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
    _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
    del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
    text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
  });
  inline.gfm.url = edit(inline.gfm.url, "i").replace("email", inline.gfm._extended_email).getRegex();
  inline.breaks = merge3({}, inline.gfm, {
    br: edit(inline.br).replace("{2,}", "*").getRegex(),
    text: edit(inline.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
  });
  function smartypants(text6) {
    return text6.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018").replace(/'/g, "\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C").replace(/"/g, "\u201D").replace(/\.{3}/g, "\u2026");
  }
  function mangle(text6) {
    let out = "", i2, ch;
    const l = text6.length;
    for (i2 = 0; i2 < l; i2++) {
      ch = text6.charCodeAt(i2);
      if (Math.random() > 0.5) {
        ch = "x" + ch.toString(16);
      }
      out += "&#" + ch + ";";
    }
    return out;
  }
  var Lexer = class _Lexer {
    constructor(options3) {
      this.tokens = [];
      this.tokens.links = /* @__PURE__ */ Object.create(null);
      this.options = options3 || defaults2;
      this.options.tokenizer = this.options.tokenizer || new Tokenizer();
      this.tokenizer = this.options.tokenizer;
      this.tokenizer.options = this.options;
      this.tokenizer.lexer = this;
      this.inlineQueue = [];
      this.state = {
        inLink: false,
        inRawBlock: false,
        top: true
      };
      const rules = {
        block: block.normal,
        inline: inline.normal
      };
      if (this.options.pedantic) {
        rules.block = block.pedantic;
        rules.inline = inline.pedantic;
      } else if (this.options.gfm) {
        rules.block = block.gfm;
        if (this.options.breaks) {
          rules.inline = inline.breaks;
        } else {
          rules.inline = inline.gfm;
        }
      }
      this.tokenizer.rules = rules;
    }
    /**
     * Expose Rules
     */
    static get rules() {
      return {
        block,
        inline
      };
    }
    /**
     * Static Lex Method
     */
    static lex(src10, options3) {
      const lexer2 = new _Lexer(options3);
      return lexer2.lex(src10);
    }
    /**
     * Static Lex Inline Method
     */
    static lexInline(src10, options3) {
      const lexer2 = new _Lexer(options3);
      return lexer2.inlineTokens(src10);
    }
    /**
     * Preprocessing
     */
    lex(src10) {
      src10 = src10.replace(/\r\n|\r/g, "\n");
      this.blockTokens(src10, this.tokens);
      let next;
      while (next = this.inlineQueue.shift()) {
        this.inlineTokens(next.src, next.tokens);
      }
      return this.tokens;
    }
    /**
     * Lexing
     */
    blockTokens(src10, tokens = []) {
      if (this.options.pedantic) {
        src10 = src10.replace(/\t/g, "    ").replace(/^ +$/gm, "");
      } else {
        src10 = src10.replace(/^( *)(\t+)/gm, (_, leading, tabs) => {
          return leading + "    ".repeat(tabs.length);
        });
      }
      let token, lastToken, cutSrc, lastParagraphClipped;
      while (src10) {
        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some((extTokenizer) => {
          if (token = extTokenizer.call({ lexer: this }, src10, tokens)) {
            src10 = src10.substring(token.raw.length);
            tokens.push(token);
            return true;
          }
          return false;
        })) {
          continue;
        }
        if (token = this.tokenizer.space(src10)) {
          src10 = src10.substring(token.raw.length);
          if (token.raw.length === 1 && tokens.length > 0) {
            tokens[tokens.length - 1].raw += "\n";
          } else {
            tokens.push(token);
          }
          continue;
        }
        if (token = this.tokenizer.code(src10)) {
          src10 = src10.substring(token.raw.length);
          lastToken = tokens[tokens.length - 1];
          if (lastToken && (lastToken.type === "paragraph" || lastToken.type === "text")) {
            lastToken.raw += "\n" + token.raw;
            lastToken.text += "\n" + token.text;
            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
          } else {
            tokens.push(token);
          }
          continue;
        }
        if (token = this.tokenizer.fences(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.heading(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.hr(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.blockquote(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.list(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.html(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.def(src10)) {
          src10 = src10.substring(token.raw.length);
          lastToken = tokens[tokens.length - 1];
          if (lastToken && (lastToken.type === "paragraph" || lastToken.type === "text")) {
            lastToken.raw += "\n" + token.raw;
            lastToken.text += "\n" + token.raw;
            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
          } else if (!this.tokens.links[token.tag]) {
            this.tokens.links[token.tag] = {
              href: token.href,
              title: token.title
            };
          }
          continue;
        }
        if (token = this.tokenizer.table(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.lheading(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        cutSrc = src10;
        if (this.options.extensions && this.options.extensions.startBlock) {
          let startIndex = Infinity;
          const tempSrc = src10.slice(1);
          let tempStart;
          this.options.extensions.startBlock.forEach(function(getStartIndex) {
            tempStart = getStartIndex.call({ lexer: this }, tempSrc);
            if (typeof tempStart === "number" && tempStart >= 0) {
              startIndex = Math.min(startIndex, tempStart);
            }
          });
          if (startIndex < Infinity && startIndex >= 0) {
            cutSrc = src10.substring(0, startIndex + 1);
          }
        }
        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
          lastToken = tokens[tokens.length - 1];
          if (lastParagraphClipped && lastToken.type === "paragraph") {
            lastToken.raw += "\n" + token.raw;
            lastToken.text += "\n" + token.text;
            this.inlineQueue.pop();
            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
          } else {
            tokens.push(token);
          }
          lastParagraphClipped = cutSrc.length !== src10.length;
          src10 = src10.substring(token.raw.length);
          continue;
        }
        if (token = this.tokenizer.text(src10)) {
          src10 = src10.substring(token.raw.length);
          lastToken = tokens[tokens.length - 1];
          if (lastToken && lastToken.type === "text") {
            lastToken.raw += "\n" + token.raw;
            lastToken.text += "\n" + token.text;
            this.inlineQueue.pop();
            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
          } else {
            tokens.push(token);
          }
          continue;
        }
        if (src10) {
          const errMsg = "Infinite loop on byte: " + src10.charCodeAt(0);
          if (this.options.silent) {
            console.error(errMsg);
            break;
          } else {
            throw new Error(errMsg);
          }
        }
      }
      this.state.top = true;
      return tokens;
    }
    inline(src10, tokens) {
      this.inlineQueue.push({ src: src10, tokens });
    }
    /**
     * Lexing/Compiling
     */
    inlineTokens(src10, tokens = []) {
      let token, lastToken, cutSrc;
      let maskedSrc = src10;
      let match4;
      let keepPrevChar, prevChar;
      if (this.tokens.links) {
        const links = Object.keys(this.tokens.links);
        if (links.length > 0) {
          while ((match4 = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {
            if (links.includes(match4[0].slice(match4[0].lastIndexOf("[") + 1, -1))) {
              maskedSrc = maskedSrc.slice(0, match4.index) + "[" + repeatString("a", match4[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);
            }
          }
        }
      }
      while ((match4 = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {
        maskedSrc = maskedSrc.slice(0, match4.index) + "[" + repeatString("a", match4[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
      }
      while ((match4 = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {
        maskedSrc = maskedSrc.slice(0, match4.index) + "++" + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);
      }
      while (src10) {
        if (!keepPrevChar) {
          prevChar = "";
        }
        keepPrevChar = false;
        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some((extTokenizer) => {
          if (token = extTokenizer.call({ lexer: this }, src10, tokens)) {
            src10 = src10.substring(token.raw.length);
            tokens.push(token);
            return true;
          }
          return false;
        })) {
          continue;
        }
        if (token = this.tokenizer.escape(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.tag(src10)) {
          src10 = src10.substring(token.raw.length);
          lastToken = tokens[tokens.length - 1];
          if (lastToken && token.type === "text" && lastToken.type === "text") {
            lastToken.raw += token.raw;
            lastToken.text += token.text;
          } else {
            tokens.push(token);
          }
          continue;
        }
        if (token = this.tokenizer.link(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.reflink(src10, this.tokens.links)) {
          src10 = src10.substring(token.raw.length);
          lastToken = tokens[tokens.length - 1];
          if (lastToken && token.type === "text" && lastToken.type === "text") {
            lastToken.raw += token.raw;
            lastToken.text += token.text;
          } else {
            tokens.push(token);
          }
          continue;
        }
        if (token = this.tokenizer.emStrong(src10, maskedSrc, prevChar)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.codespan(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.br(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.del(src10)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (token = this.tokenizer.autolink(src10, mangle)) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        if (!this.state.inLink && (token = this.tokenizer.url(src10, mangle))) {
          src10 = src10.substring(token.raw.length);
          tokens.push(token);
          continue;
        }
        cutSrc = src10;
        if (this.options.extensions && this.options.extensions.startInline) {
          let startIndex = Infinity;
          const tempSrc = src10.slice(1);
          let tempStart;
          this.options.extensions.startInline.forEach(function(getStartIndex) {
            tempStart = getStartIndex.call({ lexer: this }, tempSrc);
            if (typeof tempStart === "number" && tempStart >= 0) {
              startIndex = Math.min(startIndex, tempStart);
            }
          });
          if (startIndex < Infinity && startIndex >= 0) {
            cutSrc = src10.substring(0, startIndex + 1);
          }
        }
        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {
          src10 = src10.substring(token.raw.length);
          if (token.raw.slice(-1) !== "_") {
            prevChar = token.raw.slice(-1);
          }
          keepPrevChar = true;
          lastToken = tokens[tokens.length - 1];
          if (lastToken && lastToken.type === "text") {
            lastToken.raw += token.raw;
            lastToken.text += token.text;
          } else {
            tokens.push(token);
          }
          continue;
        }
        if (src10) {
          const errMsg = "Infinite loop on byte: " + src10.charCodeAt(0);
          if (this.options.silent) {
            console.error(errMsg);
            break;
          } else {
            throw new Error(errMsg);
          }
        }
      }
      return tokens;
    }
  };
  var Renderer = class {
    constructor(options3) {
      this.options = options3 || defaults2;
    }
    code(code3, infostring, escaped) {
      const lang2 = (infostring || "").match(/\S*/)[0];
      if (this.options.highlight) {
        const out = this.options.highlight(code3, lang2);
        if (out != null && out !== code3) {
          escaped = true;
          code3 = out;
        }
      }
      code3 = code3.replace(/\n$/, "") + "\n";
      if (!lang2) {
        return "<pre><code>" + (escaped ? code3 : escape(code3, true)) + "</code></pre>\n";
      }
      return '<pre><code class="' + this.options.langPrefix + escape(lang2, true) + '">' + (escaped ? code3 : escape(code3, true)) + "</code></pre>\n";
    }
    /**
     * @param {string} quote
     */
    blockquote(quote) {
      return `<blockquote>
${quote}</blockquote>
`;
    }
    html(html2) {
      return html2;
    }
    /**
     * @param {string} text
     * @param {string} level
     * @param {string} raw
     * @param {any} slugger
     */
    heading(text6, level, raw, slugger) {
      if (this.options.headerIds) {
        const id3 = this.options.headerPrefix + slugger.slug(raw);
        return `<h${level} id="${id3}">${text6}</h${level}>
`;
      }
      return `<h${level}>${text6}</h${level}>
`;
    }
    hr() {
      return this.options.xhtml ? "<hr/>\n" : "<hr>\n";
    }
    list(body2, ordered, start2) {
      const type = ordered ? "ol" : "ul", startatt = ordered && start2 !== 1 ? ' start="' + start2 + '"' : "";
      return "<" + type + startatt + ">\n" + body2 + "</" + type + ">\n";
    }
    /**
     * @param {string} text
     */
    listitem(text6) {
      return `<li>${text6}</li>
`;
    }
    checkbox(checked2) {
      return "<input " + (checked2 ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
    }
    /**
     * @param {string} text
     */
    paragraph(text6) {
      return `<p>${text6}</p>
`;
    }
    /**
     * @param {string} header
     * @param {string} body
     */
    table(header3, body2) {
      if (body2)
        body2 = `<tbody>${body2}</tbody>`;
      return "<table>\n<thead>\n" + header3 + "</thead>\n" + body2 + "</table>\n";
    }
    /**
     * @param {string} content
     */
    tablerow(content3) {
      return `<tr>
${content3}</tr>
`;
    }
    tablecell(content3, flags) {
      const type = flags.header ? "th" : "td";
      const tag = flags.align ? `<${type} align="${flags.align}">` : `<${type}>`;
      return tag + content3 + `</${type}>
`;
    }
    /**
     * span level renderer
     * @param {string} text
     */
    strong(text6) {
      return `<strong>${text6}</strong>`;
    }
    /**
     * @param {string} text
     */
    em(text6) {
      return `<em>${text6}</em>`;
    }
    /**
     * @param {string} text
     */
    codespan(text6) {
      return `<code>${text6}</code>`;
    }
    br() {
      return this.options.xhtml ? "<br/>" : "<br>";
    }
    /**
     * @param {string} text
     */
    del(text6) {
      return `<del>${text6}</del>`;
    }
    /**
     * @param {string} href
     * @param {string} title
     * @param {string} text
     */
    link(href5, title5, text6) {
      href5 = cleanUrl(this.options.sanitize, this.options.baseUrl, href5);
      if (href5 === null) {
        return text6;
      }
      let out = '<a href="' + escape(href5) + '"';
      if (title5) {
        out += ' title="' + title5 + '"';
      }
      out += ">" + text6 + "</a>";
      return out;
    }
    /**
     * @param {string} href
     * @param {string} title
     * @param {string} text
     */
    image(href5, title5, text6) {
      href5 = cleanUrl(this.options.sanitize, this.options.baseUrl, href5);
      if (href5 === null) {
        return text6;
      }
      let out = `<img src="${href5}" alt="${text6}"`;
      if (title5) {
        out += ` title="${title5}"`;
      }
      out += this.options.xhtml ? "/>" : ">";
      return out;
    }
    text(text6) {
      return text6;
    }
  };
  var TextRenderer = class {
    // no need for block level renderers
    strong(text6) {
      return text6;
    }
    em(text6) {
      return text6;
    }
    codespan(text6) {
      return text6;
    }
    del(text6) {
      return text6;
    }
    html(text6) {
      return text6;
    }
    text(text6) {
      return text6;
    }
    link(href5, title5, text6) {
      return "" + text6;
    }
    image(href5, title5, text6) {
      return "" + text6;
    }
    br() {
      return "";
    }
  };
  var Slugger = class {
    constructor() {
      this.seen = {};
    }
    /**
     * @param {string} value
     */
    serialize(value18) {
      return value18.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
    }
    /**
     * Finds the next safe (unique) slug to use
     * @param {string} originalSlug
     * @param {boolean} isDryRun
     */
    getNextSafeSlug(originalSlug, isDryRun) {
      let slug2 = originalSlug;
      let occurenceAccumulator = 0;
      if (this.seen.hasOwnProperty(slug2)) {
        occurenceAccumulator = this.seen[originalSlug];
        do {
          occurenceAccumulator++;
          slug2 = originalSlug + "-" + occurenceAccumulator;
        } while (this.seen.hasOwnProperty(slug2));
      }
      if (!isDryRun) {
        this.seen[originalSlug] = occurenceAccumulator;
        this.seen[slug2] = 0;
      }
      return slug2;
    }
    /**
     * Convert string to unique id
     * @param {object} [options]
     * @param {boolean} [options.dryrun] Generates the next unique slug without
     * updating the internal accumulator.
     */
    slug(value18, options3 = {}) {
      const slug2 = this.serialize(value18);
      return this.getNextSafeSlug(slug2, options3.dryrun);
    }
  };
  var Parser = class _Parser {
    constructor(options3) {
      this.options = options3 || defaults2;
      this.options.renderer = this.options.renderer || new Renderer();
      this.renderer = this.options.renderer;
      this.renderer.options = this.options;
      this.textRenderer = new TextRenderer();
      this.slugger = new Slugger();
    }
    /**
     * Static Parse Method
     */
    static parse(tokens, options3) {
      const parser2 = new _Parser(options3);
      return parser2.parse(tokens);
    }
    /**
     * Static Parse Inline Method
     */
    static parseInline(tokens, options3) {
      const parser2 = new _Parser(options3);
      return parser2.parseInline(tokens);
    }
    /**
     * Parse Loop
     */
    parse(tokens, top4 = true) {
      let out = "", i2, j, k, l2, l3, row, cell, header3, body2, token, ordered, start2, loose, itemBody, item, checked2, task, checkbox, ret;
      const l = tokens.length;
      for (i2 = 0; i2 < l; i2++) {
        token = tokens[i2];
        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
          ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
          if (ret !== false || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(token.type)) {
            out += ret || "";
            continue;
          }
        }
        switch (token.type) {
          case "space": {
            continue;
          }
          case "hr": {
            out += this.renderer.hr();
            continue;
          }
          case "heading": {
            out += this.renderer.heading(
              this.parseInline(token.tokens),
              token.depth,
              unescape(this.parseInline(token.tokens, this.textRenderer)),
              this.slugger
            );
            continue;
          }
          case "code": {
            out += this.renderer.code(
              token.text,
              token.lang,
              token.escaped
            );
            continue;
          }
          case "table": {
            header3 = "";
            cell = "";
            l2 = token.header.length;
            for (j = 0; j < l2; j++) {
              cell += this.renderer.tablecell(
                this.parseInline(token.header[j].tokens),
                { header: true, align: token.align[j] }
              );
            }
            header3 += this.renderer.tablerow(cell);
            body2 = "";
            l2 = token.rows.length;
            for (j = 0; j < l2; j++) {
              row = token.rows[j];
              cell = "";
              l3 = row.length;
              for (k = 0; k < l3; k++) {
                cell += this.renderer.tablecell(
                  this.parseInline(row[k].tokens),
                  { header: false, align: token.align[k] }
                );
              }
              body2 += this.renderer.tablerow(cell);
            }
            out += this.renderer.table(header3, body2);
            continue;
          }
          case "blockquote": {
            body2 = this.parse(token.tokens);
            out += this.renderer.blockquote(body2);
            continue;
          }
          case "list": {
            ordered = token.ordered;
            start2 = token.start;
            loose = token.loose;
            l2 = token.items.length;
            body2 = "";
            for (j = 0; j < l2; j++) {
              item = token.items[j];
              checked2 = item.checked;
              task = item.task;
              itemBody = "";
              if (item.task) {
                checkbox = this.renderer.checkbox(checked2);
                if (loose) {
                  if (item.tokens.length > 0 && item.tokens[0].type === "paragraph") {
                    item.tokens[0].text = checkbox + " " + item.tokens[0].text;
                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === "text") {
                      item.tokens[0].tokens[0].text = checkbox + " " + item.tokens[0].tokens[0].text;
                    }
                  } else {
                    item.tokens.unshift({
                      type: "text",
                      text: checkbox
                    });
                  }
                } else {
                  itemBody += checkbox;
                }
              }
              itemBody += this.parse(item.tokens, loose);
              body2 += this.renderer.listitem(itemBody, task, checked2);
            }
            out += this.renderer.list(body2, ordered, start2);
            continue;
          }
          case "html": {
            out += this.renderer.html(token.text);
            continue;
          }
          case "paragraph": {
            out += this.renderer.paragraph(this.parseInline(token.tokens));
            continue;
          }
          case "text": {
            body2 = token.tokens ? this.parseInline(token.tokens) : token.text;
            while (i2 + 1 < l && tokens[i2 + 1].type === "text") {
              token = tokens[++i2];
              body2 += "\n" + (token.tokens ? this.parseInline(token.tokens) : token.text);
            }
            out += top4 ? this.renderer.paragraph(body2) : body2;
            continue;
          }
          default: {
            const errMsg = 'Token with "' + token.type + '" type was not found.';
            if (this.options.silent) {
              console.error(errMsg);
              return;
            } else {
              throw new Error(errMsg);
            }
          }
        }
      }
      return out;
    }
    /**
     * Parse Inline Tokens
     */
    parseInline(tokens, renderer) {
      renderer = renderer || this.renderer;
      let out = "", i2, token, ret;
      const l = tokens.length;
      for (i2 = 0; i2 < l; i2++) {
        token = tokens[i2];
        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
          ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
          if (ret !== false || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(token.type)) {
            out += ret || "";
            continue;
          }
        }
        switch (token.type) {
          case "escape": {
            out += renderer.text(token.text);
            break;
          }
          case "html": {
            out += renderer.html(token.text);
            break;
          }
          case "link": {
            out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));
            break;
          }
          case "image": {
            out += renderer.image(token.href, token.title, token.text);
            break;
          }
          case "strong": {
            out += renderer.strong(this.parseInline(token.tokens, renderer));
            break;
          }
          case "em": {
            out += renderer.em(this.parseInline(token.tokens, renderer));
            break;
          }
          case "codespan": {
            out += renderer.codespan(token.text);
            break;
          }
          case "br": {
            out += renderer.br();
            break;
          }
          case "del": {
            out += renderer.del(this.parseInline(token.tokens, renderer));
            break;
          }
          case "text": {
            out += renderer.text(token.text);
            break;
          }
          default: {
            const errMsg = 'Token with "' + token.type + '" type was not found.';
            if (this.options.silent) {
              console.error(errMsg);
              return;
            } else {
              throw new Error(errMsg);
            }
          }
        }
      }
      return out;
    }
  };
  function marked(src10, opt, callback) {
    if (typeof src10 === "undefined" || src10 === null) {
      throw new Error("marked(): input parameter is undefined or null");
    }
    if (typeof src10 !== "string") {
      throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(src10) + ", string expected");
    }
    if (typeof opt === "function") {
      callback = opt;
      opt = null;
    }
    opt = merge3({}, marked.defaults, opt || {});
    checkSanitizeDeprecation(opt);
    if (callback) {
      const highlight = opt.highlight;
      let tokens;
      try {
        tokens = Lexer.lex(src10, opt);
      } catch (e2) {
        return callback(e2);
      }
      const done = function(err) {
        let out;
        if (!err) {
          try {
            if (opt.walkTokens) {
              marked.walkTokens(tokens, opt.walkTokens);
            }
            out = Parser.parse(tokens, opt);
          } catch (e2) {
            err = e2;
          }
        }
        opt.highlight = highlight;
        return err ? callback(err) : callback(null, out);
      };
      if (!highlight || highlight.length < 3) {
        return done();
      }
      delete opt.highlight;
      if (!tokens.length)
        return done();
      let pending = 0;
      marked.walkTokens(tokens, function(token) {
        if (token.type === "code") {
          pending++;
          setTimeout(() => {
            highlight(token.text, token.lang, function(err, code3) {
              if (err) {
                return done(err);
              }
              if (code3 != null && code3 !== token.text) {
                token.text = code3;
                token.escaped = true;
              }
              pending--;
              if (pending === 0) {
                done();
              }
            });
          }, 0);
        }
      });
      if (pending === 0) {
        done();
      }
      return;
    }
    try {
      const tokens = Lexer.lex(src10, opt);
      if (opt.walkTokens) {
        marked.walkTokens(tokens, opt.walkTokens);
      }
      return Parser.parse(tokens, opt);
    } catch (e2) {
      e2.message += "\nPlease report this to https://github.com/markedjs/marked.";
      if (opt.silent) {
        return "<p>An error occurred:</p><pre>" + escape(e2.message + "", true) + "</pre>";
      }
      throw e2;
    }
  }
  marked.options = marked.setOptions = function(opt) {
    merge3(marked.defaults, opt);
    changeDefaults(marked.defaults);
    return marked;
  };
  marked.getDefaults = getDefaults;
  marked.defaults = defaults2;
  marked.use = function(...args) {
    const opts = merge3({}, ...args);
    const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };
    let hasExtensions;
    args.forEach((pack) => {
      if (pack.extensions) {
        hasExtensions = true;
        pack.extensions.forEach((ext) => {
          if (!ext.name) {
            throw new Error("extension name required");
          }
          if (ext.renderer) {
            const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;
            if (prevRenderer) {
              extensions.renderers[ext.name] = function(...args2) {
                let ret = ext.renderer.apply(this, args2);
                if (ret === false) {
                  ret = prevRenderer.apply(this, args2);
                }
                return ret;
              };
            } else {
              extensions.renderers[ext.name] = ext.renderer;
            }
          }
          if (ext.tokenizer) {
            if (!ext.level || ext.level !== "block" && ext.level !== "inline") {
              throw new Error("extension level must be 'block' or 'inline'");
            }
            if (extensions[ext.level]) {
              extensions[ext.level].unshift(ext.tokenizer);
            } else {
              extensions[ext.level] = [ext.tokenizer];
            }
            if (ext.start) {
              if (ext.level === "block") {
                if (extensions.startBlock) {
                  extensions.startBlock.push(ext.start);
                } else {
                  extensions.startBlock = [ext.start];
                }
              } else if (ext.level === "inline") {
                if (extensions.startInline) {
                  extensions.startInline.push(ext.start);
                } else {
                  extensions.startInline = [ext.start];
                }
              }
            }
          }
          if (ext.childTokens) {
            extensions.childTokens[ext.name] = ext.childTokens;
          }
        });
      }
      if (pack.renderer) {
        const renderer = marked.defaults.renderer || new Renderer();
        for (const prop9 in pack.renderer) {
          const prevRenderer = renderer[prop9];
          renderer[prop9] = (...args2) => {
            let ret = pack.renderer[prop9].apply(renderer, args2);
            if (ret === false) {
              ret = prevRenderer.apply(renderer, args2);
            }
            return ret;
          };
        }
        opts.renderer = renderer;
      }
      if (pack.tokenizer) {
        const tokenizer = marked.defaults.tokenizer || new Tokenizer();
        for (const prop9 in pack.tokenizer) {
          const prevTokenizer = tokenizer[prop9];
          tokenizer[prop9] = (...args2) => {
            let ret = pack.tokenizer[prop9].apply(tokenizer, args2);
            if (ret === false) {
              ret = prevTokenizer.apply(tokenizer, args2);
            }
            return ret;
          };
        }
        opts.tokenizer = tokenizer;
      }
      if (pack.walkTokens) {
        const walkTokens2 = marked.defaults.walkTokens;
        opts.walkTokens = function(token) {
          pack.walkTokens.call(this, token);
          if (walkTokens2) {
            walkTokens2.call(this, token);
          }
        };
      }
      if (hasExtensions) {
        opts.extensions = extensions;
      }
      marked.setOptions(opts);
    });
  };
  marked.walkTokens = function(tokens, callback) {
    for (const token of tokens) {
      callback.call(marked, token);
      switch (token.type) {
        case "table": {
          for (const cell of token.header) {
            marked.walkTokens(cell.tokens, callback);
          }
          for (const row of token.rows) {
            for (const cell of row) {
              marked.walkTokens(cell.tokens, callback);
            }
          }
          break;
        }
        case "list": {
          marked.walkTokens(token.items, callback);
          break;
        }
        default: {
          if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {
            marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {
              marked.walkTokens(token[childTokens], callback);
            });
          } else if (token.tokens) {
            marked.walkTokens(token.tokens, callback);
          }
        }
      }
    }
  };
  marked.parseInline = function(src10, opt) {
    if (typeof src10 === "undefined" || src10 === null) {
      throw new Error("marked.parseInline(): input parameter is undefined or null");
    }
    if (typeof src10 !== "string") {
      throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(src10) + ", string expected");
    }
    opt = merge3({}, marked.defaults, opt || {});
    checkSanitizeDeprecation(opt);
    try {
      const tokens = Lexer.lexInline(src10, opt);
      if (opt.walkTokens) {
        marked.walkTokens(tokens, opt.walkTokens);
      }
      return Parser.parseInline(tokens, opt);
    } catch (e2) {
      e2.message += "\nPlease report this to https://github.com/markedjs/marked.";
      if (opt.silent) {
        return "<p>An error occurred:</p><pre>" + escape(e2.message + "", true) + "</pre>";
      }
      throw e2;
    }
  };
  marked.Parser = Parser;
  marked.parser = Parser.parse;
  marked.Renderer = Renderer;
  marked.TextRenderer = TextRenderer;
  marked.Lexer = Lexer;
  marked.lexer = Lexer.lex;
  marked.Tokenizer = Tokenizer;
  marked.Slugger = Slugger;
  marked.parse = marked;
  var options2 = marked.options;
  var setOptions = marked.setOptions;
  var use = marked.use;
  var walkTokens = marked.walkTokens;
  var parseInline = marked.parseInline;
  var parser = Parser.parse;
  var lexer = Lexer.lex;

  // output/Conduit.Foreign.Marked/foreign.js
  marked.setOptions({
    pedantic: false,
    gfm: true
  });
  var markedImpl = (str) => marked(str);

  // output/Conduit.Foreign.Marked/index.js
  var marked2 = function(str) {
    return markedImpl(str);
  };

  // output/Conduit.Component.RawHTML/index.js
  var bind24 = /* @__PURE__ */ bind(bindHalogenM);
  var get10 = /* @__PURE__ */ get(monadStateHalogenM);
  var for_6 = /* @__PURE__ */ for_(applicativeHalogenM)(foldableMaybe);
  var discard12 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_14 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var SetInnerHTML = /* @__PURE__ */ function() {
    function SetInnerHTML2() {
    }
    ;
    SetInnerHTML2.value = new SetInnerHTML2();
    return SetInnerHTML2;
  }();
  var Receive11 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var component8 = function(dictMonadAff) {
    var liftEffect10 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    var render = function(state3) {
      return div3([ref2(state3.elemRef)])([]);
    };
    var handleAction = function(v) {
      if (v instanceof SetInnerHTML) {
        return bind24(get10)(function(v1) {
          return bind24(getHTMLElementRef(v1.elemRef))(function(mbElem) {
            return for_6(mbElem)(function(el) {
              return bind24(get10)(function(v2) {
                return liftEffect10(unsafeSetInnerHTML(el)(marked2(v2.markdown)));
              });
            });
          });
        });
      }
      ;
      if (v instanceof Receive11) {
        return discard12(modify_14(function(v1) {
          var $23 = {};
          for (var $24 in v1) {
            if ({}.hasOwnProperty.call(v1, $24)) {
              $23[$24] = v1[$24];
            }
            ;
          }
          ;
          $23.markdown = v.value0.markdown;
          return $23;
        }))(function() {
          return handleAction(SetInnerHTML.value);
        });
      }
      ;
      throw new Error("Failed pattern match at Conduit.Component.RawHTML (line 45, column 18 - line 55, column 32): " + [v.constructor.name]);
    };
    return mkComponent({
      initialState: function(v) {
        return {
          elemRef: "markdown",
          markdown: v.markdown
        };
      },
      render,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        finalize: defaultEval.finalize,
        handleAction,
        receive: function($30) {
          return Just.create(Receive11.create($30));
        },
        initialize: new Just(SetInnerHTML.value)
      })
    });
  };

  // output/Conduit.Page.ViewArticle/index.js
  var eq10 = /* @__PURE__ */ eq(eqRelation);
  var _Success3 = /* @__PURE__ */ _Success(/* @__PURE__ */ choiceForget(monoidFirst));
  var map51 = /* @__PURE__ */ map(functorMaybe);
  var eq14 = /* @__PURE__ */ eq(eqUsername);
  var slot5 = /* @__PURE__ */ slot()({
    reflectSymbol: function() {
      return "rawHtml";
    }
  })(ordUnit);
  var map119 = /* @__PURE__ */ map(functorArray);
  var append11 = /* @__PURE__ */ append(semigroupArray);
  var value17 = /* @__PURE__ */ value13(isPropString);
  var type_24 = /* @__PURE__ */ type_17(isPropButtonType);
  var prop8 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "article";
    }
  })()();
  var prop14 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "author";
    }
  })()();
  var parTraverse_2 = /* @__PURE__ */ parTraverse_(parallelHalogenM)(foldableArray);
  var bind25 = /* @__PURE__ */ bind(bindHalogenM);
  var get11 = /* @__PURE__ */ get(monadStateHalogenM);
  var notEq5 = /* @__PURE__ */ notEq(eqSlug);
  var discard13 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_15 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var modify11 = /* @__PURE__ */ modify2(monadStateHalogenM);
  var when9 = /* @__PURE__ */ when(applicativeHalogenM);
  var for_7 = /* @__PURE__ */ for_(applicativeHalogenM)(foldableMaybe);
  var $$void11 = /* @__PURE__ */ $$void(functorHalogenM);
  var selectEq5 = /* @__PURE__ */ selectEq(/* @__PURE__ */ eqMaybe(/* @__PURE__ */ eqRec()(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(eqRowNil)()({
    reflectSymbol: function() {
      return "username";
    }
  })(eqUsername))()({
    reflectSymbol: function() {
      return "image";
    }
  })(/* @__PURE__ */ eqMaybe(eqAvatar)))()({
    reflectSymbol: function() {
      return "bio";
    }
  })(/* @__PURE__ */ eqMaybe(eqString)))));
  var Initialize8 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive12 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var GetArticle = /* @__PURE__ */ function() {
    function GetArticle2() {
    }
    ;
    GetArticle2.value = new GetArticle2();
    return GetArticle2;
  }();
  var GetComments = /* @__PURE__ */ function() {
    function GetComments2() {
    }
    ;
    GetComments2.value = new GetComments2();
    return GetComments2;
  }();
  var AddComment = /* @__PURE__ */ function() {
    function AddComment2(value0) {
      this.value0 = value0;
    }
    ;
    AddComment2.create = function(value0) {
      return new AddComment2(value0);
    };
    return AddComment2;
  }();
  var UpdateCommentText = /* @__PURE__ */ function() {
    function UpdateCommentText2(value0) {
      this.value0 = value0;
    }
    ;
    UpdateCommentText2.create = function(value0) {
      return new UpdateCommentText2(value0);
    };
    return UpdateCommentText2;
  }();
  var FollowAuthor2 = /* @__PURE__ */ function() {
    function FollowAuthor3() {
    }
    ;
    FollowAuthor3.value = new FollowAuthor3();
    return FollowAuthor3;
  }();
  var UnfollowAuthor2 = /* @__PURE__ */ function() {
    function UnfollowAuthor3() {
    }
    ;
    UnfollowAuthor3.value = new UnfollowAuthor3();
    return UnfollowAuthor3;
  }();
  var FavoriteArticle3 = /* @__PURE__ */ function() {
    function FavoriteArticle4() {
    }
    ;
    FavoriteArticle4.value = new FavoriteArticle4();
    return FavoriteArticle4;
  }();
  var UnfavoriteArticle3 = /* @__PURE__ */ function() {
    function UnfavoriteArticle4() {
    }
    ;
    UnfavoriteArticle4.value = new UnfavoriteArticle4();
    return UnfavoriteArticle4;
  }();
  var DeleteArticle = /* @__PURE__ */ function() {
    function DeleteArticle2() {
    }
    ;
    DeleteArticle2.value = new DeleteArticle2();
    return DeleteArticle2;
  }();
  var DeleteComment = /* @__PURE__ */ function() {
    function DeleteComment2(value0) {
      this.value0 = value0;
    }
    ;
    DeleteComment2.create = function(value0) {
      return new DeleteComment2(value0);
    };
    return DeleteComment2;
  }();
  var component9 = function(dictMonadAff) {
    var component1 = component8(dictMonadAff);
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var liftEffect10 = liftEffect(monadEffectHalogenM(MonadEffect0));
    var connect2 = connect(MonadEffect0);
    return function(dictMonadStore) {
      var connect1 = connect2(dictMonadStore);
      return function(dictManageArticle) {
        var manageArticleHalogenM2 = manageArticleHalogenM(dictManageArticle);
        var getArticle2 = getArticle(manageArticleHalogenM2);
        var favorite2 = favorite(dictManageArticle);
        var unfavorite2 = unfavorite(dictManageArticle);
        var deleteArticle2 = deleteArticle(manageArticleHalogenM2);
        return function(dictManageComment) {
          var manageCommentHalogenM2 = manageCommentHalogenM(dictManageComment);
          var getComments2 = getComments(manageCommentHalogenM2);
          var createComment2 = createComment(manageCommentHalogenM2);
          var deleteComment2 = deleteComment(manageCommentHalogenM2);
          return function(dictManageUser) {
            var follow2 = follow(dictManageUser);
            var unfollow2 = unfollow(dictManageUser);
            return function(dictNavigate) {
              var navigate2 = navigate(navigateHalogenM(dictNavigate));
              var render = function(state3) {
                var viewComment = function(comment) {
                  return div3([css("card")])([div3([css("card-block")])([p([css("card-text")])([text5(comment.body)])]), div3([css("card-footer")])([a([css("comment-author"), safeHref(new Profile(comment.author.username))])([img([css("comment-author-img"), src9(toStringWithDefault(comment.author.image))])]), text5(" "), a([css("comment-author"), safeHref(new Profile(comment.author.username))])([text5(toString2(comment.author.username))]), text5(" "), span4([css("date-posted")])([text5(toDisplayMonthDayYear(comment.createdAt))]), whenElem(eq10(comment.author.relation)(You.value))(function(v) {
                    return span4([css("mod-options")])([i([css("ion-trash-a"), onClick(function(v1) {
                      return new DeleteComment(comment.id);
                    })])([])]);
                  })])]);
                };
                var mbArticle = preview(_Success3)(state3.article);
                var markdown = fromMaybe("Failed to load article!")(map51(function(v) {
                  return v.body;
                })(mbArticle));
                var articleMeta = function(article2) {
                  return div3([css("article-meta")])([a([safeHref(new Profile(article2.author.username))])([img([src9(toStringWithDefault(article2.author.image))])]), div3([css("info")])([a([css("author"), safeHref(new Profile(article2.author.username))])([text5(toString2(article2.author.username))]), span4([css("date")])([text5(toDisplayMonthDayYear(article2.createdAt))])]), function() {
                    if (state3.currentUser instanceof Just && eq14(state3.currentUser.value0.username)(article2.author.username)) {
                      return span_([a([css("btn btn-outline-secondary btn-sm"), safeHref(new EditArticle(article2.slug))])([i([css("ion-edit")])([]), text5(" Edit Article")]), text5(" "), button([css("btn btn-outline-danger btn-sm"), onClick(function(v) {
                        return DeleteArticle.value;
                      })])([i([css("ion-trash-a")])([]), text5(" Delete Article")])]);
                    }
                    ;
                    return span_([followButton(FollowAuthor2.value)(UnfollowAuthor2.value)(article2.author), text5(" "), favoriteButton(Medium.value)(FavoriteArticle3.value)(UnfavoriteArticle3.value)(article2)]);
                  }()]);
                };
                var banner = function(article2) {
                  return div3([css("banner")])([div3([css("container")])([h1_([text5(article2.title)]), articleMeta(article2)])]);
                };
                var content3 = function(article2) {
                  var renderTag2 = function(str) {
                    return li([css("tag-default tag-pill tag-outline")])([text5(str)]);
                  };
                  return div3([css("container page")])([div3([css("col-xs-12")])([slot5($$Proxy.value)(unit)(component1)({
                    markdown
                  })(absurd), ul([css("tag-list")])(map119(renderTag2)(article2.tagList)), hr_, div3([css("article-actions")])([articleMeta(article2)]), div3([css("row")])([div3([css("col-xs-12 col-md-8 offset-md-2")])(append11([maybeElem(state3.currentUser)(function(profile) {
                    return form([css("card comment-form"), onSubmit(function(ev) {
                      return new AddComment(ev);
                    })])([div3([css("card-block")])([textarea([css("form-control"), placeholder3("Write a comment..."), rows4(3), value17(state3.myComment), onValueInput(UpdateCommentText.create)])]), div3([css("card-footer")])([img([css("comment-author-img"), src9(toStringWithDefault(profile.image))]), button([css("btn btn-sm btn-primary"), type_24(ButtonSubmit.value)])([text5("Post Comment")])])]);
                  })])(function() {
                    var v = preview(_Success3)(state3.comments);
                    if (v instanceof Nothing) {
                      return [text5("")];
                    }
                    ;
                    if (v instanceof Just) {
                      return map119(viewComment)(v.value0);
                    }
                    ;
                    throw new Error("Failed pattern match at Conduit.Page.ViewArticle (line 236, column 25 - line 238, column 58): " + [v.constructor.name]);
                  }()))])])]);
                };
                return div3([css("article-page")])([header(state3.currentUser)(new ViewArticle(state3.slug)), maybeElem(mbArticle)(banner), maybeElem(mbArticle)(content3), footer2]);
              };
              var initialState = function(v) {
                return {
                  article: NotAsked.value,
                  comments: NotAsked.value,
                  myComment: "",
                  currentUser: v.context,
                  slug: v.input
                };
              };
              var _article3 = function(dictWander) {
                var $162 = prop8($$Proxy.value)(dictWander.Strong0());
                var $163 = _Success(dictWander.Choice1());
                return function($164) {
                  return $162($163($164));
                };
              };
              var _author2 = function(dictWander) {
                var $165 = _article3(dictWander);
                var $166 = prop14($$Proxy.value)(dictWander.Strong0());
                return function($167) {
                  return $165($166($167));
                };
              };
              var handleAction = function(v) {
                if (v instanceof Initialize8) {
                  return parTraverse_2(fork)([handleAction(GetArticle.value), handleAction(GetComments.value)]);
                }
                ;
                if (v instanceof Receive12) {
                  return bind25(get11)(function(st) {
                    var $125 = notEq5(st.slug)(v.value0.input);
                    if ($125) {
                      return discard13(modify_15(function(v1) {
                        var $126 = {};
                        for (var $127 in v1) {
                          if ({}.hasOwnProperty.call(v1, $127)) {
                            $126[$127] = v1[$127];
                          }
                          ;
                        }
                        ;
                        $126.slug = v.value0.input;
                        $126.currentUser = v.value0.context;
                        return $126;
                      }))(function() {
                        return handleAction(Initialize8.value);
                      });
                    }
                    ;
                    return modify_15(function(v1) {
                      var $129 = {};
                      for (var $130 in v1) {
                        if ({}.hasOwnProperty.call(v1, $130)) {
                          $129[$130] = v1[$130];
                        }
                        ;
                      }
                      ;
                      $129.currentUser = v.value0.context;
                      return $129;
                    });
                  });
                }
                ;
                if (v instanceof GetArticle) {
                  return bind25(modify11(function(v1) {
                    var $135 = {};
                    for (var $136 in v1) {
                      if ({}.hasOwnProperty.call(v1, $136)) {
                        $135[$136] = v1[$136];
                      }
                      ;
                    }
                    ;
                    $135.article = Loading2.value;
                    return $135;
                  }))(function(st) {
                    return bind25(getArticle2(st.slug))(function(article2) {
                      return modify_15(function(v1) {
                        var $138 = {};
                        for (var $139 in v1) {
                          if ({}.hasOwnProperty.call(v1, $139)) {
                            $138[$139] = v1[$139];
                          }
                          ;
                        }
                        ;
                        $138.article = fromMaybe2(article2);
                        return $138;
                      });
                    });
                  });
                }
                ;
                if (v instanceof GetComments) {
                  return bind25(modify11(function(v1) {
                    var $141 = {};
                    for (var $142 in v1) {
                      if ({}.hasOwnProperty.call(v1, $142)) {
                        $141[$142] = v1[$142];
                      }
                      ;
                    }
                    ;
                    $141.comments = Loading2.value;
                    return $141;
                  }))(function(st) {
                    return bind25(getComments2(st.slug))(function(comments) {
                      return modify_15(function(v1) {
                        var $144 = {};
                        for (var $145 in v1) {
                          if ({}.hasOwnProperty.call(v1, $145)) {
                            $144[$145] = v1[$145];
                          }
                          ;
                        }
                        ;
                        $144.comments = fromMaybe2(comments);
                        return $144;
                      });
                    });
                  });
                }
                ;
                if (v instanceof AddComment) {
                  return discard13(liftEffect10(preventDefault(v.value0)))(function() {
                    return bind25(get11)(function(st) {
                      return when9(st.myComment !== "")(for_7(preview(_Success3)(st.article))(function(article2) {
                        var comment = {
                          body: st.myComment
                        };
                        return discard13($$void11(createComment2(article2.slug)(comment)))(function() {
                          return bind25(modify11(function(v1) {
                            var $147 = {};
                            for (var $148 in v1) {
                              if ({}.hasOwnProperty.call(v1, $148)) {
                                $147[$148] = v1[$148];
                              }
                              ;
                            }
                            ;
                            $147.comments = Loading2.value;
                            return $147;
                          }))(function() {
                            return bind25(getComments2(st.slug))(function(mbComments) {
                              return modify_15(function(v1) {
                                var $150 = {};
                                for (var $151 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $151)) {
                                    $150[$151] = v1[$151];
                                  }
                                  ;
                                }
                                ;
                                $150.comments = fromMaybe2(mbComments);
                                $150.myComment = "";
                                return $150;
                              });
                            });
                          });
                        });
                      }));
                    });
                  });
                }
                ;
                if (v instanceof UpdateCommentText) {
                  return modify_15(function(v1) {
                    var $154 = {};
                    for (var $155 in v1) {
                      if ({}.hasOwnProperty.call(v1, $155)) {
                        $154[$155] = v1[$155];
                      }
                      ;
                    }
                    ;
                    $154.myComment = v.value0;
                    return $154;
                  });
                }
                ;
                if (v instanceof FollowAuthor2) {
                  return follow2(function(dictWander) {
                    return _author2(dictWander);
                  });
                }
                ;
                if (v instanceof UnfollowAuthor2) {
                  return unfollow2(function(dictWander) {
                    return _author2(dictWander);
                  });
                }
                ;
                if (v instanceof FavoriteArticle3) {
                  return favorite2(function(dictWander) {
                    return _article3(dictWander);
                  });
                }
                ;
                if (v instanceof UnfavoriteArticle3) {
                  return unfavorite2(function(dictWander) {
                    return _article3(dictWander);
                  });
                }
                ;
                if (v instanceof DeleteArticle) {
                  return bind25(get11)(function(st) {
                    return discard13(for_7(preview(_Success3)(st.article))(function($168) {
                      return deleteArticle2(function(v1) {
                        return v1.slug;
                      }($168));
                    }))(function() {
                      return navigate2(Home.value);
                    });
                  });
                }
                ;
                if (v instanceof DeleteComment) {
                  return bind25(get11)(function(st) {
                    return discard13(deleteComment2(st.slug)(v.value0))(function() {
                      return bind25(getComments2(st.slug))(function(comments) {
                        return modify_15(function(v1) {
                          var $158 = {};
                          for (var $159 in v1) {
                            if ({}.hasOwnProperty.call(v1, $159)) {
                              $158[$159] = v1[$159];
                            }
                            ;
                          }
                          ;
                          $158.comments = fromMaybe2(comments);
                          return $158;
                        });
                      });
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Conduit.Page.ViewArticle (line 103, column 18 - line 163, column 52): " + [v.constructor.name]);
              };
              return connect1(selectEq5(function(v) {
                return v.currentUser;
              }))(mkComponent({
                initialState,
                render,
                "eval": mkEval({
                  handleQuery: defaultEval.handleQuery,
                  finalize: defaultEval.finalize,
                  handleAction,
                  initialize: new Just(Initialize8.value),
                  receive: function($169) {
                    return Just.create(Receive12.create($169));
                  }
                })
              }));
            };
          };
        };
      };
    };
  };

  // output/Conduit.Component.Router/index.js
  var bind26 = /* @__PURE__ */ bind(bindHalogenM);
  var get12 = /* @__PURE__ */ get(monadStateHalogenM);
  var discard14 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var when10 = /* @__PURE__ */ when(applicativeHalogenM);
  var notEq6 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(eqRoute));
  var elem3 = /* @__PURE__ */ elem(foldableArray)(eqRoute);
  var modify_16 = /* @__PURE__ */ modify_2(monadStateHalogenM);
  var pure24 = /* @__PURE__ */ pure(applicativeHalogenM);
  var map52 = /* @__PURE__ */ map(functorHalogenM);
  var loginIsSymbol = {
    reflectSymbol: function() {
      return "login";
    }
  };
  var slot6 = /* @__PURE__ */ slot()(loginIsSymbol)(ordUnit);
  var slot_2 = /* @__PURE__ */ slot_();
  var slot_1 = /* @__PURE__ */ slot_2({
    reflectSymbol: function() {
      return "home";
    }
  })(ordUnit);
  var slot_22 = /* @__PURE__ */ slot_2(loginIsSymbol)(ordUnit);
  var slot_3 = /* @__PURE__ */ slot_2({
    reflectSymbol: function() {
      return "register";
    }
  })(ordUnit);
  var slot_4 = /* @__PURE__ */ slot_2({
    reflectSymbol: function() {
      return "settings";
    }
  })(ordUnit);
  var slot_5 = /* @__PURE__ */ slot_2({
    reflectSymbol: function() {
      return "editor";
    }
  })(ordUnit);
  var slot_6 = /* @__PURE__ */ slot_2({
    reflectSymbol: function() {
      return "viewArticle";
    }
  })(ordUnit);
  var slot_7 = /* @__PURE__ */ slot_2({
    reflectSymbol: function() {
      return "profile";
    }
  })(ordUnit);
  var selectEq6 = /* @__PURE__ */ selectEq(/* @__PURE__ */ eqMaybe(/* @__PURE__ */ eqRec()(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(/* @__PURE__ */ eqRowCons(eqRowNil)()({
    reflectSymbol: function() {
      return "username";
    }
  })(eqUsername))()({
    reflectSymbol: function() {
      return "image";
    }
  })(/* @__PURE__ */ eqMaybe(eqAvatar)))()({
    reflectSymbol: function() {
      return "bio";
    }
  })(/* @__PURE__ */ eqMaybe(eqString)))));
  var Navigate = /* @__PURE__ */ function() {
    function Navigate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Navigate2.create = function(value0) {
      return function(value1) {
        return new Navigate2(value0, value1);
      };
    };
    return Navigate2;
  }();
  var Initialize9 = /* @__PURE__ */ function() {
    function Initialize10() {
    }
    ;
    Initialize10.value = new Initialize10();
    return Initialize10;
  }();
  var Receive13 = /* @__PURE__ */ function() {
    function Receive14(value0) {
      this.value0 = value0;
    }
    ;
    Receive14.create = function(value0) {
      return new Receive14(value0);
    };
    return Receive14;
  }();
  var component10 = function(dictMonadAff) {
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var liftEffect10 = liftEffect(monadEffectHalogenM(MonadEffect0));
    var component1 = component4(dictMonadAff);
    var component22 = component3(dictMonadAff);
    var component32 = component6(dictMonadAff);
    var component42 = component7(dictMonadAff);
    var component52 = component2(dictMonadAff);
    var component62 = component9(dictMonadAff);
    var component72 = component5(dictMonadAff);
    var connect2 = connect(MonadEffect0);
    return function(dictMonadStore) {
      var component82 = component22(dictMonadStore);
      var component92 = component52(dictMonadStore);
      var component102 = component62(dictMonadStore);
      var component112 = component72(dictMonadStore);
      var connect1 = connect2(dictMonadStore);
      return function(dictNow) {
        return function(dictLogMessages) {
          return function(dictNavigate) {
            var navigate2 = navigate(navigateHalogenM(dictNavigate));
            var component12 = component1(dictNavigate);
            var component13 = component82(dictNavigate);
            var component14 = component42(dictNavigate);
            var component15 = component92(dictNavigate);
            return function(dictManageUser) {
              var component16 = component12(dictManageUser);
              var component17 = component32(dictManageUser)(dictNavigate);
              var component18 = component14(dictManageUser);
              var component19 = component112(dictManageUser);
              return function(dictManageArticle) {
                var component20 = component15(dictManageArticle);
                var component21 = component102(dictManageArticle);
                var component222 = component19(dictManageArticle);
                return function(dictManageComment) {
                  var component23 = component21(dictManageComment)(dictManageUser)(dictNavigate);
                  return function(dictManageTag) {
                    var component24 = component13(dictManageTag)(dictManageArticle);
                    var handleQuery = function(v) {
                      return bind26(get12)(function(v1) {
                        return discard14(when10(notEq6(v1.route)(new Just(v.value0)))(function() {
                          var v2 = isJust(v1.currentUser) && elem3(v.value0)([Login.value, Register.value]);
                          if (!v2) {
                            return modify_16(function(v3) {
                              var $117 = {};
                              for (var $118 in v3) {
                                if ({}.hasOwnProperty.call(v3, $118)) {
                                  $117[$118] = v3[$118];
                                }
                                ;
                              }
                              ;
                              $117.route = new Just(v.value0);
                              return $117;
                            });
                          }
                          ;
                          return pure24(unit);
                        }()))(function() {
                          return pure24(new Just(v.value1));
                        });
                      });
                    };
                    var handleAction = function(v) {
                      if (v instanceof Initialize9) {
                        return bind26(map52(function() {
                          var $144 = parse2(routeCodec);
                          return function($145) {
                            return hush($144($145));
                          };
                        }())(liftEffect10(getHash)))(function(initialRoute) {
                          return navigate2(fromMaybe(Home.value)(initialRoute));
                        });
                      }
                      ;
                      if (v instanceof Receive13) {
                        return modify_16(function(v1) {
                          var $125 = {};
                          for (var $126 in v1) {
                            if ({}.hasOwnProperty.call(v1, $126)) {
                              $125[$126] = v1[$126];
                            }
                            ;
                          }
                          ;
                          $125.currentUser = v.value0.context;
                          return $125;
                        });
                      }
                      ;
                      throw new Error("Failed pattern match at Conduit.Component.Router (line 88, column 18 - line 96, column 48): " + [v.constructor.name]);
                    };
                    var authorize = function(mbProfile) {
                      return function(html2) {
                        if (mbProfile instanceof Nothing) {
                          return slot6($$Proxy.value)(unit)(component16)({
                            redirect: false
                          })(absurd);
                        }
                        ;
                        if (mbProfile instanceof Just) {
                          return html2;
                        }
                        ;
                        throw new Error("Failed pattern match at Conduit.Component.Router (line 114, column 30 - line 118, column 11): " + [mbProfile.constructor.name]);
                      };
                    };
                    var render = function(v) {
                      if (v.route instanceof Just) {
                        if (v.route.value0 instanceof Home) {
                          return slot_1($$Proxy.value)(unit)(component24)(unit);
                        }
                        ;
                        if (v.route.value0 instanceof Login) {
                          return slot_22($$Proxy.value)(unit)(component16)({
                            redirect: true
                          });
                        }
                        ;
                        if (v.route.value0 instanceof Register) {
                          return slot_3($$Proxy.value)(unit)(component17)(unit);
                        }
                        ;
                        if (v.route.value0 instanceof Settings) {
                          return authorize(v.currentUser)(slot_4($$Proxy.value)(unit)(component18)(unit));
                        }
                        ;
                        if (v.route.value0 instanceof Editor) {
                          return authorize(v.currentUser)(slot_5($$Proxy.value)(unit)(component20)(Nothing.value));
                        }
                        ;
                        if (v.route.value0 instanceof EditArticle) {
                          return authorize(v.currentUser)(slot_5($$Proxy.value)(unit)(component20)(new Just(v.route.value0.value0)));
                        }
                        ;
                        if (v.route.value0 instanceof ViewArticle) {
                          return slot_6($$Proxy.value)(unit)(component23)(v.route.value0.value0);
                        }
                        ;
                        if (v.route.value0 instanceof Profile) {
                          return slot_7($$Proxy.value)(unit)(component222)({
                            username: v.route.value0.value0,
                            tab: ArticlesTab.value
                          });
                        }
                        ;
                        if (v.route.value0 instanceof Favorites) {
                          return slot_7($$Proxy.value)(unit)(component222)({
                            username: v.route.value0.value0,
                            tab: FavoritesTab.value
                          });
                        }
                        ;
                        throw new Error("Failed pattern match at Conduit.Component.Router (line 122, column 15 - line 140, column 95): " + [v.route.value0.constructor.name]);
                      }
                      ;
                      if (v.route instanceof Nothing) {
                        return div_([text5("Oh no! That page wasn't found.")]);
                      }
                      ;
                      throw new Error("Failed pattern match at Conduit.Component.Router (line 121, column 35 - line 142, column 59): " + [v.route.constructor.name]);
                    };
                    return connect1(selectEq6(function(v) {
                      return v.currentUser;
                    }))(mkComponent({
                      initialState: function(v) {
                        return {
                          route: Nothing.value,
                          currentUser: v.context
                        };
                      },
                      render,
                      "eval": mkEval({
                        finalize: defaultEval.finalize,
                        handleQuery,
                        handleAction,
                        receive: function($146) {
                          return Just.create(Receive13.create($146));
                        },
                        initialize: new Just(Initialize9.value)
                      })
                    }));
                  };
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Util/index.js
  var bind27 = /* @__PURE__ */ bind(bindAff);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped12 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped5 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure25 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped13 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure113 = /* @__PURE__ */ pure(applicativeEffect);
  var map53 = /* @__PURE__ */ map(functorEffect);
  var discard15 = /* @__PURE__ */ discard(discardUnit);
  var throwError3 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query5) {
    return bind27(liftEffect5(bindFlipped12(composeKleisliFlipped5(function() {
      var $16 = querySelector(query5);
      return function($17) {
        return $16(toParentNode($17));
      };
    }())(document))(windowImpl)))(function(mel) {
      return pure25(bindFlipped13(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure113(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do3() {
      var rs = bindFlipped12(readyState)(bindFlipped12(document)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map53(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return callback(new Right(unit));
        })();
        addEventListener2(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener2(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard15(bindAff)(awaitLoad)(function() {
    return bind27(selectElement("body"))(function(body2) {
      return maybe(throwError3(error("Could not find body")))(pure25)(body2);
    });
  });

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_8 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_8(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var initDriverState = function(component12) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do3() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty7)();
            var childrenOut = $$new(empty7)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty3))();
            var forks = $$new(empty3)();
            var ds = {
              component: component12,
              state: component12.initialState(input3),
              refs: empty3,
              children: empty7,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped14 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup9 = /* @__PURE__ */ lookup4(ordSubscriptionId);
  var bind110 = /* @__PURE__ */ bind(bindAff);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard16 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard16(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork2(monadForkAff);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var pure26 = /* @__PURE__ */ pure(applicativeAff);
  var map54 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var map120 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map211 = /* @__PURE__ */ map(functorMaybe);
  var insert11 = /* @__PURE__ */ insert4(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete9 = /* @__PURE__ */ $$delete5(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert12 = /* @__PURE__ */ insert4(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup12 = /* @__PURE__ */ lookup4(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup4(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter3 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref3) {
      return function __do3() {
        var v = read(ref3)();
        var subs = read(v.subscriptions)();
        return traverse_5(unsubscribe)(bindFlipped14(lookup9(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref3) {
    return function(au) {
      return bind110(liftEffect6(read(ref3)))(function(v) {
        if (v instanceof Nothing) {
          return au;
        }
        ;
        if (v instanceof Just) {
          return liftEffect6(write(new Just(new Cons(au, v.value0)))(ref3));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard1(liftEffect6(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind110(liftEffect6(f))(function(result) {
          return bind110(liftEffect6(read(lchs)))(function(v) {
            return discard1(traverse_22(fork3)(v.finalizers))(function() {
              return discard1(parSequence_2(v.initializers))(function() {
                return pure26(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref3) {
      return bind110(liftEffect6(read(ref3)))(function(v) {
        return liftEffect6(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v.fresh));
      });
    };
  };
  var evalQ = function(render) {
    return function(ref3) {
      return function(q2) {
        return bind110(liftEffect6(read(ref3)))(function(v) {
          return evalM(render)(ref3)(v["component"]["eval"](new Query(map54(Just.create)(liftCoyoneda(q2)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render) {
    return function(initRef) {
      return function(v) {
        var evalChildQuery = function(ref3) {
          return function(cqb) {
            return bind110(liftEffect6(read(ref3)))(function(v1) {
              return unChildQueryBox(function(v2) {
                var evalChild = function(v3) {
                  return parallel2(bind110(liftEffect6(read(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render)(ds.selfRef)(v2.value1);
                    })(dsx);
                  }));
                };
                return map120(v2.value2)(sequential2(v2.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref3) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind110(liftEffect6(read(ref3)))(function(v2) {
                var v3 = v1.value0(v2.state);
                if (unsafeRefEq(v2.state)(v3.value1)) {
                  return pure26(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard1(liftEffect6(write({
                    component: v2.component,
                    refs: v2.refs,
                    children: v2.children,
                    childrenIn: v2.childrenIn,
                    childrenOut: v2.childrenOut,
                    selfRef: v2.selfRef,
                    handlerRef: v2.handlerRef,
                    pendingQueries: v2.pendingQueries,
                    pendingOuts: v2.pendingOuts,
                    pendingHandlers: v2.pendingHandlers,
                    rendering: v2.rendering,
                    fresh: v2.fresh,
                    subscriptions: v2.subscriptions,
                    forks: v2.forks,
                    lifecycleHandlers: v2.lifecycleHandlers,
                    state: v3.value1
                  })(ref3)))(function() {
                    return discard1(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref3)))(function() {
                      return pure26(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind110(fresh(SubscriptionId)(ref3))(function(sid) {
                return bind110(liftEffect6(subscribe(v1.value0(sid))(function(act3) {
                  return handleAff(evalF(render)(ref3)(new Action(act3)));
                })))(function(finalize) {
                  return bind110(liftEffect6(read(ref3)))(function(v2) {
                    return discard1(liftEffect6(modify_(map211(insert11(sid)(finalize)))(v2.subscriptions)))(function() {
                      return pure26(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard1(liftEffect6(unsubscribe3(v1.value0)(ref3)))(function() {
                return pure26(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref3)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind110(liftEffect6(read(ref3)))(function(v2) {
                return bind110(liftEffect6(read(v2.handlerRef)))(function(handler3) {
                  return discard1(queueOrRun(v2.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure26(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp(function() {
                var $118 = evalM(render)(ref3);
                return function($119) {
                  return parallel2($118($119));
                };
              }())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind110(fresh(ForkId)(ref3))(function(fid) {
                return bind110(liftEffect6(read(ref3)))(function(v2) {
                  return bind110(liftEffect6($$new(false)))(function(doneRef) {
                    return bind110(fork3($$finally(liftEffect6(function __do3() {
                      modify_($$delete9(fid))(v2.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render)(ref3)(v1.value0))))(function(fiber) {
                      return discard1(liftEffect6(unlessM2(read(doneRef))(modify_(insert12(fid)(fiber))(v2.forks))))(function() {
                        return pure26(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind110(liftEffect6(read(ref3)))(function(v2) {
                return bind110(liftEffect6(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(joinFiber)(lookup12(v1.value0)(forkMap)))(function() {
                    return pure26(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind110(liftEffect6(read(ref3)))(function(v2) {
                return bind110(liftEffect6(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(killFiber(error("Cancelled")))(lookup12(v1.value0)(forkMap)))(function() {
                    return pure26(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind110(liftEffect6(read(ref3)))(function(v2) {
                return pure26(v1.value1(lookup22(v1.value0)(v2.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v);
      };
    };
  };
  var evalF = function(render) {
    return function(ref3) {
      return function(v) {
        if (v instanceof RefUpdate) {
          return liftEffect6(flip(modify_)(ref3)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter3($$const(v.value1))(v.value0)(st.refs)
            };
          })));
        }
        ;
        if (v instanceof Action) {
          return bind110(liftEffect6(read(ref3)))(function(v1) {
            return evalM(render)(ref3)(v1["component"]["eval"](new Action2(v.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind28 = /* @__PURE__ */ bind(bindEffect);
  var discard17 = /* @__PURE__ */ discard(discardUnit);
  var for_8 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork2(monadForkAff);
  var bindFlipped15 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard22 = /* @__PURE__ */ discard17(bindAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var liftEffect7 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure27 = /* @__PURE__ */ pure(applicativeEffect);
  var map55 = /* @__PURE__ */ map(functorEffect);
  var pure114 = /* @__PURE__ */ pure(applicativeAff);
  var when11 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void12 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft5 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind111 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  }();
  var handlePending = function(ref3) {
    return function __do3() {
      var queue = read(ref3)();
      write(Nothing.value)(ref3)();
      return for_8(queue)(function() {
        var $58 = traverse_6(fork4);
        return function($59) {
          return handleAff($58(reverse2($59)));
        };
      }())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v) {
    return function __do3() {
      bindFlipped15(traverse_23(traverse_33(unsubscribe)))(read(v.subscriptions))();
      write(Nothing.value)(v.subscriptions)();
      bindFlipped15(traverse_33(function() {
        var $60 = killFiber(error("finalized"));
        return function($61) {
          return handleAff($60($61));
        };
      }()))(read(v.forks))();
      return write(empty3)(v.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component12) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_(function(handlers) {
                return {
                  initializers: new Cons(discard22(parSequence_3(reverse2(handlers.initializers)))(function() {
                    return discard22(parentInitializer)(function() {
                      return liftEffect7(function __do3() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j) {
              return unComponent(function(c) {
                return function __do3() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c)(j)(handler3)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped15(unDriverStateX(function() {
                    var $62 = render(lchs);
                    return function($63) {
                      return $62(function(v) {
                        return v.selfRef;
                      }($63));
                    };
                  }()))(read($$var2))();
                  bindFlipped15(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot7) {
                  return function __do3() {
                    var childrenIn = map55(slot7.pop)(read(childrenInRef))();
                    var $$var2 = function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do4() {
                            flip(write)(st.handlerRef)(function() {
                              var $64 = maybe(pure114(unit))(handler3);
                              return function($65) {
                                return $64(slot7.output($65));
                              };
                            }())();
                            return handleAff(evalM(render)(st.selfRef)(st["component"]["eval"](new Receive(slot7.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)(function() {
                          var $66 = maybe(pure114(unit))(handler3);
                          return function($67) {
                            return $66(slot7.output($67));
                          };
                        }())(slot7.input)(slot7.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    }();
                    var isDuplicate = map55(function($68) {
                      return isJust(slot7.get($68));
                    })(read(childrenOutRef))();
                    when11(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_(slot7.set($$var2))(childrenOutRef)();
                    return bind28(read($$var2))(renderStateX2(function(v) {
                      if (v instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v instanceof Just) {
                        return pure27(renderSpec2.renderChild(v.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render = function(lchs) {
          return function($$var2) {
            return function __do3() {
              var v = read($$var2)();
              var shouldProcessHandlers = map55(isNothing)(read(v.pendingHandlers))();
              when11(shouldProcessHandlers)(write(new Just(Nil.value))(v.pendingHandlers))();
              write(empty7)(v.childrenOut)();
              write(v.children)(v.childrenIn)();
              var handler3 = function() {
                var $69 = queueOrRun(v.pendingHandlers);
                var $70 = evalF(render)(v.selfRef);
                return function($71) {
                  return $69($$void12($70($71)));
                };
              }();
              var childHandler = function() {
                var $72 = queueOrRun(v.pendingQueries);
                return function($73) {
                  return $72(handler3(Action.create($73)));
                };
              }();
              var rendering = renderSpec2.render(function($74) {
                return handleAff(handler3($74));
              })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
              var children2 = read(v.childrenOut)();
              var childrenIn = read(v.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do4() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_)(v.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when11(shouldProcessHandlers)(flip(tailRecM3)(unit)(function(v1) {
                return function __do4() {
                  var handlers = read(v.pendingHandlers)();
                  write(new Just(Nil.value))(v.pendingHandlers)();
                  traverse_23(function() {
                    var $75 = traverse_6(fork4);
                    return function($76) {
                      return handleAff($75(reverse2($76)));
                    };
                  }())(handlers)();
                  var mmore = read(v.pendingHandlers)();
                  var $51 = maybe(false)($$null3)(mmore);
                  if ($51) {
                    return voidLeft5(write(Nothing.value)(v.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do3() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v) {
                return function __do4() {
                  var dsx = read(v)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref3) {
            return function(q2) {
              return bind111(liftEffect7(read(disposed)))(function(v) {
                if (v) {
                  return pure114(Nothing.value);
                }
                ;
                return evalQ(render)(ref3)(q2);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do3() {
                var v = read(disposed)();
                if (v) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do4() {
                    var v2 = liftEffect1(read(v1.selfRef))();
                    return for_8(v2.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind111(liftEffect7(newLifecycleHandlers))(function(lchs) {
          return bind111(liftEffect7($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do3() {
              var sio = create3();
              var dsx = bindFlipped15(read)(runComponent(lchs)(function() {
                var $77 = notify(sio.listener);
                return function($78) {
                  return liftEffect7($77($78));
                };
              }())(i2)(component12))();
              return unDriverStateX(function(st) {
                return pure27({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map56 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ function() {
    var $6 = map56(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  }();
  var nextSibling = /* @__PURE__ */ function() {
    var $15 = map56(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  }();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy13 = function(name16, moduleName, init4) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2)
        return val;
      if (state3 === 1)
        throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init4();
      state3 = 2;
      return val;
    };
  };
  var $$void13 = /* @__PURE__ */ $$void(functorEffect);
  var pure28 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_7 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap14 = /* @__PURE__ */ unwrap();
  var when12 = /* @__PURE__ */ when(applicativeEffect);
  var not3 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity23 = /* @__PURE__ */ identity(categoryFn);
  var bind112 = /* @__PURE__ */ bind(bindAff);
  var liftEffect8 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map57 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped16 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v) {
    return function(v1) {
      return function(v2) {
        if (v1 instanceof Just && v2 instanceof Just) {
          return $$void13(insertBefore(v)(v1.value0)(v2.value0));
        }
        ;
        if (v1 instanceof Nothing && v2 instanceof Just) {
          return $$void13(appendChild(v)(v2.value0));
        }
        ;
        return pure28(unit);
      };
    };
  };
  var removeChild3 = function(v) {
    return function __do3() {
      var npn = parentNode2(v.node)();
      return traverse_7(function(pn) {
        return removeChild2(v.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document2) {
        var getNode = unRenderStateX(function(v) {
          return v.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap14)(spec);
          var $lazy_patch = $runtime_lazy13("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot7) {
              if (st instanceof Just) {
                if (slot7 instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot7.value0);
                }
                ;
                if (slot7 instanceof ThunkSlot) {
                  var step$prime = step3(st.value0, slot7.value0);
                  return mkStep(new Step(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot7.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot7);
            };
          });
          var $lazy_render = $runtime_lazy13("render", "Halogen.VDom.Driver", function() {
            return function(slot7) {
              if (slot7 instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot7.value0);
              }
              ;
              if (slot7 instanceof ThunkSlot) {
                var step4 = buildThunk2(slot7.value0);
                return mkStep(new Step(extract2(step4), new Just(step4), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot7.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy13("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch2 = $lazy_patch(91);
          var render = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document2
        };
      };
    };
  };
  var renderSpec = function(document2) {
    return function(container) {
      var render = function(handler3) {
        return function(child) {
          return function(v) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do3() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler3)(renderChildRef)(document2);
                  var machine = buildVDom(spec)(v);
                  var node = extract2(machine);
                  $$void13(appendChild(node)(toNode(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do3() {
                  write(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step3(v1.value0.machine, v);
                  var newNode = extract2(machine$prime);
                  when12(not3(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render,
        renderChild: identity23,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component12) {
    return function(i2) {
      return function(element3) {
        return bind112(liftEffect8(map57(toDocument)(bindFlipped16(document)(windowImpl))))(function(document2) {
          return runUI(renderSpec(document2)(element3))(component12)(i2);
        });
      };
    };
  };

  // output/Main/index.js
  var bind29 = /* @__PURE__ */ bind(bindAff);
  var liftEffect9 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure29 = /* @__PURE__ */ pure(applicativeAff);
  var lmap6 = /* @__PURE__ */ lmap(bifunctorEither);
  var bind113 = /* @__PURE__ */ bind(bindEither);
  var object9 = /* @__PURE__ */ object2()(/* @__PURE__ */ rowListCodecCons(rowListCodecNil)()()({
    reflectSymbol: function() {
      return "user";
    }
  })(refl));
  var component11 = /* @__PURE__ */ component10(monadAffAppM)(monadStoreAppM)(nowAppM)(logMessagesAppM)(navigateAppM)(manageUserAppM)(manageArticleAppM)(manageCommentAppM)(manageTagAppM);
  var $$void14 = /* @__PURE__ */ $$void(functorAff);
  var matchesWith2 = /* @__PURE__ */ matchesWith(foldableEither);
  var when13 = /* @__PURE__ */ when(applicativeEffect);
  var notEq7 = /* @__PURE__ */ notEq(/* @__PURE__ */ eqMaybe(eqRoute));
  var main2 = /* @__PURE__ */ runHalogenAff(/* @__PURE__ */ bind29(awaitBody)(function(body2) {
    return bind29(bind29(liftEffect9(readToken))(function(v) {
      if (v instanceof Nothing) {
        return pure29(Nothing.value);
      }
      ;
      if (v instanceof Just) {
        var requestOptions = {
          endpoint: User.value,
          method: Get.value
        };
        return bind29(request2(defaultRequest2("https://api.realworld.io")(new Just(v.value0))(requestOptions)))(function(res) {
          var user = function() {
            if (res instanceof Left) {
              return new Left(printError(res.value0));
            }
            ;
            if (res instanceof Right) {
              return lmap6(printJsonDecodeError)(bind113(decode(object9("User")({
                user: json3
              }))(res.value0.body))(function(u2) {
                return decode(profileCodec)(u2.user);
              }));
            }
            ;
            throw new Error("Failed pattern match at Main (line 89, column 16 - line 94, column 50): " + [res.constructor.name]);
          }();
          return pure29(hush(user));
        });
      }
      ;
      throw new Error("Failed pattern match at Main (line 79, column 62 - line 96, column 23): " + [v.constructor.name]);
    }))(function(v) {
      var initialStore = {
        baseUrl: "https://api.realworld.io",
        logLevel: Dev.value,
        currentUser: v
      };
      return bind29(runAppM(initialStore)(component11))(function(rootComponent) {
        return bind29(runUI2(rootComponent)(unit)(body2))(function(halogenIO) {
          return $$void14(liftEffect9(matchesWith2(parse2(routeCodec))(function(old) {
            return function($$new2) {
              return when13(notEq7(old)(new Just($$new2)))(launchAff_(bind29(halogenIO.query(mkTell(Navigate.create($$new2))))(function(_response) {
                return pure29(unit);
              })));
            };
          })));
        });
      });
    });
  }));

  // <stdin>
  main2();
})();
